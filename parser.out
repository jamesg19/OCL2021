Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLAS
    COMILLASIMPLE
    CORCHETE_ABRE
    CORCHETE_CIERRA
    ESPBARRAINVERTIVA
    ESPCOMILLAS
    ESPCOMILLASIMPLE
    ESPLINEA
    ESPRETORNO
    ESPTAB
    NEW
    READ

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> variables
Rule 5     instruccion -> if
Rule 6     instruccion -> switch
Rule 7     instruccion -> while
Rule 8     instruccion -> for
Rule 9     instruccion -> print
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion -> returnn finInstruccion
Rule 13    instruccion -> main
Rule 14    instruccion -> funcion_void
Rule 15    instruccion -> llamada_fvoid finInstruccion
Rule 16    instruccion -> error PTCOMA
Rule 17    variables -> var IDENTIFICADOR finInstruccion
Rule 18    variables -> var IDENTIFICADOR IGUAL expresion finInstruccion
Rule 19    variables -> var IDENTIFICADOR IGUAL NULL finInstruccion
Rule 20    variables -> IDENTIFICADOR IGUAL expresion finInstruccion
Rule 21    variables -> IDENTIFICADOR IGUAL NULL finInstruccion
Rule 22    var -> VAR
Rule 23    variables -> IDENTIFICADOR INCREMENTO finInstruccion
Rule 24    variables -> IDENTIFICADOR DECREMENTO finInstruccion
Rule 25    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 26    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 27    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
Rule 28    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
Rule 29    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
Rule 30    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
Rule 31    listacases -> listacases case
Rule 32    listacases -> case
Rule 33    case -> CASE expresion DOSPUNTOS instrucciones
Rule 34    default -> DEFAULT DOSPUNTOS instrucciones
Rule 35    main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 36    while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 37    for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 38    for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 39    declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion
Rule 40    declaracionfor2 -> IDENTIFICADOR IGUAL expresion
Rule 41    actualizacion -> IDENTIFICADOR INCREMENTO
Rule 42    actualizacion -> IDENTIFICADOR DECREMENTO
Rule 43    actualizacion -> IDENTIFICADOR IGUAL expresion
Rule 44    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 45    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
Rule 46    returnn -> RETURN expresion
Rule 47    parametros_llamada -> parametros_llamada COMA parametro_llamada
Rule 48    parametros_llamada -> parametro_llamada
Rule 49    parametro_llamada -> expresion
Rule 50    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 51    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 52    parametros -> parametros COMA parametro
Rule 53    parametros -> parametro
Rule 54    parametro -> INT IDENTIFICADOR
Rule 55    parametro -> STRING IDENTIFICADOR
Rule 56    parametro -> DOUBLE IDENTIFICADOR
Rule 57    parametro -> BOOLEAN IDENTIFICADOR
Rule 58    parametro -> CHAR IDENTIFICADOR
Rule 59    print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
Rule 60    break -> BREAK finInstruccion
Rule 61    continue -> CONTINUE finInstruccion
Rule 62    finInstruccion -> PTCOMA
Rule 63    finInstruccion -> <empty>
Rule 64    expresion -> expresion MAS expresion
Rule 65    expresion -> expresion MENOS expresion
Rule 66    expresion -> expresion POR expresion
Rule 67    expresion -> expresion DIV expresion
Rule 68    expresion -> expresion POT expresion
Rule 69    expresion -> expresion MODULO expresion
Rule 70    expresion -> expresion IGUALACION expresion
Rule 71    expresion -> expresion DIREFENCIACION expresion
Rule 72    expresion -> expresion MAYORQ expresion
Rule 73    expresion -> expresion MENORQ expresion
Rule 74    expresion -> expresion MAYORIGUAL expresion
Rule 75    expresion -> expresion MENORIGUAL expresion
Rule 76    expresion -> expresion OR expresion
Rule 77    expresion -> expresion AND expresion
Rule 78    expresion -> MENOS expresion
Rule 79    expresion -> NOT expresion
Rule 80    expresion -> IDENTIFICADOR INCREMENTO
Rule 81    expresion -> IDENTIFICADOR DECREMENTO
Rule 82    expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 83    expresion -> ENTERO
Rule 84    expresion -> DECIMAL
Rule 85    expresion -> TRUE
Rule 86    expresion -> FALSE
Rule 87    expresion -> IDENTIFICADOR
Rule 88    expresion -> CADENA
Rule 89    expresion -> CHART
Rule 90    expresion -> llamada_fvoid
Rule 91    expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 92    expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 93    expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 94    expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 95    expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA

Terminals, with rules where they appear

AND                  : 77
BOOLEAN              : 57
BREAK                : 60
CADENA               : 88
CASE                 : 33
CHAR                 : 58
CHART                : 89
COMA                 : 47 52
COMILLAS             : 
COMILLASIMPLE        : 
CONTINUE             : 61
CORCHETE_ABRE        : 
CORCHETE_CIERRA      : 
DECIMAL              : 84
DECREMENTO           : 24 42 81
DEFAULT              : 34
DIREFENCIACION       : 71
DIV                  : 67
DOSPUNTOS            : 33 34
DOUBLE               : 56
ELSE                 : 26 27
ENTERO               : 83
ESPBARRAINVERTIVA    : 
ESPCOMILLAS          : 
ESPCOMILLASIMPLE     : 
ESPLINEA             : 
ESPRETORNO           : 
ESPTAB               : 
FALSE                : 86
FOR                  : 37 38
FUNC                 : 50 51
IDENTIFICADOR        : 17 18 19 20 21 23 24 39 40 41 42 43 44 45 50 51 54 55 56 57 58 80 81 87
IF                   : 25 26 27
IGUAL                : 18 19 20 21 39 40 43
IGUALACION           : 70
INCREMENTO           : 23 41 80
INT                  : 54
LLAVE_ABRE           : 25 26 26 27 28 29 30 35 36 37 38 50 51
LLAVE_CIERRA         : 25 26 26 27 28 29 30 35 36 37 38 50 51
MAIN                 : 35
MAS                  : 64
MAYORIGUAL           : 74
MAYORQ               : 72
MENORIGUAL           : 75
MENORQ               : 73
MENOS                : 65 78
MODULO               : 69
NEW                  : 
NOT                  : 79
NULL                 : 19 21
OR                   : 76
PARENTESIS_ABRE      : 25 26 27 28 29 30 35 36 37 38 44 45 50 51 59 82 91 92 93 94 95
PARENTESIS_CIERRA    : 25 26 27 28 29 30 35 36 37 38 44 45 50 51 59 82 91 92 93 94 95
POR                  : 66
POT                  : 68
PRINT                : 59
PTCOMA               : 16 37 37 38 38 62
READ                 : 
RETURN               : 46
ROUND                : 94
STRING               : 55
SWITCH               : 28 29 30
TOLOWER              : 92
TOUPPER              : 91
TRUE                 : 85
TRUNCATE             : 93
TYPEOF               : 95
VAR                  : 22 39
WHILE                : 36
error                : 16

Nonterminals, with rules where they appear

actualizacion        : 37 38
break                : 10
case                 : 31 32
continue             : 11
declaracionfor1      : 37
declaracionfor2      : 38
default              : 29 30
expresion            : 18 20 25 26 27 28 29 30 33 36 37 38 39 40 43 46 49 59 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 79 82 91 92 93 94 95
finInstruccion       : 12 15 17 18 19 20 21 23 24 59 60 61
for                  : 8
funcion_void         : 14
if                   : 5 27
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 25 26 26 27 33 34 35 36 37 38 50 51
listacases           : 28 29 31
llamada_fvoid        : 15 90
main                 : 13
parametro            : 52 53
parametro_llamada    : 47 48
parametros           : 51 52
parametros_llamada   : 45 47
print                : 9
returnn              : 12
switch               : 6
var                  : 17 18 19
variables            : 4
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    $end            reduce using rule 1 (init -> instrucciones .)
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 3

    (3) instrucciones -> instruccion .

    error           reduce using rule 3 (instrucciones -> instruccion .)
    IDENTIFICADOR   reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    FUNC            reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVE_CIERRA    reduce using rule 3 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 3 (instrucciones -> instruccion .)
    CASE            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> variables .

    error           reduce using rule 4 (instruccion -> variables .)
    IDENTIFICADOR   reduce using rule 4 (instruccion -> variables .)
    IF              reduce using rule 4 (instruccion -> variables .)
    SWITCH          reduce using rule 4 (instruccion -> variables .)
    WHILE           reduce using rule 4 (instruccion -> variables .)
    FOR             reduce using rule 4 (instruccion -> variables .)
    PRINT           reduce using rule 4 (instruccion -> variables .)
    BREAK           reduce using rule 4 (instruccion -> variables .)
    CONTINUE        reduce using rule 4 (instruccion -> variables .)
    RETURN          reduce using rule 4 (instruccion -> variables .)
    MAIN            reduce using rule 4 (instruccion -> variables .)
    FUNC            reduce using rule 4 (instruccion -> variables .)
    VAR             reduce using rule 4 (instruccion -> variables .)
    $end            reduce using rule 4 (instruccion -> variables .)
    LLAVE_CIERRA    reduce using rule 4 (instruccion -> variables .)
    DEFAULT         reduce using rule 4 (instruccion -> variables .)
    CASE            reduce using rule 4 (instruccion -> variables .)


state 5

    (5) instruccion -> if .

    error           reduce using rule 5 (instruccion -> if .)
    IDENTIFICADOR   reduce using rule 5 (instruccion -> if .)
    IF              reduce using rule 5 (instruccion -> if .)
    SWITCH          reduce using rule 5 (instruccion -> if .)
    WHILE           reduce using rule 5 (instruccion -> if .)
    FOR             reduce using rule 5 (instruccion -> if .)
    PRINT           reduce using rule 5 (instruccion -> if .)
    BREAK           reduce using rule 5 (instruccion -> if .)
    CONTINUE        reduce using rule 5 (instruccion -> if .)
    RETURN          reduce using rule 5 (instruccion -> if .)
    MAIN            reduce using rule 5 (instruccion -> if .)
    FUNC            reduce using rule 5 (instruccion -> if .)
    VAR             reduce using rule 5 (instruccion -> if .)
    $end            reduce using rule 5 (instruccion -> if .)
    LLAVE_CIERRA    reduce using rule 5 (instruccion -> if .)
    DEFAULT         reduce using rule 5 (instruccion -> if .)
    CASE            reduce using rule 5 (instruccion -> if .)


state 6

    (6) instruccion -> switch .

    error           reduce using rule 6 (instruccion -> switch .)
    IDENTIFICADOR   reduce using rule 6 (instruccion -> switch .)
    IF              reduce using rule 6 (instruccion -> switch .)
    SWITCH          reduce using rule 6 (instruccion -> switch .)
    WHILE           reduce using rule 6 (instruccion -> switch .)
    FOR             reduce using rule 6 (instruccion -> switch .)
    PRINT           reduce using rule 6 (instruccion -> switch .)
    BREAK           reduce using rule 6 (instruccion -> switch .)
    CONTINUE        reduce using rule 6 (instruccion -> switch .)
    RETURN          reduce using rule 6 (instruccion -> switch .)
    MAIN            reduce using rule 6 (instruccion -> switch .)
    FUNC            reduce using rule 6 (instruccion -> switch .)
    VAR             reduce using rule 6 (instruccion -> switch .)
    $end            reduce using rule 6 (instruccion -> switch .)
    LLAVE_CIERRA    reduce using rule 6 (instruccion -> switch .)
    DEFAULT         reduce using rule 6 (instruccion -> switch .)
    CASE            reduce using rule 6 (instruccion -> switch .)


state 7

    (7) instruccion -> while .

    error           reduce using rule 7 (instruccion -> while .)
    IDENTIFICADOR   reduce using rule 7 (instruccion -> while .)
    IF              reduce using rule 7 (instruccion -> while .)
    SWITCH          reduce using rule 7 (instruccion -> while .)
    WHILE           reduce using rule 7 (instruccion -> while .)
    FOR             reduce using rule 7 (instruccion -> while .)
    PRINT           reduce using rule 7 (instruccion -> while .)
    BREAK           reduce using rule 7 (instruccion -> while .)
    CONTINUE        reduce using rule 7 (instruccion -> while .)
    RETURN          reduce using rule 7 (instruccion -> while .)
    MAIN            reduce using rule 7 (instruccion -> while .)
    FUNC            reduce using rule 7 (instruccion -> while .)
    VAR             reduce using rule 7 (instruccion -> while .)
    $end            reduce using rule 7 (instruccion -> while .)
    LLAVE_CIERRA    reduce using rule 7 (instruccion -> while .)
    DEFAULT         reduce using rule 7 (instruccion -> while .)
    CASE            reduce using rule 7 (instruccion -> while .)


state 8

    (8) instruccion -> for .

    error           reduce using rule 8 (instruccion -> for .)
    IDENTIFICADOR   reduce using rule 8 (instruccion -> for .)
    IF              reduce using rule 8 (instruccion -> for .)
    SWITCH          reduce using rule 8 (instruccion -> for .)
    WHILE           reduce using rule 8 (instruccion -> for .)
    FOR             reduce using rule 8 (instruccion -> for .)
    PRINT           reduce using rule 8 (instruccion -> for .)
    BREAK           reduce using rule 8 (instruccion -> for .)
    CONTINUE        reduce using rule 8 (instruccion -> for .)
    RETURN          reduce using rule 8 (instruccion -> for .)
    MAIN            reduce using rule 8 (instruccion -> for .)
    FUNC            reduce using rule 8 (instruccion -> for .)
    VAR             reduce using rule 8 (instruccion -> for .)
    $end            reduce using rule 8 (instruccion -> for .)
    LLAVE_CIERRA    reduce using rule 8 (instruccion -> for .)
    DEFAULT         reduce using rule 8 (instruccion -> for .)
    CASE            reduce using rule 8 (instruccion -> for .)


state 9

    (9) instruccion -> print .

    error           reduce using rule 9 (instruccion -> print .)
    IDENTIFICADOR   reduce using rule 9 (instruccion -> print .)
    IF              reduce using rule 9 (instruccion -> print .)
    SWITCH          reduce using rule 9 (instruccion -> print .)
    WHILE           reduce using rule 9 (instruccion -> print .)
    FOR             reduce using rule 9 (instruccion -> print .)
    PRINT           reduce using rule 9 (instruccion -> print .)
    BREAK           reduce using rule 9 (instruccion -> print .)
    CONTINUE        reduce using rule 9 (instruccion -> print .)
    RETURN          reduce using rule 9 (instruccion -> print .)
    MAIN            reduce using rule 9 (instruccion -> print .)
    FUNC            reduce using rule 9 (instruccion -> print .)
    VAR             reduce using rule 9 (instruccion -> print .)
    $end            reduce using rule 9 (instruccion -> print .)
    LLAVE_CIERRA    reduce using rule 9 (instruccion -> print .)
    DEFAULT         reduce using rule 9 (instruccion -> print .)
    CASE            reduce using rule 9 (instruccion -> print .)


state 10

    (10) instruccion -> break .

    error           reduce using rule 10 (instruccion -> break .)
    IDENTIFICADOR   reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    SWITCH          reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    FOR             reduce using rule 10 (instruccion -> break .)
    PRINT           reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    RETURN          reduce using rule 10 (instruccion -> break .)
    MAIN            reduce using rule 10 (instruccion -> break .)
    FUNC            reduce using rule 10 (instruccion -> break .)
    VAR             reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLAVE_CIERRA    reduce using rule 10 (instruccion -> break .)
    DEFAULT         reduce using rule 10 (instruccion -> break .)
    CASE            reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    error           reduce using rule 11 (instruccion -> continue .)
    IDENTIFICADOR   reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    SWITCH          reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    FOR             reduce using rule 11 (instruccion -> continue .)
    PRINT           reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    RETURN          reduce using rule 11 (instruccion -> continue .)
    MAIN            reduce using rule 11 (instruccion -> continue .)
    FUNC            reduce using rule 11 (instruccion -> continue .)
    VAR             reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLAVE_CIERRA    reduce using rule 11 (instruccion -> continue .)
    DEFAULT         reduce using rule 11 (instruccion -> continue .)
    CASE            reduce using rule 11 (instruccion -> continue .)


state 12

    (12) instruccion -> returnn . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 31

state 13

    (13) instruccion -> main .

    error           reduce using rule 13 (instruccion -> main .)
    IDENTIFICADOR   reduce using rule 13 (instruccion -> main .)
    IF              reduce using rule 13 (instruccion -> main .)
    SWITCH          reduce using rule 13 (instruccion -> main .)
    WHILE           reduce using rule 13 (instruccion -> main .)
    FOR             reduce using rule 13 (instruccion -> main .)
    PRINT           reduce using rule 13 (instruccion -> main .)
    BREAK           reduce using rule 13 (instruccion -> main .)
    CONTINUE        reduce using rule 13 (instruccion -> main .)
    RETURN          reduce using rule 13 (instruccion -> main .)
    MAIN            reduce using rule 13 (instruccion -> main .)
    FUNC            reduce using rule 13 (instruccion -> main .)
    VAR             reduce using rule 13 (instruccion -> main .)
    $end            reduce using rule 13 (instruccion -> main .)
    LLAVE_CIERRA    reduce using rule 13 (instruccion -> main .)
    DEFAULT         reduce using rule 13 (instruccion -> main .)
    CASE            reduce using rule 13 (instruccion -> main .)


state 14

    (14) instruccion -> funcion_void .

    error           reduce using rule 14 (instruccion -> funcion_void .)
    IDENTIFICADOR   reduce using rule 14 (instruccion -> funcion_void .)
    IF              reduce using rule 14 (instruccion -> funcion_void .)
    SWITCH          reduce using rule 14 (instruccion -> funcion_void .)
    WHILE           reduce using rule 14 (instruccion -> funcion_void .)
    FOR             reduce using rule 14 (instruccion -> funcion_void .)
    PRINT           reduce using rule 14 (instruccion -> funcion_void .)
    BREAK           reduce using rule 14 (instruccion -> funcion_void .)
    CONTINUE        reduce using rule 14 (instruccion -> funcion_void .)
    RETURN          reduce using rule 14 (instruccion -> funcion_void .)
    MAIN            reduce using rule 14 (instruccion -> funcion_void .)
    FUNC            reduce using rule 14 (instruccion -> funcion_void .)
    VAR             reduce using rule 14 (instruccion -> funcion_void .)
    $end            reduce using rule 14 (instruccion -> funcion_void .)
    LLAVE_CIERRA    reduce using rule 14 (instruccion -> funcion_void .)
    DEFAULT         reduce using rule 14 (instruccion -> funcion_void .)
    CASE            reduce using rule 14 (instruccion -> funcion_void .)


state 15

    (15) instruccion -> llamada_fvoid . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 33

state 16

    (16) instruccion -> error . PTCOMA

    PTCOMA          shift and go to state 34


state 17

    (17) variables -> var . IDENTIFICADOR finInstruccion
    (18) variables -> var . IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> var . IDENTIFICADOR IGUAL NULL finInstruccion

    IDENTIFICADOR   shift and go to state 35


state 18

    (20) variables -> IDENTIFICADOR . IGUAL expresion finInstruccion
    (21) variables -> IDENTIFICADOR . IGUAL NULL finInstruccion
    (23) variables -> IDENTIFICADOR . INCREMENTO finInstruccion
    (24) variables -> IDENTIFICADOR . DECREMENTO finInstruccion
    (44) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    IGUAL           shift and go to state 36
    INCREMENTO      shift and go to state 37
    DECREMENTO      shift and go to state 38
    PARENTESIS_ABRE shift and go to state 39


state 19

    (25) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    PARENTESIS_ABRE shift and go to state 40


state 20

    (28) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 41


state 21

    (36) while -> WHILE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 42


state 22

    (37) for -> FOR . PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> FOR . PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 43


state 23

    (59) print -> PRINT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion

    PARENTESIS_ABRE shift and go to state 44


state 24

    (60) break -> BREAK . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 45

state 25

    (61) continue -> CONTINUE . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 46

state 26

    (46) returnn -> RETURN . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 47
    llamada_fvoid                  shift and go to state 58

state 27

    (35) main -> MAIN . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 64


state 28

    (50) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 65


state 29

    (22) var -> VAR .

    IDENTIFICADOR   reduce using rule 22 (var -> VAR .)


state 30

    (2) instrucciones -> instrucciones instruccion .

    error           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNC            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVE_CIERRA    reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 31

    (12) instruccion -> returnn finInstruccion .

    error           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IDENTIFICADOR   reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IF              reduce using rule 12 (instruccion -> returnn finInstruccion .)
    SWITCH          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    WHILE           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FOR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    PRINT           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BREAK           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CONTINUE        reduce using rule 12 (instruccion -> returnn finInstruccion .)
    RETURN          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    MAIN            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FUNC            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    VAR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    $end            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    LLAVE_CIERRA    reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DEFAULT         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CASE            reduce using rule 12 (instruccion -> returnn finInstruccion .)


state 32

    (62) finInstruccion -> PTCOMA .

    error           reduce using rule 62 (finInstruccion -> PTCOMA .)
    IDENTIFICADOR   reduce using rule 62 (finInstruccion -> PTCOMA .)
    IF              reduce using rule 62 (finInstruccion -> PTCOMA .)
    SWITCH          reduce using rule 62 (finInstruccion -> PTCOMA .)
    WHILE           reduce using rule 62 (finInstruccion -> PTCOMA .)
    FOR             reduce using rule 62 (finInstruccion -> PTCOMA .)
    PRINT           reduce using rule 62 (finInstruccion -> PTCOMA .)
    BREAK           reduce using rule 62 (finInstruccion -> PTCOMA .)
    CONTINUE        reduce using rule 62 (finInstruccion -> PTCOMA .)
    RETURN          reduce using rule 62 (finInstruccion -> PTCOMA .)
    MAIN            reduce using rule 62 (finInstruccion -> PTCOMA .)
    FUNC            reduce using rule 62 (finInstruccion -> PTCOMA .)
    VAR             reduce using rule 62 (finInstruccion -> PTCOMA .)
    $end            reduce using rule 62 (finInstruccion -> PTCOMA .)
    LLAVE_CIERRA    reduce using rule 62 (finInstruccion -> PTCOMA .)
    DEFAULT         reduce using rule 62 (finInstruccion -> PTCOMA .)
    CASE            reduce using rule 62 (finInstruccion -> PTCOMA .)


state 33

    (15) instruccion -> llamada_fvoid finInstruccion .

    error           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IDENTIFICADOR   reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IF              reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    SWITCH          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    WHILE           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FOR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    PRINT           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BREAK           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CONTINUE        reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    RETURN          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    MAIN            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FUNC            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    VAR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    $end            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    LLAVE_CIERRA    reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DEFAULT         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CASE            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)


state 34

    (16) instruccion -> error PTCOMA .

    error           reduce using rule 16 (instruccion -> error PTCOMA .)
    IDENTIFICADOR   reduce using rule 16 (instruccion -> error PTCOMA .)
    IF              reduce using rule 16 (instruccion -> error PTCOMA .)
    SWITCH          reduce using rule 16 (instruccion -> error PTCOMA .)
    WHILE           reduce using rule 16 (instruccion -> error PTCOMA .)
    FOR             reduce using rule 16 (instruccion -> error PTCOMA .)
    PRINT           reduce using rule 16 (instruccion -> error PTCOMA .)
    BREAK           reduce using rule 16 (instruccion -> error PTCOMA .)
    CONTINUE        reduce using rule 16 (instruccion -> error PTCOMA .)
    RETURN          reduce using rule 16 (instruccion -> error PTCOMA .)
    MAIN            reduce using rule 16 (instruccion -> error PTCOMA .)
    FUNC            reduce using rule 16 (instruccion -> error PTCOMA .)
    VAR             reduce using rule 16 (instruccion -> error PTCOMA .)
    $end            reduce using rule 16 (instruccion -> error PTCOMA .)
    LLAVE_CIERRA    reduce using rule 16 (instruccion -> error PTCOMA .)
    DEFAULT         reduce using rule 16 (instruccion -> error PTCOMA .)
    CASE            reduce using rule 16 (instruccion -> error PTCOMA .)


state 35

    (17) variables -> var IDENTIFICADOR . finInstruccion
    (18) variables -> var IDENTIFICADOR . IGUAL expresion finInstruccion
    (19) variables -> var IDENTIFICADOR . IGUAL NULL finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    IGUAL           shift and go to state 67
    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 66

state 36

    (20) variables -> IDENTIFICADOR IGUAL . expresion finInstruccion
    (21) variables -> IDENTIFICADOR IGUAL . NULL finInstruccion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 69
    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 68
    llamada_fvoid                  shift and go to state 58

state 37

    (23) variables -> IDENTIFICADOR INCREMENTO . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 70

state 38

    (24) variables -> IDENTIFICADOR DECREMENTO . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 71

state 39

    (44) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA
    (45) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . parametros_llamada PARENTESIS_CIERRA
    (47) parametros_llamada -> . parametros_llamada COMA parametro_llamada
    (48) parametros_llamada -> . parametro_llamada
    (49) parametro_llamada -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 72
    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    parametros_llamada             shift and go to state 73
    parametro_llamada              shift and go to state 74
    expresion                      shift and go to state 75
    llamada_fvoid                  shift and go to state 58

state 40

    (25) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 76
    llamada_fvoid                  shift and go to state 58

state 41

    (28) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 77
    llamada_fvoid                  shift and go to state 58

state 42

    (36) while -> WHILE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 78
    llamada_fvoid                  shift and go to state 58

state 43

    (37) for -> FOR PARENTESIS_ABRE . declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> FOR PARENTESIS_ABRE . declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) declaracionfor1 -> . VAR IDENTIFICADOR IGUAL expresion
    (40) declaracionfor2 -> . IDENTIFICADOR IGUAL expresion

    VAR             shift and go to state 81
    IDENTIFICADOR   shift and go to state 82

    declaracionfor1                shift and go to state 79
    declaracionfor2                shift and go to state 80

state 44

    (59) print -> PRINT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA finInstruccion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 83
    llamada_fvoid                  shift and go to state 58

state 45

    (60) break -> BREAK finInstruccion .

    error           reduce using rule 60 (break -> BREAK finInstruccion .)
    IDENTIFICADOR   reduce using rule 60 (break -> BREAK finInstruccion .)
    IF              reduce using rule 60 (break -> BREAK finInstruccion .)
    SWITCH          reduce using rule 60 (break -> BREAK finInstruccion .)
    WHILE           reduce using rule 60 (break -> BREAK finInstruccion .)
    FOR             reduce using rule 60 (break -> BREAK finInstruccion .)
    PRINT           reduce using rule 60 (break -> BREAK finInstruccion .)
    BREAK           reduce using rule 60 (break -> BREAK finInstruccion .)
    CONTINUE        reduce using rule 60 (break -> BREAK finInstruccion .)
    RETURN          reduce using rule 60 (break -> BREAK finInstruccion .)
    MAIN            reduce using rule 60 (break -> BREAK finInstruccion .)
    FUNC            reduce using rule 60 (break -> BREAK finInstruccion .)
    VAR             reduce using rule 60 (break -> BREAK finInstruccion .)
    $end            reduce using rule 60 (break -> BREAK finInstruccion .)
    LLAVE_CIERRA    reduce using rule 60 (break -> BREAK finInstruccion .)
    DEFAULT         reduce using rule 60 (break -> BREAK finInstruccion .)
    CASE            reduce using rule 60 (break -> BREAK finInstruccion .)


state 46

    (61) continue -> CONTINUE finInstruccion .

    error           reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    IDENTIFICADOR   reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    IF              reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    SWITCH          reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    WHILE           reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    FOR             reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    PRINT           reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    BREAK           reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    CONTINUE        reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    RETURN          reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    MAIN            reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    FUNC            reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    VAR             reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    $end            reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    LLAVE_CIERRA    reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    DEFAULT         reduce using rule 61 (continue -> CONTINUE finInstruccion .)
    CASE            reduce using rule 61 (continue -> CONTINUE finInstruccion .)


state 47

    (46) returnn -> RETURN expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 46 (returnn -> RETURN expresion .)
    error           reduce using rule 46 (returnn -> RETURN expresion .)
    IDENTIFICADOR   reduce using rule 46 (returnn -> RETURN expresion .)
    IF              reduce using rule 46 (returnn -> RETURN expresion .)
    SWITCH          reduce using rule 46 (returnn -> RETURN expresion .)
    WHILE           reduce using rule 46 (returnn -> RETURN expresion .)
    FOR             reduce using rule 46 (returnn -> RETURN expresion .)
    PRINT           reduce using rule 46 (returnn -> RETURN expresion .)
    BREAK           reduce using rule 46 (returnn -> RETURN expresion .)
    CONTINUE        reduce using rule 46 (returnn -> RETURN expresion .)
    RETURN          reduce using rule 46 (returnn -> RETURN expresion .)
    MAIN            reduce using rule 46 (returnn -> RETURN expresion .)
    FUNC            reduce using rule 46 (returnn -> RETURN expresion .)
    VAR             reduce using rule 46 (returnn -> RETURN expresion .)
    $end            reduce using rule 46 (returnn -> RETURN expresion .)
    LLAVE_CIERRA    reduce using rule 46 (returnn -> RETURN expresion .)
    DEFAULT         reduce using rule 46 (returnn -> RETURN expresion .)
    CASE            reduce using rule 46 (returnn -> RETURN expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 48

    (78) expresion -> MENOS . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 98
    llamada_fvoid                  shift and go to state 58

state 49

    (79) expresion -> NOT . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 99
    llamada_fvoid                  shift and go to state 58

state 50

    (80) expresion -> IDENTIFICADOR . INCREMENTO
    (81) expresion -> IDENTIFICADOR . DECREMENTO
    (87) expresion -> IDENTIFICADOR .
    (44) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    INCREMENTO      shift and go to state 100
    DECREMENTO      shift and go to state 101
    MAS             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 87 (expresion -> IDENTIFICADOR .)
    POR             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    POT             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MODULO          reduce using rule 87 (expresion -> IDENTIFICADOR .)
    IGUALACION      reduce using rule 87 (expresion -> IDENTIFICADOR .)
    DIREFENCIACION  reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MAYORQ          reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MENORQ          reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MAYORIGUAL      reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MENORIGUAL      reduce using rule 87 (expresion -> IDENTIFICADOR .)
    OR              reduce using rule 87 (expresion -> IDENTIFICADOR .)
    AND             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    PTCOMA          reduce using rule 87 (expresion -> IDENTIFICADOR .)
    error           reduce using rule 87 (expresion -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 87 (expresion -> IDENTIFICADOR .)
    IF              reduce using rule 87 (expresion -> IDENTIFICADOR .)
    SWITCH          reduce using rule 87 (expresion -> IDENTIFICADOR .)
    WHILE           reduce using rule 87 (expresion -> IDENTIFICADOR .)
    FOR             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    PRINT           reduce using rule 87 (expresion -> IDENTIFICADOR .)
    BREAK           reduce using rule 87 (expresion -> IDENTIFICADOR .)
    CONTINUE        reduce using rule 87 (expresion -> IDENTIFICADOR .)
    RETURN          reduce using rule 87 (expresion -> IDENTIFICADOR .)
    MAIN            reduce using rule 87 (expresion -> IDENTIFICADOR .)
    FUNC            reduce using rule 87 (expresion -> IDENTIFICADOR .)
    VAR             reduce using rule 87 (expresion -> IDENTIFICADOR .)
    $end            reduce using rule 87 (expresion -> IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 87 (expresion -> IDENTIFICADOR .)
    DEFAULT         reduce using rule 87 (expresion -> IDENTIFICADOR .)
    CASE            reduce using rule 87 (expresion -> IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 87 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 87 (expresion -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 87 (expresion -> IDENTIFICADOR .)
    PARENTESIS_ABRE shift and go to state 39


state 51

    (82) expresion -> PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 102
    llamada_fvoid                  shift and go to state 58

state 52

    (83) expresion -> ENTERO .

    MAS             reduce using rule 83 (expresion -> ENTERO .)
    MENOS           reduce using rule 83 (expresion -> ENTERO .)
    POR             reduce using rule 83 (expresion -> ENTERO .)
    DIV             reduce using rule 83 (expresion -> ENTERO .)
    POT             reduce using rule 83 (expresion -> ENTERO .)
    MODULO          reduce using rule 83 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 83 (expresion -> ENTERO .)
    DIREFENCIACION  reduce using rule 83 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 83 (expresion -> ENTERO .)
    MENORQ          reduce using rule 83 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 83 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 83 (expresion -> ENTERO .)
    OR              reduce using rule 83 (expresion -> ENTERO .)
    AND             reduce using rule 83 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 83 (expresion -> ENTERO .)
    error           reduce using rule 83 (expresion -> ENTERO .)
    IDENTIFICADOR   reduce using rule 83 (expresion -> ENTERO .)
    IF              reduce using rule 83 (expresion -> ENTERO .)
    SWITCH          reduce using rule 83 (expresion -> ENTERO .)
    WHILE           reduce using rule 83 (expresion -> ENTERO .)
    FOR             reduce using rule 83 (expresion -> ENTERO .)
    PRINT           reduce using rule 83 (expresion -> ENTERO .)
    BREAK           reduce using rule 83 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 83 (expresion -> ENTERO .)
    RETURN          reduce using rule 83 (expresion -> ENTERO .)
    MAIN            reduce using rule 83 (expresion -> ENTERO .)
    FUNC            reduce using rule 83 (expresion -> ENTERO .)
    VAR             reduce using rule 83 (expresion -> ENTERO .)
    $end            reduce using rule 83 (expresion -> ENTERO .)
    LLAVE_CIERRA    reduce using rule 83 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 83 (expresion -> ENTERO .)
    CASE            reduce using rule 83 (expresion -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 83 (expresion -> ENTERO .)
    COMA            reduce using rule 83 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 83 (expresion -> ENTERO .)


state 53

    (84) expresion -> DECIMAL .

    MAS             reduce using rule 84 (expresion -> DECIMAL .)
    MENOS           reduce using rule 84 (expresion -> DECIMAL .)
    POR             reduce using rule 84 (expresion -> DECIMAL .)
    DIV             reduce using rule 84 (expresion -> DECIMAL .)
    POT             reduce using rule 84 (expresion -> DECIMAL .)
    MODULO          reduce using rule 84 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 84 (expresion -> DECIMAL .)
    DIREFENCIACION  reduce using rule 84 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 84 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 84 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 84 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 84 (expresion -> DECIMAL .)
    OR              reduce using rule 84 (expresion -> DECIMAL .)
    AND             reduce using rule 84 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 84 (expresion -> DECIMAL .)
    error           reduce using rule 84 (expresion -> DECIMAL .)
    IDENTIFICADOR   reduce using rule 84 (expresion -> DECIMAL .)
    IF              reduce using rule 84 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 84 (expresion -> DECIMAL .)
    WHILE           reduce using rule 84 (expresion -> DECIMAL .)
    FOR             reduce using rule 84 (expresion -> DECIMAL .)
    PRINT           reduce using rule 84 (expresion -> DECIMAL .)
    BREAK           reduce using rule 84 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 84 (expresion -> DECIMAL .)
    RETURN          reduce using rule 84 (expresion -> DECIMAL .)
    MAIN            reduce using rule 84 (expresion -> DECIMAL .)
    FUNC            reduce using rule 84 (expresion -> DECIMAL .)
    VAR             reduce using rule 84 (expresion -> DECIMAL .)
    $end            reduce using rule 84 (expresion -> DECIMAL .)
    LLAVE_CIERRA    reduce using rule 84 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 84 (expresion -> DECIMAL .)
    CASE            reduce using rule 84 (expresion -> DECIMAL .)
    PARENTESIS_CIERRA reduce using rule 84 (expresion -> DECIMAL .)
    COMA            reduce using rule 84 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 84 (expresion -> DECIMAL .)


state 54

    (85) expresion -> TRUE .

    MAS             reduce using rule 85 (expresion -> TRUE .)
    MENOS           reduce using rule 85 (expresion -> TRUE .)
    POR             reduce using rule 85 (expresion -> TRUE .)
    DIV             reduce using rule 85 (expresion -> TRUE .)
    POT             reduce using rule 85 (expresion -> TRUE .)
    MODULO          reduce using rule 85 (expresion -> TRUE .)
    IGUALACION      reduce using rule 85 (expresion -> TRUE .)
    DIREFENCIACION  reduce using rule 85 (expresion -> TRUE .)
    MAYORQ          reduce using rule 85 (expresion -> TRUE .)
    MENORQ          reduce using rule 85 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 85 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 85 (expresion -> TRUE .)
    OR              reduce using rule 85 (expresion -> TRUE .)
    AND             reduce using rule 85 (expresion -> TRUE .)
    PTCOMA          reduce using rule 85 (expresion -> TRUE .)
    error           reduce using rule 85 (expresion -> TRUE .)
    IDENTIFICADOR   reduce using rule 85 (expresion -> TRUE .)
    IF              reduce using rule 85 (expresion -> TRUE .)
    SWITCH          reduce using rule 85 (expresion -> TRUE .)
    WHILE           reduce using rule 85 (expresion -> TRUE .)
    FOR             reduce using rule 85 (expresion -> TRUE .)
    PRINT           reduce using rule 85 (expresion -> TRUE .)
    BREAK           reduce using rule 85 (expresion -> TRUE .)
    CONTINUE        reduce using rule 85 (expresion -> TRUE .)
    RETURN          reduce using rule 85 (expresion -> TRUE .)
    MAIN            reduce using rule 85 (expresion -> TRUE .)
    FUNC            reduce using rule 85 (expresion -> TRUE .)
    VAR             reduce using rule 85 (expresion -> TRUE .)
    $end            reduce using rule 85 (expresion -> TRUE .)
    LLAVE_CIERRA    reduce using rule 85 (expresion -> TRUE .)
    DEFAULT         reduce using rule 85 (expresion -> TRUE .)
    CASE            reduce using rule 85 (expresion -> TRUE .)
    PARENTESIS_CIERRA reduce using rule 85 (expresion -> TRUE .)
    COMA            reduce using rule 85 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 85 (expresion -> TRUE .)


state 55

    (86) expresion -> FALSE .

    MAS             reduce using rule 86 (expresion -> FALSE .)
    MENOS           reduce using rule 86 (expresion -> FALSE .)
    POR             reduce using rule 86 (expresion -> FALSE .)
    DIV             reduce using rule 86 (expresion -> FALSE .)
    POT             reduce using rule 86 (expresion -> FALSE .)
    MODULO          reduce using rule 86 (expresion -> FALSE .)
    IGUALACION      reduce using rule 86 (expresion -> FALSE .)
    DIREFENCIACION  reduce using rule 86 (expresion -> FALSE .)
    MAYORQ          reduce using rule 86 (expresion -> FALSE .)
    MENORQ          reduce using rule 86 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 86 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 86 (expresion -> FALSE .)
    OR              reduce using rule 86 (expresion -> FALSE .)
    AND             reduce using rule 86 (expresion -> FALSE .)
    PTCOMA          reduce using rule 86 (expresion -> FALSE .)
    error           reduce using rule 86 (expresion -> FALSE .)
    IDENTIFICADOR   reduce using rule 86 (expresion -> FALSE .)
    IF              reduce using rule 86 (expresion -> FALSE .)
    SWITCH          reduce using rule 86 (expresion -> FALSE .)
    WHILE           reduce using rule 86 (expresion -> FALSE .)
    FOR             reduce using rule 86 (expresion -> FALSE .)
    PRINT           reduce using rule 86 (expresion -> FALSE .)
    BREAK           reduce using rule 86 (expresion -> FALSE .)
    CONTINUE        reduce using rule 86 (expresion -> FALSE .)
    RETURN          reduce using rule 86 (expresion -> FALSE .)
    MAIN            reduce using rule 86 (expresion -> FALSE .)
    FUNC            reduce using rule 86 (expresion -> FALSE .)
    VAR             reduce using rule 86 (expresion -> FALSE .)
    $end            reduce using rule 86 (expresion -> FALSE .)
    LLAVE_CIERRA    reduce using rule 86 (expresion -> FALSE .)
    DEFAULT         reduce using rule 86 (expresion -> FALSE .)
    CASE            reduce using rule 86 (expresion -> FALSE .)
    PARENTESIS_CIERRA reduce using rule 86 (expresion -> FALSE .)
    COMA            reduce using rule 86 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 86 (expresion -> FALSE .)


state 56

    (88) expresion -> CADENA .

    MAS             reduce using rule 88 (expresion -> CADENA .)
    MENOS           reduce using rule 88 (expresion -> CADENA .)
    POR             reduce using rule 88 (expresion -> CADENA .)
    DIV             reduce using rule 88 (expresion -> CADENA .)
    POT             reduce using rule 88 (expresion -> CADENA .)
    MODULO          reduce using rule 88 (expresion -> CADENA .)
    IGUALACION      reduce using rule 88 (expresion -> CADENA .)
    DIREFENCIACION  reduce using rule 88 (expresion -> CADENA .)
    MAYORQ          reduce using rule 88 (expresion -> CADENA .)
    MENORQ          reduce using rule 88 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 88 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 88 (expresion -> CADENA .)
    OR              reduce using rule 88 (expresion -> CADENA .)
    AND             reduce using rule 88 (expresion -> CADENA .)
    PTCOMA          reduce using rule 88 (expresion -> CADENA .)
    error           reduce using rule 88 (expresion -> CADENA .)
    IDENTIFICADOR   reduce using rule 88 (expresion -> CADENA .)
    IF              reduce using rule 88 (expresion -> CADENA .)
    SWITCH          reduce using rule 88 (expresion -> CADENA .)
    WHILE           reduce using rule 88 (expresion -> CADENA .)
    FOR             reduce using rule 88 (expresion -> CADENA .)
    PRINT           reduce using rule 88 (expresion -> CADENA .)
    BREAK           reduce using rule 88 (expresion -> CADENA .)
    CONTINUE        reduce using rule 88 (expresion -> CADENA .)
    RETURN          reduce using rule 88 (expresion -> CADENA .)
    MAIN            reduce using rule 88 (expresion -> CADENA .)
    FUNC            reduce using rule 88 (expresion -> CADENA .)
    VAR             reduce using rule 88 (expresion -> CADENA .)
    $end            reduce using rule 88 (expresion -> CADENA .)
    LLAVE_CIERRA    reduce using rule 88 (expresion -> CADENA .)
    DEFAULT         reduce using rule 88 (expresion -> CADENA .)
    CASE            reduce using rule 88 (expresion -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 88 (expresion -> CADENA .)
    COMA            reduce using rule 88 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 88 (expresion -> CADENA .)


state 57

    (89) expresion -> CHART .

    MAS             reduce using rule 89 (expresion -> CHART .)
    MENOS           reduce using rule 89 (expresion -> CHART .)
    POR             reduce using rule 89 (expresion -> CHART .)
    DIV             reduce using rule 89 (expresion -> CHART .)
    POT             reduce using rule 89 (expresion -> CHART .)
    MODULO          reduce using rule 89 (expresion -> CHART .)
    IGUALACION      reduce using rule 89 (expresion -> CHART .)
    DIREFENCIACION  reduce using rule 89 (expresion -> CHART .)
    MAYORQ          reduce using rule 89 (expresion -> CHART .)
    MENORQ          reduce using rule 89 (expresion -> CHART .)
    MAYORIGUAL      reduce using rule 89 (expresion -> CHART .)
    MENORIGUAL      reduce using rule 89 (expresion -> CHART .)
    OR              reduce using rule 89 (expresion -> CHART .)
    AND             reduce using rule 89 (expresion -> CHART .)
    PTCOMA          reduce using rule 89 (expresion -> CHART .)
    error           reduce using rule 89 (expresion -> CHART .)
    IDENTIFICADOR   reduce using rule 89 (expresion -> CHART .)
    IF              reduce using rule 89 (expresion -> CHART .)
    SWITCH          reduce using rule 89 (expresion -> CHART .)
    WHILE           reduce using rule 89 (expresion -> CHART .)
    FOR             reduce using rule 89 (expresion -> CHART .)
    PRINT           reduce using rule 89 (expresion -> CHART .)
    BREAK           reduce using rule 89 (expresion -> CHART .)
    CONTINUE        reduce using rule 89 (expresion -> CHART .)
    RETURN          reduce using rule 89 (expresion -> CHART .)
    MAIN            reduce using rule 89 (expresion -> CHART .)
    FUNC            reduce using rule 89 (expresion -> CHART .)
    VAR             reduce using rule 89 (expresion -> CHART .)
    $end            reduce using rule 89 (expresion -> CHART .)
    LLAVE_CIERRA    reduce using rule 89 (expresion -> CHART .)
    DEFAULT         reduce using rule 89 (expresion -> CHART .)
    CASE            reduce using rule 89 (expresion -> CHART .)
    PARENTESIS_CIERRA reduce using rule 89 (expresion -> CHART .)
    COMA            reduce using rule 89 (expresion -> CHART .)
    DOSPUNTOS       reduce using rule 89 (expresion -> CHART .)


state 58

    (90) expresion -> llamada_fvoid .

    MAS             reduce using rule 90 (expresion -> llamada_fvoid .)
    MENOS           reduce using rule 90 (expresion -> llamada_fvoid .)
    POR             reduce using rule 90 (expresion -> llamada_fvoid .)
    DIV             reduce using rule 90 (expresion -> llamada_fvoid .)
    POT             reduce using rule 90 (expresion -> llamada_fvoid .)
    MODULO          reduce using rule 90 (expresion -> llamada_fvoid .)
    IGUALACION      reduce using rule 90 (expresion -> llamada_fvoid .)
    DIREFENCIACION  reduce using rule 90 (expresion -> llamada_fvoid .)
    MAYORQ          reduce using rule 90 (expresion -> llamada_fvoid .)
    MENORQ          reduce using rule 90 (expresion -> llamada_fvoid .)
    MAYORIGUAL      reduce using rule 90 (expresion -> llamada_fvoid .)
    MENORIGUAL      reduce using rule 90 (expresion -> llamada_fvoid .)
    OR              reduce using rule 90 (expresion -> llamada_fvoid .)
    AND             reduce using rule 90 (expresion -> llamada_fvoid .)
    PTCOMA          reduce using rule 90 (expresion -> llamada_fvoid .)
    error           reduce using rule 90 (expresion -> llamada_fvoid .)
    IDENTIFICADOR   reduce using rule 90 (expresion -> llamada_fvoid .)
    IF              reduce using rule 90 (expresion -> llamada_fvoid .)
    SWITCH          reduce using rule 90 (expresion -> llamada_fvoid .)
    WHILE           reduce using rule 90 (expresion -> llamada_fvoid .)
    FOR             reduce using rule 90 (expresion -> llamada_fvoid .)
    PRINT           reduce using rule 90 (expresion -> llamada_fvoid .)
    BREAK           reduce using rule 90 (expresion -> llamada_fvoid .)
    CONTINUE        reduce using rule 90 (expresion -> llamada_fvoid .)
    RETURN          reduce using rule 90 (expresion -> llamada_fvoid .)
    MAIN            reduce using rule 90 (expresion -> llamada_fvoid .)
    FUNC            reduce using rule 90 (expresion -> llamada_fvoid .)
    VAR             reduce using rule 90 (expresion -> llamada_fvoid .)
    $end            reduce using rule 90 (expresion -> llamada_fvoid .)
    LLAVE_CIERRA    reduce using rule 90 (expresion -> llamada_fvoid .)
    DEFAULT         reduce using rule 90 (expresion -> llamada_fvoid .)
    CASE            reduce using rule 90 (expresion -> llamada_fvoid .)
    PARENTESIS_CIERRA reduce using rule 90 (expresion -> llamada_fvoid .)
    COMA            reduce using rule 90 (expresion -> llamada_fvoid .)
    DOSPUNTOS       reduce using rule 90 (expresion -> llamada_fvoid .)


state 59

    (91) expresion -> TOUPPER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 103


state 60

    (92) expresion -> TOLOWER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 104


state 61

    (93) expresion -> TRUNCATE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 105


state 62

    (94) expresion -> ROUND . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 106


state 63

    (95) expresion -> TYPEOF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 107


state 64

    (35) main -> MAIN PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 108


state 65

    (50) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 109


state 66

    (17) variables -> var IDENTIFICADOR finInstruccion .

    error           reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    IDENTIFICADOR   reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    IF              reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    SWITCH          reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    WHILE           reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    FOR             reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    PRINT           reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    BREAK           reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    CONTINUE        reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    RETURN          reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    MAIN            reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    FUNC            reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    VAR             reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    $end            reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    LLAVE_CIERRA    reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    DEFAULT         reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)
    CASE            reduce using rule 17 (variables -> var IDENTIFICADOR finInstruccion .)


state 67

    (18) variables -> var IDENTIFICADOR IGUAL . expresion finInstruccion
    (19) variables -> var IDENTIFICADOR IGUAL . NULL finInstruccion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 111
    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 110
    llamada_fvoid                  shift and go to state 58

state 68

    (20) variables -> IDENTIFICADOR IGUAL expresion . finInstruccion
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97
    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 112

state 69

    (21) variables -> IDENTIFICADOR IGUAL NULL . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 113

state 70

    (23) variables -> IDENTIFICADOR INCREMENTO finInstruccion .

    error           reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IF              reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    SWITCH          reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    WHILE           reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FOR             reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    PRINT           reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BREAK           reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CONTINUE        reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    RETURN          reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    MAIN            reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FUNC            reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    VAR             reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    $end            reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DEFAULT         reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CASE            reduce using rule 23 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)


state 71

    (24) variables -> IDENTIFICADOR DECREMENTO finInstruccion .

    error           reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IF              reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    SWITCH          reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    WHILE           reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FOR             reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    PRINT           reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BREAK           reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CONTINUE        reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    RETURN          reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    MAIN            reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FUNC            reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    VAR             reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    $end            reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DEFAULT         reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CASE            reduce using rule 24 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)


state 72

    (44) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAS             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 44 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 73

    (45) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada . PARENTESIS_CIERRA
    (47) parametros_llamada -> parametros_llamada . COMA parametro_llamada

    PARENTESIS_CIERRA shift and go to state 114
    COMA            shift and go to state 115


state 74

    (48) parametros_llamada -> parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 48 (parametros_llamada -> parametro_llamada .)
    COMA            reduce using rule 48 (parametros_llamada -> parametro_llamada .)


state 75

    (49) parametro_llamada -> expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 49 (parametro_llamada -> expresion .)
    COMA            reduce using rule 49 (parametro_llamada -> expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 76

    (25) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 116
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 77

    (28) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 117
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 78

    (36) while -> WHILE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 118
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 79

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 119


state 80

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 120


state 81

    (39) declaracionfor1 -> VAR . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 121


state 82

    (40) declaracionfor2 -> IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 122


state 83

    (59) print -> PRINT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA finInstruccion
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 123
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 84

    (64) expresion -> expresion MAS . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 124
    llamada_fvoid                  shift and go to state 58

state 85

    (65) expresion -> expresion MENOS . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 125
    llamada_fvoid                  shift and go to state 58

state 86

    (66) expresion -> expresion POR . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 126
    llamada_fvoid                  shift and go to state 58

state 87

    (67) expresion -> expresion DIV . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 127
    llamada_fvoid                  shift and go to state 58

state 88

    (68) expresion -> expresion POT . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 128
    llamada_fvoid                  shift and go to state 58

state 89

    (69) expresion -> expresion MODULO . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 129
    llamada_fvoid                  shift and go to state 58

state 90

    (70) expresion -> expresion IGUALACION . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 130
    llamada_fvoid                  shift and go to state 58

state 91

    (71) expresion -> expresion DIREFENCIACION . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 131
    llamada_fvoid                  shift and go to state 58

state 92

    (72) expresion -> expresion MAYORQ . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 132
    llamada_fvoid                  shift and go to state 58

state 93

    (73) expresion -> expresion MENORQ . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 133
    llamada_fvoid                  shift and go to state 58

state 94

    (74) expresion -> expresion MAYORIGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 134
    llamada_fvoid                  shift and go to state 58

state 95

    (75) expresion -> expresion MENORIGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 135
    llamada_fvoid                  shift and go to state 58

state 96

    (76) expresion -> expresion OR . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 136
    llamada_fvoid                  shift and go to state 58

state 97

    (77) expresion -> expresion AND . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 137
    llamada_fvoid                  shift and go to state 58

state 98

    (78) expresion -> MENOS expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 78 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 78 (expresion -> MENOS expresion .)
    POR             reduce using rule 78 (expresion -> MENOS expresion .)
    DIV             reduce using rule 78 (expresion -> MENOS expresion .)
    POT             reduce using rule 78 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 78 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 78 (expresion -> MENOS expresion .)
    DIREFENCIACION  reduce using rule 78 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 78 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 78 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 78 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 78 (expresion -> MENOS expresion .)
    OR              reduce using rule 78 (expresion -> MENOS expresion .)
    AND             reduce using rule 78 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 78 (expresion -> MENOS expresion .)
    error           reduce using rule 78 (expresion -> MENOS expresion .)
    IDENTIFICADOR   reduce using rule 78 (expresion -> MENOS expresion .)
    IF              reduce using rule 78 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 78 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 78 (expresion -> MENOS expresion .)
    FOR             reduce using rule 78 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 78 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 78 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 78 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 78 (expresion -> MENOS expresion .)
    MAIN            reduce using rule 78 (expresion -> MENOS expresion .)
    FUNC            reduce using rule 78 (expresion -> MENOS expresion .)
    VAR             reduce using rule 78 (expresion -> MENOS expresion .)
    $end            reduce using rule 78 (expresion -> MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 78 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 78 (expresion -> MENOS expresion .)
    CASE            reduce using rule 78 (expresion -> MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 78 (expresion -> MENOS expresion .)
    COMA            reduce using rule 78 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 78 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIV             [ shift and go to state 87 ]
  ! POT             [ shift and go to state 88 ]
  ! MODULO          [ shift and go to state 89 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 99

    (79) expresion -> NOT expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    OR              reduce using rule 79 (expresion -> NOT expresion .)
    AND             reduce using rule 79 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 79 (expresion -> NOT expresion .)
    error           reduce using rule 79 (expresion -> NOT expresion .)
    IDENTIFICADOR   reduce using rule 79 (expresion -> NOT expresion .)
    IF              reduce using rule 79 (expresion -> NOT expresion .)
    SWITCH          reduce using rule 79 (expresion -> NOT expresion .)
    WHILE           reduce using rule 79 (expresion -> NOT expresion .)
    FOR             reduce using rule 79 (expresion -> NOT expresion .)
    PRINT           reduce using rule 79 (expresion -> NOT expresion .)
    BREAK           reduce using rule 79 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 79 (expresion -> NOT expresion .)
    RETURN          reduce using rule 79 (expresion -> NOT expresion .)
    MAIN            reduce using rule 79 (expresion -> NOT expresion .)
    FUNC            reduce using rule 79 (expresion -> NOT expresion .)
    VAR             reduce using rule 79 (expresion -> NOT expresion .)
    $end            reduce using rule 79 (expresion -> NOT expresion .)
    LLAVE_CIERRA    reduce using rule 79 (expresion -> NOT expresion .)
    DEFAULT         reduce using rule 79 (expresion -> NOT expresion .)
    CASE            reduce using rule 79 (expresion -> NOT expresion .)
    PARENTESIS_CIERRA reduce using rule 79 (expresion -> NOT expresion .)
    COMA            reduce using rule 79 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 79 (expresion -> NOT expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95

  ! MAS             [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 79 (expresion -> NOT expresion .) ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 100

    (80) expresion -> IDENTIFICADOR INCREMENTO .

    MAS             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENOS           reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    POR             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIV             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    POT             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MODULO          reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    IGUALACION      reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIREFENCIACION  reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORQ          reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORQ          reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORIGUAL      reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORIGUAL      reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    OR              reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    AND             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    PTCOMA          reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    error           reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    IDENTIFICADOR   reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    IF              reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    SWITCH          reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    WHILE           reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    FOR             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    PRINT           reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    BREAK           reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    CONTINUE        reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    RETURN          reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAIN            reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    FUNC            reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    VAR             reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    $end            reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    LLAVE_CIERRA    reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    DEFAULT         reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    CASE            reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    COMA            reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOSPUNTOS       reduce using rule 80 (expresion -> IDENTIFICADOR INCREMENTO .)


state 101

    (81) expresion -> IDENTIFICADOR DECREMENTO .

    MAS             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENOS           reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    POR             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIV             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    POT             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MODULO          reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    IGUALACION      reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIREFENCIACION  reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORQ          reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORQ          reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORIGUAL      reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORIGUAL      reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    OR              reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    AND             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    PTCOMA          reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    error           reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    IDENTIFICADOR   reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    IF              reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    SWITCH          reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    WHILE           reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    FOR             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    PRINT           reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    BREAK           reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    CONTINUE        reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    RETURN          reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAIN            reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    FUNC            reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    VAR             reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    $end            reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    LLAVE_CIERRA    reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    DEFAULT         reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    CASE            reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    COMA            reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOSPUNTOS       reduce using rule 81 (expresion -> IDENTIFICADOR DECREMENTO .)


state 102

    (82) expresion -> PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 138
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 103

    (91) expresion -> TOUPPER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 139
    llamada_fvoid                  shift and go to state 58

state 104

    (92) expresion -> TOLOWER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 140
    llamada_fvoid                  shift and go to state 58

state 105

    (93) expresion -> TRUNCATE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 141
    llamada_fvoid                  shift and go to state 58

state 106

    (94) expresion -> ROUND PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 142
    llamada_fvoid                  shift and go to state 58

state 107

    (95) expresion -> TYPEOF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 143
    llamada_fvoid                  shift and go to state 58

state 108

    (35) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 144


state 109

    (50) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (52) parametros -> . parametros COMA parametro
    (53) parametros -> . parametro
    (54) parametro -> . INT IDENTIFICADOR
    (55) parametro -> . STRING IDENTIFICADOR
    (56) parametro -> . DOUBLE IDENTIFICADOR
    (57) parametro -> . BOOLEAN IDENTIFICADOR
    (58) parametro -> . CHAR IDENTIFICADOR

    PARENTESIS_CIERRA shift and go to state 145
    INT             shift and go to state 148
    STRING          shift and go to state 149
    DOUBLE          shift and go to state 150
    BOOLEAN         shift and go to state 151
    CHAR            shift and go to state 152

    parametros                     shift and go to state 146
    parametro                      shift and go to state 147

state 110

    (18) variables -> var IDENTIFICADOR IGUAL expresion . finInstruccion
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97
    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 153

state 111

    (19) variables -> var IDENTIFICADOR IGUAL NULL . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 154

state 112

    (20) variables -> IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 20 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)


state 113

    (21) variables -> IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 21 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)


state 114

    (45) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    error           reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IF              reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    WHILE           reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FOR             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PRINT           reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BREAK           reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    RETURN          reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAIN            reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FUNC            reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    VAR             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    $end            reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAS             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENOS           reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POR             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIV             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POT             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MODULO          reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    OR              reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    AND             reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CASE            reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    COMA            reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 45 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)


state 115

    (47) parametros_llamada -> parametros_llamada COMA . parametro_llamada
    (49) parametro_llamada -> . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    parametro_llamada              shift and go to state 155
    expresion                      shift and go to state 75
    llamada_fvoid                  shift and go to state 58

state 116

    (25) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 156


state 117

    (28) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE default LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 157


state 118

    (36) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 158


state 119

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 159
    llamada_fvoid                  shift and go to state 58

state 120

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 160
    llamada_fvoid                  shift and go to state 58

state 121

    (39) declaracionfor1 -> VAR IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 161


state 122

    (40) declaracionfor2 -> IDENTIFICADOR IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 162
    llamada_fvoid                  shift and go to state 58

state 123

    (59) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA . finInstruccion
    (62) finInstruccion -> . PTCOMA
    (63) finInstruccion -> .

    PTCOMA          shift and go to state 32
    error           reduce using rule 63 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 63 (finInstruccion -> .)
    IF              reduce using rule 63 (finInstruccion -> .)
    SWITCH          reduce using rule 63 (finInstruccion -> .)
    WHILE           reduce using rule 63 (finInstruccion -> .)
    FOR             reduce using rule 63 (finInstruccion -> .)
    PRINT           reduce using rule 63 (finInstruccion -> .)
    BREAK           reduce using rule 63 (finInstruccion -> .)
    CONTINUE        reduce using rule 63 (finInstruccion -> .)
    RETURN          reduce using rule 63 (finInstruccion -> .)
    MAIN            reduce using rule 63 (finInstruccion -> .)
    FUNC            reduce using rule 63 (finInstruccion -> .)
    VAR             reduce using rule 63 (finInstruccion -> .)
    $end            reduce using rule 63 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 63 (finInstruccion -> .)
    DEFAULT         reduce using rule 63 (finInstruccion -> .)
    CASE            reduce using rule 63 (finInstruccion -> .)

    finInstruccion                 shift and go to state 163

state 124

    (64) expresion -> expresion MAS expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 64 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 64 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 64 (expresion -> expresion MAS expresion .)
    DIREFENCIACION  reduce using rule 64 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 64 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 64 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 64 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 64 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion MAS expresion .)
    error           reduce using rule 64 (expresion -> expresion MAS expresion .)
    IDENTIFICADOR   reduce using rule 64 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 64 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 64 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 64 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 64 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 64 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 64 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 64 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 64 (expresion -> expresion MAS expresion .)
    MAIN            reduce using rule 64 (expresion -> expresion MAS expresion .)
    FUNC            reduce using rule 64 (expresion -> expresion MAS expresion .)
    VAR             reduce using rule 64 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 64 (expresion -> expresion MAS expresion .)
    LLAVE_CIERRA    reduce using rule 64 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 64 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 64 (expresion -> expresion MAS expresion .)
    PARENTESIS_CIERRA reduce using rule 64 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 64 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 64 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! POR             [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 125

    (65) expresion -> expresion MENOS expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 65 (expresion -> expresion MENOS expresion .)
    DIREFENCIACION  reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 65 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 65 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    IDENTIFICADOR   reduce using rule 65 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 65 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 65 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 65 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 65 (expresion -> expresion MENOS expresion .)
    MAIN            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    FUNC            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    VAR             reduce using rule 65 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 65 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 65 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 65 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 65 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 65 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! POR             [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 126

    (66) expresion -> expresion POR expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 66 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 66 (expresion -> expresion POR expresion .)
    POR             reduce using rule 66 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 66 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 66 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 66 (expresion -> expresion POR expresion .)
    DIREFENCIACION  reduce using rule 66 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 66 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 66 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 66 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 66 (expresion -> expresion POR expresion .)
    OR              reduce using rule 66 (expresion -> expresion POR expresion .)
    AND             reduce using rule 66 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 66 (expresion -> expresion POR expresion .)
    error           reduce using rule 66 (expresion -> expresion POR expresion .)
    IDENTIFICADOR   reduce using rule 66 (expresion -> expresion POR expresion .)
    IF              reduce using rule 66 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 66 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 66 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 66 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 66 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 66 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 66 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 66 (expresion -> expresion POR expresion .)
    MAIN            reduce using rule 66 (expresion -> expresion POR expresion .)
    FUNC            reduce using rule 66 (expresion -> expresion POR expresion .)
    VAR             reduce using rule 66 (expresion -> expresion POR expresion .)
    $end            reduce using rule 66 (expresion -> expresion POR expresion .)
    LLAVE_CIERRA    reduce using rule 66 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 66 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 66 (expresion -> expresion POR expresion .)
    PARENTESIS_CIERRA reduce using rule 66 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 66 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 66 (expresion -> expresion POR expresion .)
    POT             shift and go to state 88

  ! POT             [ reduce using rule 66 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIV             [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 89 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 127

    (67) expresion -> expresion DIV expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 67 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 67 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 67 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 67 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 67 (expresion -> expresion DIV expresion .)
    IGUALACION      reduce using rule 67 (expresion -> expresion DIV expresion .)
    DIREFENCIACION  reduce using rule 67 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 67 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 67 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 67 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 67 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 67 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 67 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 67 (expresion -> expresion DIV expresion .)
    error           reduce using rule 67 (expresion -> expresion DIV expresion .)
    IDENTIFICADOR   reduce using rule 67 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 67 (expresion -> expresion DIV expresion .)
    SWITCH          reduce using rule 67 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 67 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 67 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 67 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 67 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 67 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 67 (expresion -> expresion DIV expresion .)
    MAIN            reduce using rule 67 (expresion -> expresion DIV expresion .)
    FUNC            reduce using rule 67 (expresion -> expresion DIV expresion .)
    VAR             reduce using rule 67 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 67 (expresion -> expresion DIV expresion .)
    LLAVE_CIERRA    reduce using rule 67 (expresion -> expresion DIV expresion .)
    DEFAULT         reduce using rule 67 (expresion -> expresion DIV expresion .)
    CASE            reduce using rule 67 (expresion -> expresion DIV expresion .)
    PARENTESIS_CIERRA reduce using rule 67 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 67 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 67 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 88

  ! POT             [ reduce using rule 67 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIV             [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 89 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 128

    (68) expresion -> expresion POT expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 68 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 68 (expresion -> expresion POT expresion .)
    POR             reduce using rule 68 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 68 (expresion -> expresion POT expresion .)
    POT             reduce using rule 68 (expresion -> expresion POT expresion .)
    MODULO          reduce using rule 68 (expresion -> expresion POT expresion .)
    IGUALACION      reduce using rule 68 (expresion -> expresion POT expresion .)
    DIREFENCIACION  reduce using rule 68 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 68 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 68 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 68 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 68 (expresion -> expresion POT expresion .)
    OR              reduce using rule 68 (expresion -> expresion POT expresion .)
    AND             reduce using rule 68 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 68 (expresion -> expresion POT expresion .)
    error           reduce using rule 68 (expresion -> expresion POT expresion .)
    IDENTIFICADOR   reduce using rule 68 (expresion -> expresion POT expresion .)
    IF              reduce using rule 68 (expresion -> expresion POT expresion .)
    SWITCH          reduce using rule 68 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 68 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 68 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 68 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 68 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 68 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 68 (expresion -> expresion POT expresion .)
    MAIN            reduce using rule 68 (expresion -> expresion POT expresion .)
    FUNC            reduce using rule 68 (expresion -> expresion POT expresion .)
    VAR             reduce using rule 68 (expresion -> expresion POT expresion .)
    $end            reduce using rule 68 (expresion -> expresion POT expresion .)
    LLAVE_CIERRA    reduce using rule 68 (expresion -> expresion POT expresion .)
    DEFAULT         reduce using rule 68 (expresion -> expresion POT expresion .)
    CASE            reduce using rule 68 (expresion -> expresion POT expresion .)
    PARENTESIS_CIERRA reduce using rule 68 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 68 (expresion -> expresion POT expresion .)
    DOSPUNTOS       reduce using rule 68 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIV             [ shift and go to state 87 ]
  ! POT             [ shift and go to state 88 ]
  ! MODULO          [ shift and go to state 89 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 129

    (69) expresion -> expresion MODULO expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    MAS             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 69 (expresion -> expresion MODULO expresion .)
    DIREFENCIACION  reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MAYORQ          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MENORQ          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 69 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 69 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    IDENTIFICADOR   reduce using rule 69 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 69 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 69 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 69 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 69 (expresion -> expresion MODULO expresion .)
    MAIN            reduce using rule 69 (expresion -> expresion MODULO expresion .)
    FUNC            reduce using rule 69 (expresion -> expresion MODULO expresion .)
    VAR             reduce using rule 69 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 69 (expresion -> expresion MODULO expresion .)
    LLAVE_CIERRA    reduce using rule 69 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 69 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 69 (expresion -> expresion MODULO expresion .)
    PARENTESIS_CIERRA reduce using rule 69 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 69 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 69 (expresion -> expresion MODULO expresion .)
    POT             shift and go to state 88

  ! POT             [ reduce using rule 69 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 84 ]
  ! MENOS           [ shift and go to state 85 ]
  ! POR             [ shift and go to state 86 ]
  ! DIV             [ shift and go to state 87 ]
  ! MODULO          [ shift and go to state 89 ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 130

    (70) expresion -> expresion IGUALACION expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    DIREFENCIACION  reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    MAYORQ          reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    MENORQ          reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    PTCOMA          reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    IDENTIFICADOR   reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    SWITCH          reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    PRINT           reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    MAIN            reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    FUNC            reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    VAR             reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    LLAVE_CIERRA    reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    DEFAULT         reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    CASE            reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    PARENTESIS_CIERRA reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    DOSPUNTOS       reduce using rule 70 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 70 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 70 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 70 (expresion -> expresion IGUALACION expresion .) ]
  ! DIV             [ reduce using rule 70 (expresion -> expresion IGUALACION expresion .) ]
  ! POT             [ reduce using rule 70 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 70 (expresion -> expresion IGUALACION expresion .) ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 131

    (71) expresion -> expresion DIREFENCIACION expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    DIREFENCIACION  reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORQ          reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    MENORQ          reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORIGUAL      reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    MENORIGUAL      reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    OR              reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    AND             reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    PTCOMA          reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    error           reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    IDENTIFICADOR   reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    IF              reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    SWITCH          reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    WHILE           reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    FOR             reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    PRINT           reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    BREAK           reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    CONTINUE        reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    RETURN          reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    MAIN            reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    FUNC            reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    VAR             reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    $end            reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    LLAVE_CIERRA    reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    DEFAULT         reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    CASE            reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    PARENTESIS_CIERRA reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    COMA            reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    DOSPUNTOS       reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MENOS           [ reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POR             [ reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! DIV             [ reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POT             [ reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MODULO          [ reduce using rule 71 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 132

    (72) expresion -> expresion MAYORQ expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    DIREFENCIACION  reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    error           reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    IDENTIFICADOR   reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    IF              reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    SWITCH          reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    WHILE           reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    FOR             reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    PRINT           reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    BREAK           reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    CONTINUE        reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    RETURN          reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    MAIN            reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    FUNC            reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    VAR             reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    LLAVE_CIERRA    reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    DEFAULT         reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    CASE            reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    COMA            reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    DOSPUNTOS       reduce using rule 72 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 72 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 72 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 72 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 72 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 72 (expresion -> expresion MAYORQ expresion .) ]
  ! MODULO          [ reduce using rule 72 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 133

    (73) expresion -> expresion MENORQ expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    DIREFENCIACION  reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    error           reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    IDENTIFICADOR   reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    IF              reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    SWITCH          reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    WHILE           reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    FOR             reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    PRINT           reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    BREAK           reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    CONTINUE        reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    RETURN          reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    MAIN            reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    FUNC            reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    VAR             reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    LLAVE_CIERRA    reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    DEFAULT         reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    CASE            reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    COMA            reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    DOSPUNTOS       reduce using rule 73 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 73 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 73 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 73 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 73 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 73 (expresion -> expresion MENORQ expresion .) ]
  ! MODULO          [ reduce using rule 73 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 134

    (74) expresion -> expresion MAYORIGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    SWITCH          reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    MAIN            reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    FUNC            reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    VAR             reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    DEFAULT         reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    CASE            reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 74 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 135

    (75) expresion -> expresion MENORIGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    SWITCH          reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    MAIN            reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    FUNC            reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    VAR             reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    DEFAULT         reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    CASE            reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89

  ! MAS             [ reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 75 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 90 ]
  ! DIREFENCIACION  [ shift and go to state 91 ]
  ! MAYORQ          [ shift and go to state 92 ]
  ! MENORQ          [ shift and go to state 93 ]
  ! MAYORIGUAL      [ shift and go to state 94 ]
  ! MENORIGUAL      [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 136

    (76) expresion -> expresion OR expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    OR              reduce using rule 76 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 76 (expresion -> expresion OR expresion .)
    error           reduce using rule 76 (expresion -> expresion OR expresion .)
    IDENTIFICADOR   reduce using rule 76 (expresion -> expresion OR expresion .)
    IF              reduce using rule 76 (expresion -> expresion OR expresion .)
    SWITCH          reduce using rule 76 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 76 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 76 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 76 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 76 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 76 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 76 (expresion -> expresion OR expresion .)
    MAIN            reduce using rule 76 (expresion -> expresion OR expresion .)
    FUNC            reduce using rule 76 (expresion -> expresion OR expresion .)
    VAR             reduce using rule 76 (expresion -> expresion OR expresion .)
    $end            reduce using rule 76 (expresion -> expresion OR expresion .)
    LLAVE_CIERRA    reduce using rule 76 (expresion -> expresion OR expresion .)
    DEFAULT         reduce using rule 76 (expresion -> expresion OR expresion .)
    CASE            reduce using rule 76 (expresion -> expresion OR expresion .)
    PARENTESIS_CIERRA reduce using rule 76 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 76 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 76 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    AND             shift and go to state 97

  ! MAS             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 76 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 96 ]


state 137

    (77) expresion -> expresion AND expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    OR              reduce using rule 77 (expresion -> expresion AND expresion .)
    AND             reduce using rule 77 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 77 (expresion -> expresion AND expresion .)
    error           reduce using rule 77 (expresion -> expresion AND expresion .)
    IDENTIFICADOR   reduce using rule 77 (expresion -> expresion AND expresion .)
    IF              reduce using rule 77 (expresion -> expresion AND expresion .)
    SWITCH          reduce using rule 77 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 77 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 77 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 77 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 77 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 77 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 77 (expresion -> expresion AND expresion .)
    MAIN            reduce using rule 77 (expresion -> expresion AND expresion .)
    FUNC            reduce using rule 77 (expresion -> expresion AND expresion .)
    VAR             reduce using rule 77 (expresion -> expresion AND expresion .)
    $end            reduce using rule 77 (expresion -> expresion AND expresion .)
    LLAVE_CIERRA    reduce using rule 77 (expresion -> expresion AND expresion .)
    DEFAULT         reduce using rule 77 (expresion -> expresion AND expresion .)
    CASE            reduce using rule 77 (expresion -> expresion AND expresion .)
    PARENTESIS_CIERRA reduce using rule 77 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 77 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 77 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95

  ! MAS             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 77 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 96 ]
  ! AND             [ shift and go to state 97 ]


state 138

    (82) expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 82 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 139

    (91) expresion -> TOUPPER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 164
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 140

    (92) expresion -> TOLOWER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 165
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 141

    (93) expresion -> TRUNCATE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 166
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 142

    (94) expresion -> ROUND PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 167
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 143

    (95) expresion -> TYPEOF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 168
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 144

    (35) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 169
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 145

    (50) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 170


state 146

    (51) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (52) parametros -> parametros . COMA parametro

    PARENTESIS_CIERRA shift and go to state 171
    COMA            shift and go to state 172


state 147

    (53) parametros -> parametro .

    PARENTESIS_CIERRA reduce using rule 53 (parametros -> parametro .)
    COMA            reduce using rule 53 (parametros -> parametro .)


state 148

    (54) parametro -> INT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 173


state 149

    (55) parametro -> STRING . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 174


state 150

    (56) parametro -> DOUBLE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 175


state 151

    (57) parametro -> BOOLEAN . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 176


state 152

    (58) parametro -> CHAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 177


state 153

    (18) variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 18 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)


state 154

    (19) variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 19 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)


state 155

    (47) parametros_llamada -> parametros_llamada COMA parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 47 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)
    COMA            reduce using rule 47 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)


state 156

    (25) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 178
    if                             shift and go to state 5
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 157

    (28) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases LLAVE_CIERRA
    (29) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases default LLAVE_CIERRA
    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . default LLAVE_CIERRA
    (31) listacases -> . listacases case
    (32) listacases -> . case
    (34) default -> . DEFAULT DOSPUNTOS instrucciones
    (33) case -> . CASE expresion DOSPUNTOS instrucciones

    DEFAULT         shift and go to state 182
    CASE            shift and go to state 183

    listacases                     shift and go to state 179
    default                        shift and go to state 180
    case                           shift and go to state 181

state 158

    (36) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 184
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 159

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 185
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 160

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 186
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 161

    (39) declaracionfor1 -> VAR IDENTIFICADOR IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 187
    llamada_fvoid                  shift and go to state 58

state 162

    (40) declaracionfor2 -> IDENTIFICADOR IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 40 (declaracionfor2 -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 163

    (59) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .

    error           reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IDENTIFICADOR   reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IF              reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    SWITCH          reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    WHILE           reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FOR             reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    PRINT           reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BREAK           reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CONTINUE        reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    RETURN          reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    MAIN            reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FUNC            reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    VAR             reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    $end            reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    LLAVE_CIERRA    reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DEFAULT         reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CASE            reduce using rule 59 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)


state 164

    (91) expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 91 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 165

    (92) expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 92 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 166

    (93) expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 93 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 167

    (94) expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 94 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 168

    (95) expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 95 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 169

    (35) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 188
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 170

    (50) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 189
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 171

    (51) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 190


state 172

    (52) parametros -> parametros COMA . parametro
    (54) parametro -> . INT IDENTIFICADOR
    (55) parametro -> . STRING IDENTIFICADOR
    (56) parametro -> . DOUBLE IDENTIFICADOR
    (57) parametro -> . BOOLEAN IDENTIFICADOR
    (58) parametro -> . CHAR IDENTIFICADOR

    INT             shift and go to state 148
    STRING          shift and go to state 149
    DOUBLE          shift and go to state 150
    BOOLEAN         shift and go to state 151
    CHAR            shift and go to state 152

    parametro                      shift and go to state 191

state 173

    (54) parametro -> INT IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 54 (parametro -> INT IDENTIFICADOR .)
    COMA            reduce using rule 54 (parametro -> INT IDENTIFICADOR .)


state 174

    (55) parametro -> STRING IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 55 (parametro -> STRING IDENTIFICADOR .)
    COMA            reduce using rule 55 (parametro -> STRING IDENTIFICADOR .)


state 175

    (56) parametro -> DOUBLE IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 56 (parametro -> DOUBLE IDENTIFICADOR .)
    COMA            reduce using rule 56 (parametro -> DOUBLE IDENTIFICADOR .)


state 176

    (57) parametro -> BOOLEAN IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 57 (parametro -> BOOLEAN IDENTIFICADOR .)
    COMA            reduce using rule 57 (parametro -> BOOLEAN IDENTIFICADOR .)


state 177

    (58) parametro -> CHAR IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 58 (parametro -> CHAR IDENTIFICADOR .)
    COMA            reduce using rule 58 (parametro -> CHAR IDENTIFICADOR .)


state 178

    (25) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 192
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    if                             shift and go to state 5
    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 179

    (28) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . LLAVE_CIERRA
    (29) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . default LLAVE_CIERRA
    (31) listacases -> listacases . case
    (34) default -> . DEFAULT DOSPUNTOS instrucciones
    (33) case -> . CASE expresion DOSPUNTOS instrucciones

    LLAVE_CIERRA    shift and go to state 193
    DEFAULT         shift and go to state 182
    CASE            shift and go to state 183

    default                        shift and go to state 194
    case                           shift and go to state 195

state 180

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 196


state 181

    (32) listacases -> case .

    LLAVE_CIERRA    reduce using rule 32 (listacases -> case .)
    DEFAULT         reduce using rule 32 (listacases -> case .)
    CASE            reduce using rule 32 (listacases -> case .)


state 182

    (34) default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 197


state 183

    (33) case -> CASE . expresion DOSPUNTOS instrucciones
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 198
    llamada_fvoid                  shift and go to state 58

state 184

    (36) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 199
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 185

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) actualizacion -> . IDENTIFICADOR INCREMENTO
    (42) actualizacion -> . IDENTIFICADOR DECREMENTO
    (43) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 201

    actualizacion                  shift and go to state 200

state 186

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) actualizacion -> . IDENTIFICADOR INCREMENTO
    (42) actualizacion -> . IDENTIFICADOR DECREMENTO
    (43) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 201

    actualizacion                  shift and go to state 202

state 187

    (39) declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 39 (declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 188

    (35) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 35 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 189

    (50) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 203
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 190

    (51) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 204
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 191

    (52) parametros -> parametros COMA parametro .

    PARENTESIS_CIERRA reduce using rule 52 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 52 (parametros -> parametros COMA parametro .)


state 192

    (25) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .
    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE if

    error           reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 25 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ELSE            shift and go to state 205


state 193

    (28) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .

    error           reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IF              reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    SWITCH          reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    WHILE           reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FOR             reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    PRINT           reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BREAK           reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CONTINUE        reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    RETURN          reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    MAIN            reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FUNC            reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    VAR             reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    $end            reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DEFAULT         reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CASE            reduce using rule 28 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)


state 194

    (29) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 206


state 195

    (31) listacases -> listacases case .

    LLAVE_CIERRA    reduce using rule 31 (listacases -> listacases case .)
    DEFAULT         reduce using rule 31 (listacases -> listacases case .)
    CASE            reduce using rule 31 (listacases -> listacases case .)


state 196

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .

    error           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IF              reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    SWITCH          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    WHILE           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FOR             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    PRINT           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BREAK           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    RETURN          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    MAIN            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FUNC            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    VAR             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    $end            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CASE            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)


state 197

    (34) default -> DEFAULT DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 207
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 198

    (33) case -> CASE expresion . DOSPUNTOS instrucciones
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    DOSPUNTOS       shift and go to state 208
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 199

    (36) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 36 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 200

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 209


state 201

    (41) actualizacion -> IDENTIFICADOR . INCREMENTO
    (42) actualizacion -> IDENTIFICADOR . DECREMENTO
    (43) actualizacion -> IDENTIFICADOR . IGUAL expresion

    INCREMENTO      shift and go to state 210
    DECREMENTO      shift and go to state 211
    IGUAL           shift and go to state 212


state 202

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 213


state 203

    (50) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 50 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 204

    (51) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 214
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 205

    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . if
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 215
    IF              shift and go to state 19

    if                             shift and go to state 216

state 206

    (29) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .

    error           reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IF              reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    SWITCH          reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    WHILE           reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FOR             reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    PRINT           reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BREAK           reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    RETURN          reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    MAIN            reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FUNC            reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    VAR             reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    $end            reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CASE            reduce using rule 29 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)


state 207

    (34) default -> DEFAULT DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    reduce using rule 34 (default -> DEFAULT DOSPUNTOS instrucciones .)
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 208

    (33) case -> CASE expresion DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 217
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 209

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 218


state 210

    (41) actualizacion -> IDENTIFICADOR INCREMENTO .

    PARENTESIS_CIERRA reduce using rule 41 (actualizacion -> IDENTIFICADOR INCREMENTO .)


state 211

    (42) actualizacion -> IDENTIFICADOR DECREMENTO .

    PARENTESIS_CIERRA reduce using rule 42 (actualizacion -> IDENTIFICADOR DECREMENTO .)


state 212

    (43) actualizacion -> IDENTIFICADOR IGUAL . expresion
    (64) expresion -> . expresion MAS expresion
    (65) expresion -> . expresion MENOS expresion
    (66) expresion -> . expresion POR expresion
    (67) expresion -> . expresion DIV expresion
    (68) expresion -> . expresion POT expresion
    (69) expresion -> . expresion MODULO expresion
    (70) expresion -> . expresion IGUALACION expresion
    (71) expresion -> . expresion DIREFENCIACION expresion
    (72) expresion -> . expresion MAYORQ expresion
    (73) expresion -> . expresion MENORQ expresion
    (74) expresion -> . expresion MAYORIGUAL expresion
    (75) expresion -> . expresion MENORIGUAL expresion
    (76) expresion -> . expresion OR expresion
    (77) expresion -> . expresion AND expresion
    (78) expresion -> . MENOS expresion
    (79) expresion -> . NOT expresion
    (80) expresion -> . IDENTIFICADOR INCREMENTO
    (81) expresion -> . IDENTIFICADOR DECREMENTO
    (82) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (83) expresion -> . ENTERO
    (84) expresion -> . DECIMAL
    (85) expresion -> . TRUE
    (86) expresion -> . FALSE
    (87) expresion -> . IDENTIFICADOR
    (88) expresion -> . CADENA
    (89) expresion -> . CHART
    (90) expresion -> . llamada_fvoid
    (91) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (92) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (93) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (94) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (95) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 48
    NOT             shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    ENTERO          shift and go to state 52
    DECIMAL         shift and go to state 53
    TRUE            shift and go to state 54
    FALSE           shift and go to state 55
    CADENA          shift and go to state 56
    CHART           shift and go to state 57
    TOUPPER         shift and go to state 59
    TOLOWER         shift and go to state 60
    TRUNCATE        shift and go to state 61
    ROUND           shift and go to state 62
    TYPEOF          shift and go to state 63

    expresion                      shift and go to state 219
    llamada_fvoid                  shift and go to state 58

state 213

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 220


state 214

    (51) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 51 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 215

    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 221
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 216

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .

    error           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IDENTIFICADOR   reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IF              reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    SWITCH          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    WHILE           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FOR             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    PRINT           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BREAK           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CONTINUE        reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    RETURN          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    MAIN            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FUNC            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    VAR             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    $end            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    LLAVE_CIERRA    reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DEFAULT         reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CASE            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)


state 217

    (33) case -> CASE expresion DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    reduce using rule 33 (case -> CASE expresion DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 33 (case -> CASE expresion DOSPUNTOS instrucciones .)
    CASE            reduce using rule 33 (case -> CASE expresion DOSPUNTOS instrucciones .)
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 218

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 222
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 219

    (43) actualizacion -> IDENTIFICADOR IGUAL expresion .
    (64) expresion -> expresion . MAS expresion
    (65) expresion -> expresion . MENOS expresion
    (66) expresion -> expresion . POR expresion
    (67) expresion -> expresion . DIV expresion
    (68) expresion -> expresion . POT expresion
    (69) expresion -> expresion . MODULO expresion
    (70) expresion -> expresion . IGUALACION expresion
    (71) expresion -> expresion . DIREFENCIACION expresion
    (72) expresion -> expresion . MAYORQ expresion
    (73) expresion -> expresion . MENORQ expresion
    (74) expresion -> expresion . MAYORIGUAL expresion
    (75) expresion -> expresion . MENORIGUAL expresion
    (76) expresion -> expresion . OR expresion
    (77) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 43 (actualizacion -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    POR             shift and go to state 86
    DIV             shift and go to state 87
    POT             shift and go to state 88
    MODULO          shift and go to state 89
    IGUALACION      shift and go to state 90
    DIREFENCIACION  shift and go to state 91
    MAYORQ          shift and go to state 92
    MENORQ          shift and go to state 93
    MAYORIGUAL      shift and go to state 94
    MENORIGUAL      shift and go to state 95
    OR              shift and go to state 96
    AND             shift and go to state 97


state 220

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instrucciones                  shift and go to state 223
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 221

    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 224
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 222

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 225
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 223

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . error PTCOMA
    (17) variables -> . var IDENTIFICADOR finInstruccion
    (18) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (19) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (24) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (25) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (26) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (28) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (29) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (36) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (37) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (59) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (60) break -> . BREAK finInstruccion
    (61) continue -> . CONTINUE finInstruccion
    (46) returnn -> . RETURN expresion
    (35) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (50) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (51) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (45) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (22) var -> . VAR

    LLAVE_CIERRA    shift and go to state 226
    error           shift and go to state 16
    IDENTIFICADOR   shift and go to state 18
    IF              shift and go to state 19
    SWITCH          shift and go to state 20
    WHILE           shift and go to state 21
    FOR             shift and go to state 22
    PRINT           shift and go to state 23
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    RETURN          shift and go to state 26
    MAIN            shift and go to state 27
    FUNC            shift and go to state 28
    VAR             shift and go to state 29

    instruccion                    shift and go to state 30
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    var                            shift and go to state 17

state 224

    (26) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 26 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 225

    (37) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 37 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 226

    (38) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 38 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)

