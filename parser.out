Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ESPBARRAINVERTIVA
    ESPLINEA

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> variables
Rule 5     instruccion -> if
Rule 6     instruccion -> switch
Rule 7     instruccion -> while
Rule 8     instruccion -> for
Rule 9     instruccion -> print
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion -> returnn finInstruccion
Rule 13    instruccion -> main
Rule 14    instruccion -> funcion_void
Rule 15    instruccion -> llamada_fvoid finInstruccion
Rule 16    instruccion -> declArr_instr finInstruccion
Rule 17    instruccion -> modArr_instr finInstruccion
Rule 18    instruccion -> error PTCOMA
Rule 19    variables -> var IDENTIFICADOR finInstruccion
Rule 20    variables -> var IDENTIFICADOR IGUAL expresion finInstruccion
Rule 21    variables -> var IDENTIFICADOR IGUAL NULL finInstruccion
Rule 22    variables -> IDENTIFICADOR IGUAL expresion finInstruccion
Rule 23    variables -> IDENTIFICADOR IGUAL NULL finInstruccion
Rule 24    var -> VAR
Rule 25    variables -> IDENTIFICADOR INCREMENTO finInstruccion
Rule 26    variables -> IDENTIFICADOR DECREMENTO finInstruccion
Rule 27    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 28    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 29    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
Rule 30    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
Rule 31    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
Rule 32    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
Rule 33    listacases -> listacases case
Rule 34    listacases -> case
Rule 35    case -> CASE expresion DOSPUNTOS instrucciones
Rule 36    default -> DEFAULT DOSPUNTOS instrucciones
Rule 37    main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 38    while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 39    for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 40    for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 41    declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion
Rule 42    declaracionfor2 -> IDENTIFICADOR IGUAL expresion
Rule 43    actualizacion -> IDENTIFICADOR INCREMENTO
Rule 44    actualizacion -> IDENTIFICADOR DECREMENTO
Rule 45    actualizacion -> IDENTIFICADOR IGUAL expresion
Rule 46    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 47    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
Rule 48    declArr_instr -> tipo1
Rule 49    tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
Rule 50    lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA
Rule 51    lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 52    lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
Rule 53    lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA
Rule 54    tip -> STRING
Rule 55    tip -> INT
Rule 56    tip -> DOUBLE
Rule 57    tip -> CHAR
Rule 58    tip -> BOOLEAN
Rule 59    modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion
Rule 60    declArr_instr -> tipo2
Rule 61    tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
Rule 62    list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA
Rule 63    list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA
Rule 64    list_expresenes2a -> list_expresenes2a COMA LLAVE_ABRE expresion LLAVE_CIERRA
Rule 65    list_expresenes2a -> LLAVE_ABRE expresion LLAVE_CIERRA
Rule 66    returnn -> RETURN expresion
Rule 67    parametros_llamada -> parametros_llamada COMA parametro_llamada
Rule 68    parametros_llamada -> parametro_llamada
Rule 69    parametro_llamada -> expresion
Rule 70    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 71    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 72    parametros -> parametros COMA parametro
Rule 73    parametros -> parametro
Rule 74    parametro -> INT IDENTIFICADOR
Rule 75    parametro -> STRING IDENTIFICADOR
Rule 76    parametro -> DOUBLE IDENTIFICADOR
Rule 77    parametro -> BOOLEAN IDENTIFICADOR
Rule 78    parametro -> CHAR IDENTIFICADOR
Rule 79    print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
Rule 80    break -> BREAK finInstruccion
Rule 81    continue -> CONTINUE finInstruccion
Rule 82    finInstruccion -> PTCOMA
Rule 83    finInstruccion -> <empty>
Rule 84    expresion -> expresion MAS expresion
Rule 85    expresion -> expresion MENOS expresion
Rule 86    expresion -> expresion POR expresion
Rule 87    expresion -> expresion DIV expresion
Rule 88    expresion -> expresion POT expresion
Rule 89    expresion -> expresion MODULO expresion
Rule 90    expresion -> expresion IGUALACION expresion
Rule 91    expresion -> expresion DIREFENCIACION expresion
Rule 92    expresion -> expresion MAYORQ expresion
Rule 93    expresion -> expresion MENORQ expresion
Rule 94    expresion -> expresion MAYORIGUAL expresion
Rule 95    expresion -> expresion MENORIGUAL expresion
Rule 96    expresion -> expresion OR expresion
Rule 97    expresion -> expresion AND expresion
Rule 98    expresion -> MENOS expresion
Rule 99    expresion -> NOT expresion
Rule 100   expresion -> IDENTIFICADOR INCREMENTO
Rule 101   expresion -> IDENTIFICADOR DECREMENTO
Rule 102   expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 103   expresion -> ENTERO
Rule 104   expresion -> DECIMAL
Rule 105   expresion -> TRUE
Rule 106   expresion -> FALSE
Rule 107   expresion -> IDENTIFICADOR
Rule 108   expresion -> CADENA
Rule 109   expresion -> CHART
Rule 110   expresion -> llamada_fvoid
Rule 111   expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 112   expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 113   expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 114   expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 115   expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 116   expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 117   expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
Rule 118   expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
Rule 119   expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
Rule 120   expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
Rule 121   expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
Rule 122   expresion -> IDENTIFICADOR lista_expresiones
Rule 123   expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA

Terminals, with rules where they appear

AND                  : 97
BOOLEAN              : 58 77 120
BREAK                : 80
CADENA               : 108
CASE                 : 35
CHAR                 : 57 78 121
CHART                : 109
COMA                 : 62 64 67 72
CONTINUE             : 81
CORCHETE_ABRE        : 50 51 52 53
CORCHETE_CIERRA      : 50 51 52 53
DECIMAL              : 104
DECREMENTO           : 26 44 101
DEFAULT              : 36
DIREFENCIACION       : 91
DIV                  : 87
DOSPUNTOS            : 35 36
DOUBLE               : 56 76 118
ELSE                 : 28 29
ENTERO               : 103
ESPBARRAINVERTIVA    : 
ESPLINEA             : 
FALSE                : 106
FOR                  : 39 40
FUNC                 : 70 71
IDENTIFICADOR        : 19 20 21 22 23 25 26 41 42 43 44 45 46 47 49 59 61 70 71 74 75 76 77 78 100 101 107 122
IF                   : 27 28 29
IGUAL                : 20 21 22 23 41 42 45 49 59 61
IGUALACION           : 90
INCREMENTO           : 25 43 100
INT                  : 55 74 117
LENGHT               : 116
LLAVE_ABRE           : 27 28 28 29 30 31 32 37 38 39 40 62 63 64 65 70 71
LLAVE_CIERRA         : 27 28 28 29 30 31 32 37 38 39 40 62 63 64 65 70 71
MAIN                 : 37
MAS                  : 84
MAYORIGUAL           : 94
MAYORQ               : 92
MENORIGUAL           : 95
MENORQ               : 93
MENOS                : 85 98
MODULO               : 89
NEW                  : 49
NOT                  : 99
NULL                 : 21 23
OR                   : 96
PARENTESIS_ABRE      : 27 28 29 30 31 32 37 38 39 40 46 47 70 71 79 102 111 112 113 114 115 116 117 118 119 120 121 123
PARENTESIS_CIERRA    : 27 28 29 30 31 32 37 38 39 40 46 47 70 71 79 102 111 112 113 114 115 116 117 118 119 120 121 123
POR                  : 86
POT                  : 88
PRINT                : 79
PTCOMA               : 18 39 39 40 40 82
READ                 : 123
RETURN               : 66
ROUND                : 114
STRING               : 54 75 119
SWITCH               : 30 31 32
TOLOWER              : 112
TOUPPER              : 111
TRUE                 : 105
TRUNCATE             : 113
TYPEOF               : 115
VAR                  : 24 41
WHILE                : 38
error                : 18

Nonterminals, with rules where they appear

actualizacion        : 39 40
break                : 10
case                 : 33 34
continue             : 11
declArr_instr        : 16
declaracionfor1      : 39
declaracionfor2      : 40
default              : 31 32
expresion            : 20 22 27 28 29 30 31 32 35 38 39 40 41 42 45 52 53 59 64 65 66 69 79 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 99 102 111 112 113 114 115 116 117 118 119 120 121
finInstruccion       : 12 15 16 17 19 20 21 22 23 25 26 79 80 81
for                  : 8
funcion_void         : 14
if                   : 5 29
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 27 28 28 29 35 36 37 38 39 40 70 71
list_expresenes2     : 61 62
list_expresenes2a    : 62 63 64
lista_Dimension      : 49 50 61
lista_expresiones    : 49 52 59 122
listacases           : 30 31 33
llamada_fvoid        : 15 110
main                 : 13
modArr_instr         : 17
parametro            : 72 73
parametro_llamada    : 67 68
parametros           : 71 72
parametros_llamada   : 47 67
print                : 9
returnn              : 12
switch               : 6
tip                  : 49 49 61
tipo1                : 48
tipo2                : 60
var                  : 19 20 21
variables            : 4
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    $end            reduce using rule 1 (init -> instrucciones .)
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 3

    (3) instrucciones -> instruccion .

    error           reduce using rule 3 (instrucciones -> instruccion .)
    IDENTIFICADOR   reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    FUNC            reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    INT             reduce using rule 3 (instrucciones -> instruccion .)
    DOUBLE          reduce using rule 3 (instrucciones -> instruccion .)
    CHAR            reduce using rule 3 (instrucciones -> instruccion .)
    BOOLEAN         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVE_CIERRA    reduce using rule 3 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 3 (instrucciones -> instruccion .)
    CASE            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> variables .

    error           reduce using rule 4 (instruccion -> variables .)
    IDENTIFICADOR   reduce using rule 4 (instruccion -> variables .)
    IF              reduce using rule 4 (instruccion -> variables .)
    SWITCH          reduce using rule 4 (instruccion -> variables .)
    WHILE           reduce using rule 4 (instruccion -> variables .)
    FOR             reduce using rule 4 (instruccion -> variables .)
    PRINT           reduce using rule 4 (instruccion -> variables .)
    BREAK           reduce using rule 4 (instruccion -> variables .)
    CONTINUE        reduce using rule 4 (instruccion -> variables .)
    RETURN          reduce using rule 4 (instruccion -> variables .)
    MAIN            reduce using rule 4 (instruccion -> variables .)
    FUNC            reduce using rule 4 (instruccion -> variables .)
    VAR             reduce using rule 4 (instruccion -> variables .)
    STRING          reduce using rule 4 (instruccion -> variables .)
    INT             reduce using rule 4 (instruccion -> variables .)
    DOUBLE          reduce using rule 4 (instruccion -> variables .)
    CHAR            reduce using rule 4 (instruccion -> variables .)
    BOOLEAN         reduce using rule 4 (instruccion -> variables .)
    $end            reduce using rule 4 (instruccion -> variables .)
    LLAVE_CIERRA    reduce using rule 4 (instruccion -> variables .)
    DEFAULT         reduce using rule 4 (instruccion -> variables .)
    CASE            reduce using rule 4 (instruccion -> variables .)


state 5

    (5) instruccion -> if .

    error           reduce using rule 5 (instruccion -> if .)
    IDENTIFICADOR   reduce using rule 5 (instruccion -> if .)
    IF              reduce using rule 5 (instruccion -> if .)
    SWITCH          reduce using rule 5 (instruccion -> if .)
    WHILE           reduce using rule 5 (instruccion -> if .)
    FOR             reduce using rule 5 (instruccion -> if .)
    PRINT           reduce using rule 5 (instruccion -> if .)
    BREAK           reduce using rule 5 (instruccion -> if .)
    CONTINUE        reduce using rule 5 (instruccion -> if .)
    RETURN          reduce using rule 5 (instruccion -> if .)
    MAIN            reduce using rule 5 (instruccion -> if .)
    FUNC            reduce using rule 5 (instruccion -> if .)
    VAR             reduce using rule 5 (instruccion -> if .)
    STRING          reduce using rule 5 (instruccion -> if .)
    INT             reduce using rule 5 (instruccion -> if .)
    DOUBLE          reduce using rule 5 (instruccion -> if .)
    CHAR            reduce using rule 5 (instruccion -> if .)
    BOOLEAN         reduce using rule 5 (instruccion -> if .)
    $end            reduce using rule 5 (instruccion -> if .)
    LLAVE_CIERRA    reduce using rule 5 (instruccion -> if .)
    DEFAULT         reduce using rule 5 (instruccion -> if .)
    CASE            reduce using rule 5 (instruccion -> if .)


state 6

    (6) instruccion -> switch .

    error           reduce using rule 6 (instruccion -> switch .)
    IDENTIFICADOR   reduce using rule 6 (instruccion -> switch .)
    IF              reduce using rule 6 (instruccion -> switch .)
    SWITCH          reduce using rule 6 (instruccion -> switch .)
    WHILE           reduce using rule 6 (instruccion -> switch .)
    FOR             reduce using rule 6 (instruccion -> switch .)
    PRINT           reduce using rule 6 (instruccion -> switch .)
    BREAK           reduce using rule 6 (instruccion -> switch .)
    CONTINUE        reduce using rule 6 (instruccion -> switch .)
    RETURN          reduce using rule 6 (instruccion -> switch .)
    MAIN            reduce using rule 6 (instruccion -> switch .)
    FUNC            reduce using rule 6 (instruccion -> switch .)
    VAR             reduce using rule 6 (instruccion -> switch .)
    STRING          reduce using rule 6 (instruccion -> switch .)
    INT             reduce using rule 6 (instruccion -> switch .)
    DOUBLE          reduce using rule 6 (instruccion -> switch .)
    CHAR            reduce using rule 6 (instruccion -> switch .)
    BOOLEAN         reduce using rule 6 (instruccion -> switch .)
    $end            reduce using rule 6 (instruccion -> switch .)
    LLAVE_CIERRA    reduce using rule 6 (instruccion -> switch .)
    DEFAULT         reduce using rule 6 (instruccion -> switch .)
    CASE            reduce using rule 6 (instruccion -> switch .)


state 7

    (7) instruccion -> while .

    error           reduce using rule 7 (instruccion -> while .)
    IDENTIFICADOR   reduce using rule 7 (instruccion -> while .)
    IF              reduce using rule 7 (instruccion -> while .)
    SWITCH          reduce using rule 7 (instruccion -> while .)
    WHILE           reduce using rule 7 (instruccion -> while .)
    FOR             reduce using rule 7 (instruccion -> while .)
    PRINT           reduce using rule 7 (instruccion -> while .)
    BREAK           reduce using rule 7 (instruccion -> while .)
    CONTINUE        reduce using rule 7 (instruccion -> while .)
    RETURN          reduce using rule 7 (instruccion -> while .)
    MAIN            reduce using rule 7 (instruccion -> while .)
    FUNC            reduce using rule 7 (instruccion -> while .)
    VAR             reduce using rule 7 (instruccion -> while .)
    STRING          reduce using rule 7 (instruccion -> while .)
    INT             reduce using rule 7 (instruccion -> while .)
    DOUBLE          reduce using rule 7 (instruccion -> while .)
    CHAR            reduce using rule 7 (instruccion -> while .)
    BOOLEAN         reduce using rule 7 (instruccion -> while .)
    $end            reduce using rule 7 (instruccion -> while .)
    LLAVE_CIERRA    reduce using rule 7 (instruccion -> while .)
    DEFAULT         reduce using rule 7 (instruccion -> while .)
    CASE            reduce using rule 7 (instruccion -> while .)


state 8

    (8) instruccion -> for .

    error           reduce using rule 8 (instruccion -> for .)
    IDENTIFICADOR   reduce using rule 8 (instruccion -> for .)
    IF              reduce using rule 8 (instruccion -> for .)
    SWITCH          reduce using rule 8 (instruccion -> for .)
    WHILE           reduce using rule 8 (instruccion -> for .)
    FOR             reduce using rule 8 (instruccion -> for .)
    PRINT           reduce using rule 8 (instruccion -> for .)
    BREAK           reduce using rule 8 (instruccion -> for .)
    CONTINUE        reduce using rule 8 (instruccion -> for .)
    RETURN          reduce using rule 8 (instruccion -> for .)
    MAIN            reduce using rule 8 (instruccion -> for .)
    FUNC            reduce using rule 8 (instruccion -> for .)
    VAR             reduce using rule 8 (instruccion -> for .)
    STRING          reduce using rule 8 (instruccion -> for .)
    INT             reduce using rule 8 (instruccion -> for .)
    DOUBLE          reduce using rule 8 (instruccion -> for .)
    CHAR            reduce using rule 8 (instruccion -> for .)
    BOOLEAN         reduce using rule 8 (instruccion -> for .)
    $end            reduce using rule 8 (instruccion -> for .)
    LLAVE_CIERRA    reduce using rule 8 (instruccion -> for .)
    DEFAULT         reduce using rule 8 (instruccion -> for .)
    CASE            reduce using rule 8 (instruccion -> for .)


state 9

    (9) instruccion -> print .

    error           reduce using rule 9 (instruccion -> print .)
    IDENTIFICADOR   reduce using rule 9 (instruccion -> print .)
    IF              reduce using rule 9 (instruccion -> print .)
    SWITCH          reduce using rule 9 (instruccion -> print .)
    WHILE           reduce using rule 9 (instruccion -> print .)
    FOR             reduce using rule 9 (instruccion -> print .)
    PRINT           reduce using rule 9 (instruccion -> print .)
    BREAK           reduce using rule 9 (instruccion -> print .)
    CONTINUE        reduce using rule 9 (instruccion -> print .)
    RETURN          reduce using rule 9 (instruccion -> print .)
    MAIN            reduce using rule 9 (instruccion -> print .)
    FUNC            reduce using rule 9 (instruccion -> print .)
    VAR             reduce using rule 9 (instruccion -> print .)
    STRING          reduce using rule 9 (instruccion -> print .)
    INT             reduce using rule 9 (instruccion -> print .)
    DOUBLE          reduce using rule 9 (instruccion -> print .)
    CHAR            reduce using rule 9 (instruccion -> print .)
    BOOLEAN         reduce using rule 9 (instruccion -> print .)
    $end            reduce using rule 9 (instruccion -> print .)
    LLAVE_CIERRA    reduce using rule 9 (instruccion -> print .)
    DEFAULT         reduce using rule 9 (instruccion -> print .)
    CASE            reduce using rule 9 (instruccion -> print .)


state 10

    (10) instruccion -> break .

    error           reduce using rule 10 (instruccion -> break .)
    IDENTIFICADOR   reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    SWITCH          reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    FOR             reduce using rule 10 (instruccion -> break .)
    PRINT           reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    RETURN          reduce using rule 10 (instruccion -> break .)
    MAIN            reduce using rule 10 (instruccion -> break .)
    FUNC            reduce using rule 10 (instruccion -> break .)
    VAR             reduce using rule 10 (instruccion -> break .)
    STRING          reduce using rule 10 (instruccion -> break .)
    INT             reduce using rule 10 (instruccion -> break .)
    DOUBLE          reduce using rule 10 (instruccion -> break .)
    CHAR            reduce using rule 10 (instruccion -> break .)
    BOOLEAN         reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLAVE_CIERRA    reduce using rule 10 (instruccion -> break .)
    DEFAULT         reduce using rule 10 (instruccion -> break .)
    CASE            reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    error           reduce using rule 11 (instruccion -> continue .)
    IDENTIFICADOR   reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    SWITCH          reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    FOR             reduce using rule 11 (instruccion -> continue .)
    PRINT           reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    RETURN          reduce using rule 11 (instruccion -> continue .)
    MAIN            reduce using rule 11 (instruccion -> continue .)
    FUNC            reduce using rule 11 (instruccion -> continue .)
    VAR             reduce using rule 11 (instruccion -> continue .)
    STRING          reduce using rule 11 (instruccion -> continue .)
    INT             reduce using rule 11 (instruccion -> continue .)
    DOUBLE          reduce using rule 11 (instruccion -> continue .)
    CHAR            reduce using rule 11 (instruccion -> continue .)
    BOOLEAN         reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLAVE_CIERRA    reduce using rule 11 (instruccion -> continue .)
    DEFAULT         reduce using rule 11 (instruccion -> continue .)
    CASE            reduce using rule 11 (instruccion -> continue .)


state 12

    (12) instruccion -> returnn . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 41

state 13

    (13) instruccion -> main .

    error           reduce using rule 13 (instruccion -> main .)
    IDENTIFICADOR   reduce using rule 13 (instruccion -> main .)
    IF              reduce using rule 13 (instruccion -> main .)
    SWITCH          reduce using rule 13 (instruccion -> main .)
    WHILE           reduce using rule 13 (instruccion -> main .)
    FOR             reduce using rule 13 (instruccion -> main .)
    PRINT           reduce using rule 13 (instruccion -> main .)
    BREAK           reduce using rule 13 (instruccion -> main .)
    CONTINUE        reduce using rule 13 (instruccion -> main .)
    RETURN          reduce using rule 13 (instruccion -> main .)
    MAIN            reduce using rule 13 (instruccion -> main .)
    FUNC            reduce using rule 13 (instruccion -> main .)
    VAR             reduce using rule 13 (instruccion -> main .)
    STRING          reduce using rule 13 (instruccion -> main .)
    INT             reduce using rule 13 (instruccion -> main .)
    DOUBLE          reduce using rule 13 (instruccion -> main .)
    CHAR            reduce using rule 13 (instruccion -> main .)
    BOOLEAN         reduce using rule 13 (instruccion -> main .)
    $end            reduce using rule 13 (instruccion -> main .)
    LLAVE_CIERRA    reduce using rule 13 (instruccion -> main .)
    DEFAULT         reduce using rule 13 (instruccion -> main .)
    CASE            reduce using rule 13 (instruccion -> main .)


state 14

    (14) instruccion -> funcion_void .

    error           reduce using rule 14 (instruccion -> funcion_void .)
    IDENTIFICADOR   reduce using rule 14 (instruccion -> funcion_void .)
    IF              reduce using rule 14 (instruccion -> funcion_void .)
    SWITCH          reduce using rule 14 (instruccion -> funcion_void .)
    WHILE           reduce using rule 14 (instruccion -> funcion_void .)
    FOR             reduce using rule 14 (instruccion -> funcion_void .)
    PRINT           reduce using rule 14 (instruccion -> funcion_void .)
    BREAK           reduce using rule 14 (instruccion -> funcion_void .)
    CONTINUE        reduce using rule 14 (instruccion -> funcion_void .)
    RETURN          reduce using rule 14 (instruccion -> funcion_void .)
    MAIN            reduce using rule 14 (instruccion -> funcion_void .)
    FUNC            reduce using rule 14 (instruccion -> funcion_void .)
    VAR             reduce using rule 14 (instruccion -> funcion_void .)
    STRING          reduce using rule 14 (instruccion -> funcion_void .)
    INT             reduce using rule 14 (instruccion -> funcion_void .)
    DOUBLE          reduce using rule 14 (instruccion -> funcion_void .)
    CHAR            reduce using rule 14 (instruccion -> funcion_void .)
    BOOLEAN         reduce using rule 14 (instruccion -> funcion_void .)
    $end            reduce using rule 14 (instruccion -> funcion_void .)
    LLAVE_CIERRA    reduce using rule 14 (instruccion -> funcion_void .)
    DEFAULT         reduce using rule 14 (instruccion -> funcion_void .)
    CASE            reduce using rule 14 (instruccion -> funcion_void .)


state 15

    (15) instruccion -> llamada_fvoid . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 43

state 16

    (16) instruccion -> declArr_instr . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 44

state 17

    (17) instruccion -> modArr_instr . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 45

state 18

    (18) instruccion -> error . PTCOMA

    PTCOMA          shift and go to state 46


state 19

    (19) variables -> var . IDENTIFICADOR finInstruccion
    (20) variables -> var . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> var . IDENTIFICADOR IGUAL NULL finInstruccion

    IDENTIFICADOR   shift and go to state 47


state 20

    (22) variables -> IDENTIFICADOR . IGUAL expresion finInstruccion
    (23) variables -> IDENTIFICADOR . IGUAL NULL finInstruccion
    (25) variables -> IDENTIFICADOR . INCREMENTO finInstruccion
    (26) variables -> IDENTIFICADOR . DECREMENTO finInstruccion
    (46) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (59) modArr_instr -> IDENTIFICADOR . lista_expresiones IGUAL expresion
    (52) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (53) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    IGUAL           shift and go to state 48
    INCREMENTO      shift and go to state 49
    DECREMENTO      shift and go to state 50
    PARENTESIS_ABRE shift and go to state 51
    CORCHETE_ABRE   shift and go to state 53

    lista_expresiones              shift and go to state 52

state 21

    (27) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    PARENTESIS_ABRE shift and go to state 54


state 22

    (30) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 55


state 23

    (38) while -> WHILE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 56


state 24

    (39) for -> FOR . PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> FOR . PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 57


state 25

    (79) print -> PRINT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion

    PARENTESIS_ABRE shift and go to state 58


state 26

    (80) break -> BREAK . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 59

state 27

    (81) continue -> CONTINUE . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 60

state 28

    (66) returnn -> RETURN . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 61
    llamada_fvoid                  shift and go to state 72

state 29

    (37) main -> MAIN . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 80


state 30

    (70) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 81


state 31

    (48) declArr_instr -> tipo1 .

    PTCOMA          reduce using rule 48 (declArr_instr -> tipo1 .)
    error           reduce using rule 48 (declArr_instr -> tipo1 .)
    IDENTIFICADOR   reduce using rule 48 (declArr_instr -> tipo1 .)
    IF              reduce using rule 48 (declArr_instr -> tipo1 .)
    SWITCH          reduce using rule 48 (declArr_instr -> tipo1 .)
    WHILE           reduce using rule 48 (declArr_instr -> tipo1 .)
    FOR             reduce using rule 48 (declArr_instr -> tipo1 .)
    PRINT           reduce using rule 48 (declArr_instr -> tipo1 .)
    BREAK           reduce using rule 48 (declArr_instr -> tipo1 .)
    CONTINUE        reduce using rule 48 (declArr_instr -> tipo1 .)
    RETURN          reduce using rule 48 (declArr_instr -> tipo1 .)
    MAIN            reduce using rule 48 (declArr_instr -> tipo1 .)
    FUNC            reduce using rule 48 (declArr_instr -> tipo1 .)
    VAR             reduce using rule 48 (declArr_instr -> tipo1 .)
    STRING          reduce using rule 48 (declArr_instr -> tipo1 .)
    INT             reduce using rule 48 (declArr_instr -> tipo1 .)
    DOUBLE          reduce using rule 48 (declArr_instr -> tipo1 .)
    CHAR            reduce using rule 48 (declArr_instr -> tipo1 .)
    BOOLEAN         reduce using rule 48 (declArr_instr -> tipo1 .)
    $end            reduce using rule 48 (declArr_instr -> tipo1 .)
    LLAVE_CIERRA    reduce using rule 48 (declArr_instr -> tipo1 .)
    DEFAULT         reduce using rule 48 (declArr_instr -> tipo1 .)
    CASE            reduce using rule 48 (declArr_instr -> tipo1 .)


state 32

    (60) declArr_instr -> tipo2 .

    PTCOMA          reduce using rule 60 (declArr_instr -> tipo2 .)
    error           reduce using rule 60 (declArr_instr -> tipo2 .)
    IDENTIFICADOR   reduce using rule 60 (declArr_instr -> tipo2 .)
    IF              reduce using rule 60 (declArr_instr -> tipo2 .)
    SWITCH          reduce using rule 60 (declArr_instr -> tipo2 .)
    WHILE           reduce using rule 60 (declArr_instr -> tipo2 .)
    FOR             reduce using rule 60 (declArr_instr -> tipo2 .)
    PRINT           reduce using rule 60 (declArr_instr -> tipo2 .)
    BREAK           reduce using rule 60 (declArr_instr -> tipo2 .)
    CONTINUE        reduce using rule 60 (declArr_instr -> tipo2 .)
    RETURN          reduce using rule 60 (declArr_instr -> tipo2 .)
    MAIN            reduce using rule 60 (declArr_instr -> tipo2 .)
    FUNC            reduce using rule 60 (declArr_instr -> tipo2 .)
    VAR             reduce using rule 60 (declArr_instr -> tipo2 .)
    STRING          reduce using rule 60 (declArr_instr -> tipo2 .)
    INT             reduce using rule 60 (declArr_instr -> tipo2 .)
    DOUBLE          reduce using rule 60 (declArr_instr -> tipo2 .)
    CHAR            reduce using rule 60 (declArr_instr -> tipo2 .)
    BOOLEAN         reduce using rule 60 (declArr_instr -> tipo2 .)
    $end            reduce using rule 60 (declArr_instr -> tipo2 .)
    LLAVE_CIERRA    reduce using rule 60 (declArr_instr -> tipo2 .)
    DEFAULT         reduce using rule 60 (declArr_instr -> tipo2 .)
    CASE            reduce using rule 60 (declArr_instr -> tipo2 .)


state 33

    (24) var -> VAR .

    IDENTIFICADOR   reduce using rule 24 (var -> VAR .)


state 34

    (49) tipo1 -> tip . lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> tip . lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (50) lista_Dimension -> . lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA
    (51) lista_Dimension -> . CORCHETE_ABRE CORCHETE_CIERRA

    CORCHETE_ABRE   shift and go to state 83

    lista_Dimension                shift and go to state 82

state 35

    (54) tip -> STRING .

    CORCHETE_ABRE   reduce using rule 54 (tip -> STRING .)


state 36

    (55) tip -> INT .

    CORCHETE_ABRE   reduce using rule 55 (tip -> INT .)


state 37

    (56) tip -> DOUBLE .

    CORCHETE_ABRE   reduce using rule 56 (tip -> DOUBLE .)


state 38

    (57) tip -> CHAR .

    CORCHETE_ABRE   reduce using rule 57 (tip -> CHAR .)


state 39

    (58) tip -> BOOLEAN .

    CORCHETE_ABRE   reduce using rule 58 (tip -> BOOLEAN .)


state 40

    (2) instrucciones -> instrucciones instruccion .

    error           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNC            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DOUBLE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BOOLEAN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVE_CIERRA    reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 41

    (12) instruccion -> returnn finInstruccion .

    error           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IDENTIFICADOR   reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IF              reduce using rule 12 (instruccion -> returnn finInstruccion .)
    SWITCH          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    WHILE           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FOR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    PRINT           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BREAK           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CONTINUE        reduce using rule 12 (instruccion -> returnn finInstruccion .)
    RETURN          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    MAIN            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FUNC            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    VAR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    STRING          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    INT             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DOUBLE          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CHAR            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BOOLEAN         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    $end            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    LLAVE_CIERRA    reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DEFAULT         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CASE            reduce using rule 12 (instruccion -> returnn finInstruccion .)


state 42

    (82) finInstruccion -> PTCOMA .

    error           reduce using rule 82 (finInstruccion -> PTCOMA .)
    IDENTIFICADOR   reduce using rule 82 (finInstruccion -> PTCOMA .)
    IF              reduce using rule 82 (finInstruccion -> PTCOMA .)
    SWITCH          reduce using rule 82 (finInstruccion -> PTCOMA .)
    WHILE           reduce using rule 82 (finInstruccion -> PTCOMA .)
    FOR             reduce using rule 82 (finInstruccion -> PTCOMA .)
    PRINT           reduce using rule 82 (finInstruccion -> PTCOMA .)
    BREAK           reduce using rule 82 (finInstruccion -> PTCOMA .)
    CONTINUE        reduce using rule 82 (finInstruccion -> PTCOMA .)
    RETURN          reduce using rule 82 (finInstruccion -> PTCOMA .)
    MAIN            reduce using rule 82 (finInstruccion -> PTCOMA .)
    FUNC            reduce using rule 82 (finInstruccion -> PTCOMA .)
    VAR             reduce using rule 82 (finInstruccion -> PTCOMA .)
    STRING          reduce using rule 82 (finInstruccion -> PTCOMA .)
    INT             reduce using rule 82 (finInstruccion -> PTCOMA .)
    DOUBLE          reduce using rule 82 (finInstruccion -> PTCOMA .)
    CHAR            reduce using rule 82 (finInstruccion -> PTCOMA .)
    BOOLEAN         reduce using rule 82 (finInstruccion -> PTCOMA .)
    $end            reduce using rule 82 (finInstruccion -> PTCOMA .)
    LLAVE_CIERRA    reduce using rule 82 (finInstruccion -> PTCOMA .)
    DEFAULT         reduce using rule 82 (finInstruccion -> PTCOMA .)
    CASE            reduce using rule 82 (finInstruccion -> PTCOMA .)


state 43

    (15) instruccion -> llamada_fvoid finInstruccion .

    error           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IDENTIFICADOR   reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IF              reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    SWITCH          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    WHILE           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FOR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    PRINT           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BREAK           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CONTINUE        reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    RETURN          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    MAIN            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FUNC            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    VAR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    STRING          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    INT             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DOUBLE          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CHAR            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BOOLEAN         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    $end            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    LLAVE_CIERRA    reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DEFAULT         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CASE            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)


state 44

    (16) instruccion -> declArr_instr finInstruccion .

    error           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    IDENTIFICADOR   reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    IF              reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    SWITCH          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    WHILE           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    FOR             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    PRINT           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    BREAK           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CONTINUE        reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    RETURN          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    MAIN            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    FUNC            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    VAR             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    STRING          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    INT             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    DOUBLE          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CHAR            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    BOOLEAN         reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    $end            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    LLAVE_CIERRA    reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    DEFAULT         reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CASE            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)


state 45

    (17) instruccion -> modArr_instr finInstruccion .

    error           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    IDENTIFICADOR   reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    IF              reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    SWITCH          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    WHILE           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    FOR             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    PRINT           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    BREAK           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CONTINUE        reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    RETURN          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    MAIN            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    FUNC            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    VAR             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    STRING          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    INT             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    DOUBLE          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CHAR            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    BOOLEAN         reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    $end            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    LLAVE_CIERRA    reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    DEFAULT         reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CASE            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)


state 46

    (18) instruccion -> error PTCOMA .

    error           reduce using rule 18 (instruccion -> error PTCOMA .)
    IDENTIFICADOR   reduce using rule 18 (instruccion -> error PTCOMA .)
    IF              reduce using rule 18 (instruccion -> error PTCOMA .)
    SWITCH          reduce using rule 18 (instruccion -> error PTCOMA .)
    WHILE           reduce using rule 18 (instruccion -> error PTCOMA .)
    FOR             reduce using rule 18 (instruccion -> error PTCOMA .)
    PRINT           reduce using rule 18 (instruccion -> error PTCOMA .)
    BREAK           reduce using rule 18 (instruccion -> error PTCOMA .)
    CONTINUE        reduce using rule 18 (instruccion -> error PTCOMA .)
    RETURN          reduce using rule 18 (instruccion -> error PTCOMA .)
    MAIN            reduce using rule 18 (instruccion -> error PTCOMA .)
    FUNC            reduce using rule 18 (instruccion -> error PTCOMA .)
    VAR             reduce using rule 18 (instruccion -> error PTCOMA .)
    STRING          reduce using rule 18 (instruccion -> error PTCOMA .)
    INT             reduce using rule 18 (instruccion -> error PTCOMA .)
    DOUBLE          reduce using rule 18 (instruccion -> error PTCOMA .)
    CHAR            reduce using rule 18 (instruccion -> error PTCOMA .)
    BOOLEAN         reduce using rule 18 (instruccion -> error PTCOMA .)
    $end            reduce using rule 18 (instruccion -> error PTCOMA .)
    LLAVE_CIERRA    reduce using rule 18 (instruccion -> error PTCOMA .)
    DEFAULT         reduce using rule 18 (instruccion -> error PTCOMA .)
    CASE            reduce using rule 18 (instruccion -> error PTCOMA .)


state 47

    (19) variables -> var IDENTIFICADOR . finInstruccion
    (20) variables -> var IDENTIFICADOR . IGUAL expresion finInstruccion
    (21) variables -> var IDENTIFICADOR . IGUAL NULL finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    IGUAL           shift and go to state 85
    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 84

state 48

    (22) variables -> IDENTIFICADOR IGUAL . expresion finInstruccion
    (23) variables -> IDENTIFICADOR IGUAL . NULL finInstruccion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 87
    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 86
    llamada_fvoid                  shift and go to state 72

state 49

    (25) variables -> IDENTIFICADOR INCREMENTO . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 88

state 50

    (26) variables -> IDENTIFICADOR DECREMENTO . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 89

state 51

    (46) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA
    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . parametros_llamada PARENTESIS_CIERRA
    (67) parametros_llamada -> . parametros_llamada COMA parametro_llamada
    (68) parametros_llamada -> . parametro_llamada
    (69) parametro_llamada -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 90
    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    parametros_llamada             shift and go to state 91
    parametro_llamada              shift and go to state 92
    expresion                      shift and go to state 93
    llamada_fvoid                  shift and go to state 72

state 52

    (59) modArr_instr -> IDENTIFICADOR lista_expresiones . IGUAL expresion
    (52) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    IGUAL           shift and go to state 94
    CORCHETE_ABRE   shift and go to state 95


state 53

    (53) lista_expresiones -> CORCHETE_ABRE . expresion CORCHETE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 96
    llamada_fvoid                  shift and go to state 72

state 54

    (27) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 97
    llamada_fvoid                  shift and go to state 72

state 55

    (30) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 98
    llamada_fvoid                  shift and go to state 72

state 56

    (38) while -> WHILE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 99
    llamada_fvoid                  shift and go to state 72

state 57

    (39) for -> FOR PARENTESIS_ABRE . declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> FOR PARENTESIS_ABRE . declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) declaracionfor1 -> . VAR IDENTIFICADOR IGUAL expresion
    (42) declaracionfor2 -> . IDENTIFICADOR IGUAL expresion

    VAR             shift and go to state 102
    IDENTIFICADOR   shift and go to state 103

    declaracionfor1                shift and go to state 100
    declaracionfor2                shift and go to state 101

state 58

    (79) print -> PRINT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA finInstruccion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 104
    llamada_fvoid                  shift and go to state 72

state 59

    (80) break -> BREAK finInstruccion .

    error           reduce using rule 80 (break -> BREAK finInstruccion .)
    IDENTIFICADOR   reduce using rule 80 (break -> BREAK finInstruccion .)
    IF              reduce using rule 80 (break -> BREAK finInstruccion .)
    SWITCH          reduce using rule 80 (break -> BREAK finInstruccion .)
    WHILE           reduce using rule 80 (break -> BREAK finInstruccion .)
    FOR             reduce using rule 80 (break -> BREAK finInstruccion .)
    PRINT           reduce using rule 80 (break -> BREAK finInstruccion .)
    BREAK           reduce using rule 80 (break -> BREAK finInstruccion .)
    CONTINUE        reduce using rule 80 (break -> BREAK finInstruccion .)
    RETURN          reduce using rule 80 (break -> BREAK finInstruccion .)
    MAIN            reduce using rule 80 (break -> BREAK finInstruccion .)
    FUNC            reduce using rule 80 (break -> BREAK finInstruccion .)
    VAR             reduce using rule 80 (break -> BREAK finInstruccion .)
    STRING          reduce using rule 80 (break -> BREAK finInstruccion .)
    INT             reduce using rule 80 (break -> BREAK finInstruccion .)
    DOUBLE          reduce using rule 80 (break -> BREAK finInstruccion .)
    CHAR            reduce using rule 80 (break -> BREAK finInstruccion .)
    BOOLEAN         reduce using rule 80 (break -> BREAK finInstruccion .)
    $end            reduce using rule 80 (break -> BREAK finInstruccion .)
    LLAVE_CIERRA    reduce using rule 80 (break -> BREAK finInstruccion .)
    DEFAULT         reduce using rule 80 (break -> BREAK finInstruccion .)
    CASE            reduce using rule 80 (break -> BREAK finInstruccion .)


state 60

    (81) continue -> CONTINUE finInstruccion .

    error           reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    IDENTIFICADOR   reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    IF              reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    SWITCH          reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    WHILE           reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    FOR             reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    PRINT           reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    BREAK           reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    CONTINUE        reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    RETURN          reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    MAIN            reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    FUNC            reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    VAR             reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    STRING          reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    INT             reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    DOUBLE          reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    CHAR            reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    BOOLEAN         reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    $end            reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    LLAVE_CIERRA    reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    DEFAULT         reduce using rule 81 (continue -> CONTINUE finInstruccion .)
    CASE            reduce using rule 81 (continue -> CONTINUE finInstruccion .)


state 61

    (66) returnn -> RETURN expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 66 (returnn -> RETURN expresion .)
    error           reduce using rule 66 (returnn -> RETURN expresion .)
    IDENTIFICADOR   reduce using rule 66 (returnn -> RETURN expresion .)
    IF              reduce using rule 66 (returnn -> RETURN expresion .)
    SWITCH          reduce using rule 66 (returnn -> RETURN expresion .)
    WHILE           reduce using rule 66 (returnn -> RETURN expresion .)
    FOR             reduce using rule 66 (returnn -> RETURN expresion .)
    PRINT           reduce using rule 66 (returnn -> RETURN expresion .)
    BREAK           reduce using rule 66 (returnn -> RETURN expresion .)
    CONTINUE        reduce using rule 66 (returnn -> RETURN expresion .)
    RETURN          reduce using rule 66 (returnn -> RETURN expresion .)
    MAIN            reduce using rule 66 (returnn -> RETURN expresion .)
    FUNC            reduce using rule 66 (returnn -> RETURN expresion .)
    VAR             reduce using rule 66 (returnn -> RETURN expresion .)
    STRING          reduce using rule 66 (returnn -> RETURN expresion .)
    INT             reduce using rule 66 (returnn -> RETURN expresion .)
    DOUBLE          reduce using rule 66 (returnn -> RETURN expresion .)
    CHAR            reduce using rule 66 (returnn -> RETURN expresion .)
    BOOLEAN         reduce using rule 66 (returnn -> RETURN expresion .)
    $end            reduce using rule 66 (returnn -> RETURN expresion .)
    LLAVE_CIERRA    reduce using rule 66 (returnn -> RETURN expresion .)
    DEFAULT         reduce using rule 66 (returnn -> RETURN expresion .)
    CASE            reduce using rule 66 (returnn -> RETURN expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 62

    (98) expresion -> MENOS . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 119
    llamada_fvoid                  shift and go to state 72

state 63

    (99) expresion -> NOT . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 120
    llamada_fvoid                  shift and go to state 72

state 64

    (100) expresion -> IDENTIFICADOR . INCREMENTO
    (101) expresion -> IDENTIFICADOR . DECREMENTO
    (107) expresion -> IDENTIFICADOR .
    (122) expresion -> IDENTIFICADOR . lista_expresiones
    (46) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (52) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (53) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    INCREMENTO      shift and go to state 121
    DECREMENTO      shift and go to state 122
    MAS             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 107 (expresion -> IDENTIFICADOR .)
    POR             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    POT             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MODULO          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    IGUALACION      reduce using rule 107 (expresion -> IDENTIFICADOR .)
    DIREFENCIACION  reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MAYORQ          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MENORQ          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MAYORIGUAL      reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MENORIGUAL      reduce using rule 107 (expresion -> IDENTIFICADOR .)
    OR              reduce using rule 107 (expresion -> IDENTIFICADOR .)
    AND             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    PTCOMA          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    error           reduce using rule 107 (expresion -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 107 (expresion -> IDENTIFICADOR .)
    IF              reduce using rule 107 (expresion -> IDENTIFICADOR .)
    SWITCH          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    WHILE           reduce using rule 107 (expresion -> IDENTIFICADOR .)
    FOR             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    PRINT           reduce using rule 107 (expresion -> IDENTIFICADOR .)
    BREAK           reduce using rule 107 (expresion -> IDENTIFICADOR .)
    CONTINUE        reduce using rule 107 (expresion -> IDENTIFICADOR .)
    RETURN          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    MAIN            reduce using rule 107 (expresion -> IDENTIFICADOR .)
    FUNC            reduce using rule 107 (expresion -> IDENTIFICADOR .)
    VAR             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    STRING          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    INT             reduce using rule 107 (expresion -> IDENTIFICADOR .)
    DOUBLE          reduce using rule 107 (expresion -> IDENTIFICADOR .)
    CHAR            reduce using rule 107 (expresion -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 107 (expresion -> IDENTIFICADOR .)
    $end            reduce using rule 107 (expresion -> IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 107 (expresion -> IDENTIFICADOR .)
    DEFAULT         reduce using rule 107 (expresion -> IDENTIFICADOR .)
    CASE            reduce using rule 107 (expresion -> IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 107 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 107 (expresion -> IDENTIFICADOR .)
    CORCHETE_CIERRA reduce using rule 107 (expresion -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 107 (expresion -> IDENTIFICADOR .)
    PARENTESIS_ABRE shift and go to state 51
    CORCHETE_ABRE   shift and go to state 53

    lista_expresiones              shift and go to state 123

state 65

    (102) expresion -> PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (117) expresion -> PARENTESIS_ABRE . INT PARENTESIS_CIERRA expresion
    (118) expresion -> PARENTESIS_ABRE . DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> PARENTESIS_ABRE . STRING PARENTESIS_CIERRA expresion
    (120) expresion -> PARENTESIS_ABRE . BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> PARENTESIS_ABRE . CHAR PARENTESIS_CIERRA expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    INT             shift and go to state 125
    DOUBLE          shift and go to state 126
    STRING          shift and go to state 127
    BOOLEAN         shift and go to state 128
    CHAR            shift and go to state 129
    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 124
    llamada_fvoid                  shift and go to state 72

state 66

    (103) expresion -> ENTERO .

    MAS             reduce using rule 103 (expresion -> ENTERO .)
    MENOS           reduce using rule 103 (expresion -> ENTERO .)
    POR             reduce using rule 103 (expresion -> ENTERO .)
    DIV             reduce using rule 103 (expresion -> ENTERO .)
    POT             reduce using rule 103 (expresion -> ENTERO .)
    MODULO          reduce using rule 103 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 103 (expresion -> ENTERO .)
    DIREFENCIACION  reduce using rule 103 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 103 (expresion -> ENTERO .)
    MENORQ          reduce using rule 103 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 103 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 103 (expresion -> ENTERO .)
    OR              reduce using rule 103 (expresion -> ENTERO .)
    AND             reduce using rule 103 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 103 (expresion -> ENTERO .)
    error           reduce using rule 103 (expresion -> ENTERO .)
    IDENTIFICADOR   reduce using rule 103 (expresion -> ENTERO .)
    IF              reduce using rule 103 (expresion -> ENTERO .)
    SWITCH          reduce using rule 103 (expresion -> ENTERO .)
    WHILE           reduce using rule 103 (expresion -> ENTERO .)
    FOR             reduce using rule 103 (expresion -> ENTERO .)
    PRINT           reduce using rule 103 (expresion -> ENTERO .)
    BREAK           reduce using rule 103 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 103 (expresion -> ENTERO .)
    RETURN          reduce using rule 103 (expresion -> ENTERO .)
    MAIN            reduce using rule 103 (expresion -> ENTERO .)
    FUNC            reduce using rule 103 (expresion -> ENTERO .)
    VAR             reduce using rule 103 (expresion -> ENTERO .)
    STRING          reduce using rule 103 (expresion -> ENTERO .)
    INT             reduce using rule 103 (expresion -> ENTERO .)
    DOUBLE          reduce using rule 103 (expresion -> ENTERO .)
    CHAR            reduce using rule 103 (expresion -> ENTERO .)
    BOOLEAN         reduce using rule 103 (expresion -> ENTERO .)
    $end            reduce using rule 103 (expresion -> ENTERO .)
    LLAVE_CIERRA    reduce using rule 103 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 103 (expresion -> ENTERO .)
    CASE            reduce using rule 103 (expresion -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 103 (expresion -> ENTERO .)
    COMA            reduce using rule 103 (expresion -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 103 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 103 (expresion -> ENTERO .)


state 67

    (104) expresion -> DECIMAL .

    MAS             reduce using rule 104 (expresion -> DECIMAL .)
    MENOS           reduce using rule 104 (expresion -> DECIMAL .)
    POR             reduce using rule 104 (expresion -> DECIMAL .)
    DIV             reduce using rule 104 (expresion -> DECIMAL .)
    POT             reduce using rule 104 (expresion -> DECIMAL .)
    MODULO          reduce using rule 104 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 104 (expresion -> DECIMAL .)
    DIREFENCIACION  reduce using rule 104 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 104 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 104 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 104 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 104 (expresion -> DECIMAL .)
    OR              reduce using rule 104 (expresion -> DECIMAL .)
    AND             reduce using rule 104 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 104 (expresion -> DECIMAL .)
    error           reduce using rule 104 (expresion -> DECIMAL .)
    IDENTIFICADOR   reduce using rule 104 (expresion -> DECIMAL .)
    IF              reduce using rule 104 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 104 (expresion -> DECIMAL .)
    WHILE           reduce using rule 104 (expresion -> DECIMAL .)
    FOR             reduce using rule 104 (expresion -> DECIMAL .)
    PRINT           reduce using rule 104 (expresion -> DECIMAL .)
    BREAK           reduce using rule 104 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 104 (expresion -> DECIMAL .)
    RETURN          reduce using rule 104 (expresion -> DECIMAL .)
    MAIN            reduce using rule 104 (expresion -> DECIMAL .)
    FUNC            reduce using rule 104 (expresion -> DECIMAL .)
    VAR             reduce using rule 104 (expresion -> DECIMAL .)
    STRING          reduce using rule 104 (expresion -> DECIMAL .)
    INT             reduce using rule 104 (expresion -> DECIMAL .)
    DOUBLE          reduce using rule 104 (expresion -> DECIMAL .)
    CHAR            reduce using rule 104 (expresion -> DECIMAL .)
    BOOLEAN         reduce using rule 104 (expresion -> DECIMAL .)
    $end            reduce using rule 104 (expresion -> DECIMAL .)
    LLAVE_CIERRA    reduce using rule 104 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 104 (expresion -> DECIMAL .)
    CASE            reduce using rule 104 (expresion -> DECIMAL .)
    PARENTESIS_CIERRA reduce using rule 104 (expresion -> DECIMAL .)
    COMA            reduce using rule 104 (expresion -> DECIMAL .)
    CORCHETE_CIERRA reduce using rule 104 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 104 (expresion -> DECIMAL .)


state 68

    (105) expresion -> TRUE .

    MAS             reduce using rule 105 (expresion -> TRUE .)
    MENOS           reduce using rule 105 (expresion -> TRUE .)
    POR             reduce using rule 105 (expresion -> TRUE .)
    DIV             reduce using rule 105 (expresion -> TRUE .)
    POT             reduce using rule 105 (expresion -> TRUE .)
    MODULO          reduce using rule 105 (expresion -> TRUE .)
    IGUALACION      reduce using rule 105 (expresion -> TRUE .)
    DIREFENCIACION  reduce using rule 105 (expresion -> TRUE .)
    MAYORQ          reduce using rule 105 (expresion -> TRUE .)
    MENORQ          reduce using rule 105 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 105 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 105 (expresion -> TRUE .)
    OR              reduce using rule 105 (expresion -> TRUE .)
    AND             reduce using rule 105 (expresion -> TRUE .)
    PTCOMA          reduce using rule 105 (expresion -> TRUE .)
    error           reduce using rule 105 (expresion -> TRUE .)
    IDENTIFICADOR   reduce using rule 105 (expresion -> TRUE .)
    IF              reduce using rule 105 (expresion -> TRUE .)
    SWITCH          reduce using rule 105 (expresion -> TRUE .)
    WHILE           reduce using rule 105 (expresion -> TRUE .)
    FOR             reduce using rule 105 (expresion -> TRUE .)
    PRINT           reduce using rule 105 (expresion -> TRUE .)
    BREAK           reduce using rule 105 (expresion -> TRUE .)
    CONTINUE        reduce using rule 105 (expresion -> TRUE .)
    RETURN          reduce using rule 105 (expresion -> TRUE .)
    MAIN            reduce using rule 105 (expresion -> TRUE .)
    FUNC            reduce using rule 105 (expresion -> TRUE .)
    VAR             reduce using rule 105 (expresion -> TRUE .)
    STRING          reduce using rule 105 (expresion -> TRUE .)
    INT             reduce using rule 105 (expresion -> TRUE .)
    DOUBLE          reduce using rule 105 (expresion -> TRUE .)
    CHAR            reduce using rule 105 (expresion -> TRUE .)
    BOOLEAN         reduce using rule 105 (expresion -> TRUE .)
    $end            reduce using rule 105 (expresion -> TRUE .)
    LLAVE_CIERRA    reduce using rule 105 (expresion -> TRUE .)
    DEFAULT         reduce using rule 105 (expresion -> TRUE .)
    CASE            reduce using rule 105 (expresion -> TRUE .)
    PARENTESIS_CIERRA reduce using rule 105 (expresion -> TRUE .)
    COMA            reduce using rule 105 (expresion -> TRUE .)
    CORCHETE_CIERRA reduce using rule 105 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 105 (expresion -> TRUE .)


state 69

    (106) expresion -> FALSE .

    MAS             reduce using rule 106 (expresion -> FALSE .)
    MENOS           reduce using rule 106 (expresion -> FALSE .)
    POR             reduce using rule 106 (expresion -> FALSE .)
    DIV             reduce using rule 106 (expresion -> FALSE .)
    POT             reduce using rule 106 (expresion -> FALSE .)
    MODULO          reduce using rule 106 (expresion -> FALSE .)
    IGUALACION      reduce using rule 106 (expresion -> FALSE .)
    DIREFENCIACION  reduce using rule 106 (expresion -> FALSE .)
    MAYORQ          reduce using rule 106 (expresion -> FALSE .)
    MENORQ          reduce using rule 106 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 106 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 106 (expresion -> FALSE .)
    OR              reduce using rule 106 (expresion -> FALSE .)
    AND             reduce using rule 106 (expresion -> FALSE .)
    PTCOMA          reduce using rule 106 (expresion -> FALSE .)
    error           reduce using rule 106 (expresion -> FALSE .)
    IDENTIFICADOR   reduce using rule 106 (expresion -> FALSE .)
    IF              reduce using rule 106 (expresion -> FALSE .)
    SWITCH          reduce using rule 106 (expresion -> FALSE .)
    WHILE           reduce using rule 106 (expresion -> FALSE .)
    FOR             reduce using rule 106 (expresion -> FALSE .)
    PRINT           reduce using rule 106 (expresion -> FALSE .)
    BREAK           reduce using rule 106 (expresion -> FALSE .)
    CONTINUE        reduce using rule 106 (expresion -> FALSE .)
    RETURN          reduce using rule 106 (expresion -> FALSE .)
    MAIN            reduce using rule 106 (expresion -> FALSE .)
    FUNC            reduce using rule 106 (expresion -> FALSE .)
    VAR             reduce using rule 106 (expresion -> FALSE .)
    STRING          reduce using rule 106 (expresion -> FALSE .)
    INT             reduce using rule 106 (expresion -> FALSE .)
    DOUBLE          reduce using rule 106 (expresion -> FALSE .)
    CHAR            reduce using rule 106 (expresion -> FALSE .)
    BOOLEAN         reduce using rule 106 (expresion -> FALSE .)
    $end            reduce using rule 106 (expresion -> FALSE .)
    LLAVE_CIERRA    reduce using rule 106 (expresion -> FALSE .)
    DEFAULT         reduce using rule 106 (expresion -> FALSE .)
    CASE            reduce using rule 106 (expresion -> FALSE .)
    PARENTESIS_CIERRA reduce using rule 106 (expresion -> FALSE .)
    COMA            reduce using rule 106 (expresion -> FALSE .)
    CORCHETE_CIERRA reduce using rule 106 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 106 (expresion -> FALSE .)


state 70

    (108) expresion -> CADENA .

    MAS             reduce using rule 108 (expresion -> CADENA .)
    MENOS           reduce using rule 108 (expresion -> CADENA .)
    POR             reduce using rule 108 (expresion -> CADENA .)
    DIV             reduce using rule 108 (expresion -> CADENA .)
    POT             reduce using rule 108 (expresion -> CADENA .)
    MODULO          reduce using rule 108 (expresion -> CADENA .)
    IGUALACION      reduce using rule 108 (expresion -> CADENA .)
    DIREFENCIACION  reduce using rule 108 (expresion -> CADENA .)
    MAYORQ          reduce using rule 108 (expresion -> CADENA .)
    MENORQ          reduce using rule 108 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 108 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 108 (expresion -> CADENA .)
    OR              reduce using rule 108 (expresion -> CADENA .)
    AND             reduce using rule 108 (expresion -> CADENA .)
    PTCOMA          reduce using rule 108 (expresion -> CADENA .)
    error           reduce using rule 108 (expresion -> CADENA .)
    IDENTIFICADOR   reduce using rule 108 (expresion -> CADENA .)
    IF              reduce using rule 108 (expresion -> CADENA .)
    SWITCH          reduce using rule 108 (expresion -> CADENA .)
    WHILE           reduce using rule 108 (expresion -> CADENA .)
    FOR             reduce using rule 108 (expresion -> CADENA .)
    PRINT           reduce using rule 108 (expresion -> CADENA .)
    BREAK           reduce using rule 108 (expresion -> CADENA .)
    CONTINUE        reduce using rule 108 (expresion -> CADENA .)
    RETURN          reduce using rule 108 (expresion -> CADENA .)
    MAIN            reduce using rule 108 (expresion -> CADENA .)
    FUNC            reduce using rule 108 (expresion -> CADENA .)
    VAR             reduce using rule 108 (expresion -> CADENA .)
    STRING          reduce using rule 108 (expresion -> CADENA .)
    INT             reduce using rule 108 (expresion -> CADENA .)
    DOUBLE          reduce using rule 108 (expresion -> CADENA .)
    CHAR            reduce using rule 108 (expresion -> CADENA .)
    BOOLEAN         reduce using rule 108 (expresion -> CADENA .)
    $end            reduce using rule 108 (expresion -> CADENA .)
    LLAVE_CIERRA    reduce using rule 108 (expresion -> CADENA .)
    DEFAULT         reduce using rule 108 (expresion -> CADENA .)
    CASE            reduce using rule 108 (expresion -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 108 (expresion -> CADENA .)
    COMA            reduce using rule 108 (expresion -> CADENA .)
    CORCHETE_CIERRA reduce using rule 108 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 108 (expresion -> CADENA .)


state 71

    (109) expresion -> CHART .

    MAS             reduce using rule 109 (expresion -> CHART .)
    MENOS           reduce using rule 109 (expresion -> CHART .)
    POR             reduce using rule 109 (expresion -> CHART .)
    DIV             reduce using rule 109 (expresion -> CHART .)
    POT             reduce using rule 109 (expresion -> CHART .)
    MODULO          reduce using rule 109 (expresion -> CHART .)
    IGUALACION      reduce using rule 109 (expresion -> CHART .)
    DIREFENCIACION  reduce using rule 109 (expresion -> CHART .)
    MAYORQ          reduce using rule 109 (expresion -> CHART .)
    MENORQ          reduce using rule 109 (expresion -> CHART .)
    MAYORIGUAL      reduce using rule 109 (expresion -> CHART .)
    MENORIGUAL      reduce using rule 109 (expresion -> CHART .)
    OR              reduce using rule 109 (expresion -> CHART .)
    AND             reduce using rule 109 (expresion -> CHART .)
    PTCOMA          reduce using rule 109 (expresion -> CHART .)
    error           reduce using rule 109 (expresion -> CHART .)
    IDENTIFICADOR   reduce using rule 109 (expresion -> CHART .)
    IF              reduce using rule 109 (expresion -> CHART .)
    SWITCH          reduce using rule 109 (expresion -> CHART .)
    WHILE           reduce using rule 109 (expresion -> CHART .)
    FOR             reduce using rule 109 (expresion -> CHART .)
    PRINT           reduce using rule 109 (expresion -> CHART .)
    BREAK           reduce using rule 109 (expresion -> CHART .)
    CONTINUE        reduce using rule 109 (expresion -> CHART .)
    RETURN          reduce using rule 109 (expresion -> CHART .)
    MAIN            reduce using rule 109 (expresion -> CHART .)
    FUNC            reduce using rule 109 (expresion -> CHART .)
    VAR             reduce using rule 109 (expresion -> CHART .)
    STRING          reduce using rule 109 (expresion -> CHART .)
    INT             reduce using rule 109 (expresion -> CHART .)
    DOUBLE          reduce using rule 109 (expresion -> CHART .)
    CHAR            reduce using rule 109 (expresion -> CHART .)
    BOOLEAN         reduce using rule 109 (expresion -> CHART .)
    $end            reduce using rule 109 (expresion -> CHART .)
    LLAVE_CIERRA    reduce using rule 109 (expresion -> CHART .)
    DEFAULT         reduce using rule 109 (expresion -> CHART .)
    CASE            reduce using rule 109 (expresion -> CHART .)
    PARENTESIS_CIERRA reduce using rule 109 (expresion -> CHART .)
    COMA            reduce using rule 109 (expresion -> CHART .)
    CORCHETE_CIERRA reduce using rule 109 (expresion -> CHART .)
    DOSPUNTOS       reduce using rule 109 (expresion -> CHART .)


state 72

    (110) expresion -> llamada_fvoid .

    MAS             reduce using rule 110 (expresion -> llamada_fvoid .)
    MENOS           reduce using rule 110 (expresion -> llamada_fvoid .)
    POR             reduce using rule 110 (expresion -> llamada_fvoid .)
    DIV             reduce using rule 110 (expresion -> llamada_fvoid .)
    POT             reduce using rule 110 (expresion -> llamada_fvoid .)
    MODULO          reduce using rule 110 (expresion -> llamada_fvoid .)
    IGUALACION      reduce using rule 110 (expresion -> llamada_fvoid .)
    DIREFENCIACION  reduce using rule 110 (expresion -> llamada_fvoid .)
    MAYORQ          reduce using rule 110 (expresion -> llamada_fvoid .)
    MENORQ          reduce using rule 110 (expresion -> llamada_fvoid .)
    MAYORIGUAL      reduce using rule 110 (expresion -> llamada_fvoid .)
    MENORIGUAL      reduce using rule 110 (expresion -> llamada_fvoid .)
    OR              reduce using rule 110 (expresion -> llamada_fvoid .)
    AND             reduce using rule 110 (expresion -> llamada_fvoid .)
    PTCOMA          reduce using rule 110 (expresion -> llamada_fvoid .)
    error           reduce using rule 110 (expresion -> llamada_fvoid .)
    IDENTIFICADOR   reduce using rule 110 (expresion -> llamada_fvoid .)
    IF              reduce using rule 110 (expresion -> llamada_fvoid .)
    SWITCH          reduce using rule 110 (expresion -> llamada_fvoid .)
    WHILE           reduce using rule 110 (expresion -> llamada_fvoid .)
    FOR             reduce using rule 110 (expresion -> llamada_fvoid .)
    PRINT           reduce using rule 110 (expresion -> llamada_fvoid .)
    BREAK           reduce using rule 110 (expresion -> llamada_fvoid .)
    CONTINUE        reduce using rule 110 (expresion -> llamada_fvoid .)
    RETURN          reduce using rule 110 (expresion -> llamada_fvoid .)
    MAIN            reduce using rule 110 (expresion -> llamada_fvoid .)
    FUNC            reduce using rule 110 (expresion -> llamada_fvoid .)
    VAR             reduce using rule 110 (expresion -> llamada_fvoid .)
    STRING          reduce using rule 110 (expresion -> llamada_fvoid .)
    INT             reduce using rule 110 (expresion -> llamada_fvoid .)
    DOUBLE          reduce using rule 110 (expresion -> llamada_fvoid .)
    CHAR            reduce using rule 110 (expresion -> llamada_fvoid .)
    BOOLEAN         reduce using rule 110 (expresion -> llamada_fvoid .)
    $end            reduce using rule 110 (expresion -> llamada_fvoid .)
    LLAVE_CIERRA    reduce using rule 110 (expresion -> llamada_fvoid .)
    DEFAULT         reduce using rule 110 (expresion -> llamada_fvoid .)
    CASE            reduce using rule 110 (expresion -> llamada_fvoid .)
    PARENTESIS_CIERRA reduce using rule 110 (expresion -> llamada_fvoid .)
    COMA            reduce using rule 110 (expresion -> llamada_fvoid .)
    CORCHETE_CIERRA reduce using rule 110 (expresion -> llamada_fvoid .)
    DOSPUNTOS       reduce using rule 110 (expresion -> llamada_fvoid .)


state 73

    (111) expresion -> TOUPPER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 130


state 74

    (112) expresion -> TOLOWER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 131


state 75

    (113) expresion -> TRUNCATE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 132


state 76

    (114) expresion -> ROUND . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 133


state 77

    (115) expresion -> TYPEOF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 134


state 78

    (116) expresion -> LENGHT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 135


state 79

    (123) expresion -> READ . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 136


state 80

    (37) main -> MAIN PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 137


state 81

    (70) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 138


state 82

    (49) tipo1 -> tip lista_Dimension . IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> tip lista_Dimension . IDENTIFICADOR IGUAL list_expresenes2
    (50) lista_Dimension -> lista_Dimension . CORCHETE_ABRE CORCHETE_CIERRA

    IDENTIFICADOR   shift and go to state 139
    CORCHETE_ABRE   shift and go to state 140


state 83

    (51) lista_Dimension -> CORCHETE_ABRE . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 141


state 84

    (19) variables -> var IDENTIFICADOR finInstruccion .

    error           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    IDENTIFICADOR   reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    IF              reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    SWITCH          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    WHILE           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    FOR             reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    PRINT           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    BREAK           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    CONTINUE        reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    RETURN          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    MAIN            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    FUNC            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    VAR             reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    STRING          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    INT             reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    DOUBLE          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    CHAR            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    BOOLEAN         reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    $end            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    LLAVE_CIERRA    reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    DEFAULT         reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    CASE            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)


state 85

    (20) variables -> var IDENTIFICADOR IGUAL . expresion finInstruccion
    (21) variables -> var IDENTIFICADOR IGUAL . NULL finInstruccion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 143
    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 142
    llamada_fvoid                  shift and go to state 72

state 86

    (22) variables -> IDENTIFICADOR IGUAL expresion . finInstruccion
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 144

state 87

    (23) variables -> IDENTIFICADOR IGUAL NULL . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 145

state 88

    (25) variables -> IDENTIFICADOR INCREMENTO finInstruccion .

    error           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IF              reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    SWITCH          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    WHILE           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FOR             reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    PRINT           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BREAK           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CONTINUE        reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    RETURN          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    MAIN            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FUNC            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    VAR             reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    STRING          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    INT             reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DOUBLE          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CHAR            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BOOLEAN         reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    $end            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DEFAULT         reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CASE            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)


state 89

    (26) variables -> IDENTIFICADOR DECREMENTO finInstruccion .

    error           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IF              reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    SWITCH          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    WHILE           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FOR             reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    PRINT           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BREAK           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CONTINUE        reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    RETURN          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    MAIN            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FUNC            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    VAR             reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    STRING          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    INT             reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DOUBLE          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CHAR            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BOOLEAN         reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    $end            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DEFAULT         reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CASE            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)


state 90

    (46) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    STRING          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    INT             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CHAR            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAS             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 91

    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada . PARENTESIS_CIERRA
    (67) parametros_llamada -> parametros_llamada . COMA parametro_llamada

    PARENTESIS_CIERRA shift and go to state 146
    COMA            shift and go to state 147


state 92

    (68) parametros_llamada -> parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 68 (parametros_llamada -> parametro_llamada .)
    COMA            reduce using rule 68 (parametros_llamada -> parametro_llamada .)


state 93

    (69) parametro_llamada -> expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 69 (parametro_llamada -> expresion .)
    COMA            reduce using rule 69 (parametro_llamada -> expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 94

    (59) modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 148
    llamada_fvoid                  shift and go to state 72

state 95

    (52) lista_expresiones -> lista_expresiones CORCHETE_ABRE . expresion CORCHETE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 149
    llamada_fvoid                  shift and go to state 72

state 96

    (53) lista_expresiones -> CORCHETE_ABRE expresion . CORCHETE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    CORCHETE_CIERRA shift and go to state 150
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 97

    (27) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 151
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 98

    (30) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 152
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 99

    (38) while -> WHILE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 153
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 100

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 154


state 101

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 155


state 102

    (41) declaracionfor1 -> VAR . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 156


state 103

    (42) declaracionfor2 -> IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 157


state 104

    (79) print -> PRINT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA finInstruccion
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 158
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 105

    (84) expresion -> expresion MAS . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 159
    llamada_fvoid                  shift and go to state 72

state 106

    (85) expresion -> expresion MENOS . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 160
    llamada_fvoid                  shift and go to state 72

state 107

    (86) expresion -> expresion POR . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 161
    llamada_fvoid                  shift and go to state 72

state 108

    (87) expresion -> expresion DIV . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 162
    llamada_fvoid                  shift and go to state 72

state 109

    (88) expresion -> expresion POT . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 163
    llamada_fvoid                  shift and go to state 72

state 110

    (89) expresion -> expresion MODULO . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 164
    llamada_fvoid                  shift and go to state 72

state 111

    (90) expresion -> expresion IGUALACION . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 165
    llamada_fvoid                  shift and go to state 72

state 112

    (91) expresion -> expresion DIREFENCIACION . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 166
    llamada_fvoid                  shift and go to state 72

state 113

    (92) expresion -> expresion MAYORQ . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 167
    llamada_fvoid                  shift and go to state 72

state 114

    (93) expresion -> expresion MENORQ . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 168
    llamada_fvoid                  shift and go to state 72

state 115

    (94) expresion -> expresion MAYORIGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 169
    llamada_fvoid                  shift and go to state 72

state 116

    (95) expresion -> expresion MENORIGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 170
    llamada_fvoid                  shift and go to state 72

state 117

    (96) expresion -> expresion OR . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 171
    llamada_fvoid                  shift and go to state 72

state 118

    (97) expresion -> expresion AND . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 172
    llamada_fvoid                  shift and go to state 72

state 119

    (98) expresion -> MENOS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 98 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 98 (expresion -> MENOS expresion .)
    POR             reduce using rule 98 (expresion -> MENOS expresion .)
    DIV             reduce using rule 98 (expresion -> MENOS expresion .)
    POT             reduce using rule 98 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 98 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 98 (expresion -> MENOS expresion .)
    DIREFENCIACION  reduce using rule 98 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 98 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 98 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 98 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 98 (expresion -> MENOS expresion .)
    OR              reduce using rule 98 (expresion -> MENOS expresion .)
    AND             reduce using rule 98 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 98 (expresion -> MENOS expresion .)
    error           reduce using rule 98 (expresion -> MENOS expresion .)
    IDENTIFICADOR   reduce using rule 98 (expresion -> MENOS expresion .)
    IF              reduce using rule 98 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 98 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 98 (expresion -> MENOS expresion .)
    FOR             reduce using rule 98 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 98 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 98 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 98 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 98 (expresion -> MENOS expresion .)
    MAIN            reduce using rule 98 (expresion -> MENOS expresion .)
    FUNC            reduce using rule 98 (expresion -> MENOS expresion .)
    VAR             reduce using rule 98 (expresion -> MENOS expresion .)
    STRING          reduce using rule 98 (expresion -> MENOS expresion .)
    INT             reduce using rule 98 (expresion -> MENOS expresion .)
    DOUBLE          reduce using rule 98 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 98 (expresion -> MENOS expresion .)
    BOOLEAN         reduce using rule 98 (expresion -> MENOS expresion .)
    $end            reduce using rule 98 (expresion -> MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 98 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 98 (expresion -> MENOS expresion .)
    CASE            reduce using rule 98 (expresion -> MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 98 (expresion -> MENOS expresion .)
    COMA            reduce using rule 98 (expresion -> MENOS expresion .)
    CORCHETE_CIERRA reduce using rule 98 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 98 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! POT             [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 120

    (99) expresion -> NOT expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    OR              reduce using rule 99 (expresion -> NOT expresion .)
    AND             reduce using rule 99 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 99 (expresion -> NOT expresion .)
    error           reduce using rule 99 (expresion -> NOT expresion .)
    IDENTIFICADOR   reduce using rule 99 (expresion -> NOT expresion .)
    IF              reduce using rule 99 (expresion -> NOT expresion .)
    SWITCH          reduce using rule 99 (expresion -> NOT expresion .)
    WHILE           reduce using rule 99 (expresion -> NOT expresion .)
    FOR             reduce using rule 99 (expresion -> NOT expresion .)
    PRINT           reduce using rule 99 (expresion -> NOT expresion .)
    BREAK           reduce using rule 99 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 99 (expresion -> NOT expresion .)
    RETURN          reduce using rule 99 (expresion -> NOT expresion .)
    MAIN            reduce using rule 99 (expresion -> NOT expresion .)
    FUNC            reduce using rule 99 (expresion -> NOT expresion .)
    VAR             reduce using rule 99 (expresion -> NOT expresion .)
    STRING          reduce using rule 99 (expresion -> NOT expresion .)
    INT             reduce using rule 99 (expresion -> NOT expresion .)
    DOUBLE          reduce using rule 99 (expresion -> NOT expresion .)
    CHAR            reduce using rule 99 (expresion -> NOT expresion .)
    BOOLEAN         reduce using rule 99 (expresion -> NOT expresion .)
    $end            reduce using rule 99 (expresion -> NOT expresion .)
    LLAVE_CIERRA    reduce using rule 99 (expresion -> NOT expresion .)
    DEFAULT         reduce using rule 99 (expresion -> NOT expresion .)
    CASE            reduce using rule 99 (expresion -> NOT expresion .)
    PARENTESIS_CIERRA reduce using rule 99 (expresion -> NOT expresion .)
    COMA            reduce using rule 99 (expresion -> NOT expresion .)
    CORCHETE_CIERRA reduce using rule 99 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 99 (expresion -> NOT expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116

  ! MAS             [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 99 (expresion -> NOT expresion .) ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 121

    (100) expresion -> IDENTIFICADOR INCREMENTO .

    MAS             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENOS           reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    POR             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIV             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    POT             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MODULO          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    IGUALACION      reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIREFENCIACION  reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORQ          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORQ          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORIGUAL      reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORIGUAL      reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    OR              reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    AND             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    PTCOMA          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    error           reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    IDENTIFICADOR   reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    IF              reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    SWITCH          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    WHILE           reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    FOR             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    PRINT           reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    BREAK           reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    CONTINUE        reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    RETURN          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAIN            reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    FUNC            reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    VAR             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    STRING          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    INT             reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOUBLE          reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    CHAR            reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    BOOLEAN         reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    $end            reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    LLAVE_CIERRA    reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    DEFAULT         reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    CASE            reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    COMA            reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    CORCHETE_CIERRA reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOSPUNTOS       reduce using rule 100 (expresion -> IDENTIFICADOR INCREMENTO .)


state 122

    (101) expresion -> IDENTIFICADOR DECREMENTO .

    MAS             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENOS           reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    POR             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIV             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    POT             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MODULO          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    IGUALACION      reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIREFENCIACION  reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORQ          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORQ          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORIGUAL      reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORIGUAL      reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    OR              reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    AND             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    PTCOMA          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    error           reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    IDENTIFICADOR   reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    IF              reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    SWITCH          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    WHILE           reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    FOR             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    PRINT           reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    BREAK           reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    CONTINUE        reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    RETURN          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAIN            reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    FUNC            reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    VAR             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    STRING          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    INT             reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOUBLE          reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    CHAR            reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    BOOLEAN         reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    $end            reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    LLAVE_CIERRA    reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    DEFAULT         reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    CASE            reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    COMA            reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    CORCHETE_CIERRA reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOSPUNTOS       reduce using rule 101 (expresion -> IDENTIFICADOR DECREMENTO .)


state 123

    (122) expresion -> IDENTIFICADOR lista_expresiones .
    (52) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    MAS             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENOS           reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    POR             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    DIV             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    POT             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MODULO          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    IGUALACION      reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    DIREFENCIACION  reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAYORQ          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENORQ          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAYORIGUAL      reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENORIGUAL      reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    OR              reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    AND             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    PTCOMA          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    error           reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    IDENTIFICADOR   reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    IF              reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    SWITCH          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    WHILE           reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    FOR             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    PRINT           reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    BREAK           reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    CONTINUE        reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    RETURN          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAIN            reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    FUNC            reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    VAR             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    STRING          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    INT             reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    DOUBLE          reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    CHAR            reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    BOOLEAN         reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    $end            reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    LLAVE_CIERRA    reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    DEFAULT         reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    CASE            reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    PARENTESIS_CIERRA reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    COMA            reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    CORCHETE_CIERRA reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    DOSPUNTOS       reduce using rule 122 (expresion -> IDENTIFICADOR lista_expresiones .)
    CORCHETE_ABRE   shift and go to state 95


state 124

    (102) expresion -> PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 173
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 125

    (117) expresion -> PARENTESIS_ABRE INT . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 174


state 126

    (118) expresion -> PARENTESIS_ABRE DOUBLE . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 175


state 127

    (119) expresion -> PARENTESIS_ABRE STRING . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 176


state 128

    (120) expresion -> PARENTESIS_ABRE BOOLEAN . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 177


state 129

    (121) expresion -> PARENTESIS_ABRE CHAR . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 178


state 130

    (111) expresion -> TOUPPER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 179
    llamada_fvoid                  shift and go to state 72

state 131

    (112) expresion -> TOLOWER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 180
    llamada_fvoid                  shift and go to state 72

state 132

    (113) expresion -> TRUNCATE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 181
    llamada_fvoid                  shift and go to state 72

state 133

    (114) expresion -> ROUND PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 182
    llamada_fvoid                  shift and go to state 72

state 134

    (115) expresion -> TYPEOF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 183
    llamada_fvoid                  shift and go to state 72

state 135

    (116) expresion -> LENGHT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 184
    llamada_fvoid                  shift and go to state 72

state 136

    (123) expresion -> READ PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 185


state 137

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 186


state 138

    (70) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (72) parametros -> . parametros COMA parametro
    (73) parametros -> . parametro
    (74) parametro -> . INT IDENTIFICADOR
    (75) parametro -> . STRING IDENTIFICADOR
    (76) parametro -> . DOUBLE IDENTIFICADOR
    (77) parametro -> . BOOLEAN IDENTIFICADOR
    (78) parametro -> . CHAR IDENTIFICADOR

    PARENTESIS_CIERRA shift and go to state 187
    INT             shift and go to state 190
    STRING          shift and go to state 191
    DOUBLE          shift and go to state 192
    BOOLEAN         shift and go to state 193
    CHAR            shift and go to state 194

    parametros                     shift and go to state 188
    parametro                      shift and go to state 189

state 139

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR . IGUAL NEW tip lista_expresiones
    (61) tipo2 -> tip lista_Dimension IDENTIFICADOR . IGUAL list_expresenes2

    IGUAL           shift and go to state 195


state 140

    (50) lista_Dimension -> lista_Dimension CORCHETE_ABRE . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 196


state 141

    (51) lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .

    IDENTIFICADOR   reduce using rule 51 (lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 51 (lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 142

    (20) variables -> var IDENTIFICADOR IGUAL expresion . finInstruccion
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118
    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 197

state 143

    (21) variables -> var IDENTIFICADOR IGUAL NULL . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 198

state 144

    (22) variables -> IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    STRING          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    INT             reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DOUBLE          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CHAR            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BOOLEAN         reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)


state 145

    (23) variables -> IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    STRING          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    INT             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DOUBLE          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CHAR            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BOOLEAN         reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)


state 146

    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    error           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IF              reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    WHILE           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FOR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PRINT           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BREAK           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    RETURN          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAIN            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FUNC            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    VAR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    STRING          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    INT             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CHAR            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    $end            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAS             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENOS           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIV             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POT             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MODULO          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    OR              reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    AND             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CASE            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    COMA            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)


state 147

    (67) parametros_llamada -> parametros_llamada COMA . parametro_llamada
    (69) parametro_llamada -> . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    parametro_llamada              shift and go to state 199
    expresion                      shift and go to state 93
    llamada_fvoid                  shift and go to state 72

state 148

    (59) modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    error           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    IDENTIFICADOR   reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    IF              reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    SWITCH          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    WHILE           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    FOR             reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    PRINT           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    BREAK           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CONTINUE        reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    RETURN          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    MAIN            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    FUNC            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    VAR             reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    STRING          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    INT             reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    DOUBLE          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CHAR            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    BOOLEAN         reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    $end            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    DEFAULT         reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CASE            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 149

    (52) lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion . CORCHETE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    CORCHETE_CIERRA shift and go to state 200
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 150

    (53) lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .

    IGUAL           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAS             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENOS           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POR             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIV             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POT             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MODULO          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IGUALACION      reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIREFENCIACION  reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORQ          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORQ          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORIGUAL      reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORIGUAL      reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    OR              reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    AND             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PTCOMA          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    error           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IDENTIFICADOR   reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IF              reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    SWITCH          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    WHILE           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FOR             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PRINT           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BREAK           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CONTINUE        reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    RETURN          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAIN            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FUNC            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    VAR             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    STRING          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    INT             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOUBLE          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CHAR            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BOOLEAN         reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    $end            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DEFAULT         reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CASE            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    COMA            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_CIERRA reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOSPUNTOS       reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)


state 151

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 201


state 152

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE default LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 202


state 153

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 203


state 154

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 204
    llamada_fvoid                  shift and go to state 72

state 155

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 205
    llamada_fvoid                  shift and go to state 72

state 156

    (41) declaracionfor1 -> VAR IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 206


state 157

    (42) declaracionfor2 -> IDENTIFICADOR IGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 207
    llamada_fvoid                  shift and go to state 72

state 158

    (79) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA . finInstruccion
    (82) finInstruccion -> . PTCOMA
    (83) finInstruccion -> .

    PTCOMA          shift and go to state 42
    error           reduce using rule 83 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 83 (finInstruccion -> .)
    IF              reduce using rule 83 (finInstruccion -> .)
    SWITCH          reduce using rule 83 (finInstruccion -> .)
    WHILE           reduce using rule 83 (finInstruccion -> .)
    FOR             reduce using rule 83 (finInstruccion -> .)
    PRINT           reduce using rule 83 (finInstruccion -> .)
    BREAK           reduce using rule 83 (finInstruccion -> .)
    CONTINUE        reduce using rule 83 (finInstruccion -> .)
    RETURN          reduce using rule 83 (finInstruccion -> .)
    MAIN            reduce using rule 83 (finInstruccion -> .)
    FUNC            reduce using rule 83 (finInstruccion -> .)
    VAR             reduce using rule 83 (finInstruccion -> .)
    STRING          reduce using rule 83 (finInstruccion -> .)
    INT             reduce using rule 83 (finInstruccion -> .)
    DOUBLE          reduce using rule 83 (finInstruccion -> .)
    CHAR            reduce using rule 83 (finInstruccion -> .)
    BOOLEAN         reduce using rule 83 (finInstruccion -> .)
    $end            reduce using rule 83 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 83 (finInstruccion -> .)
    DEFAULT         reduce using rule 83 (finInstruccion -> .)
    CASE            reduce using rule 83 (finInstruccion -> .)

    finInstruccion                 shift and go to state 208

state 159

    (84) expresion -> expresion MAS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 84 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 84 (expresion -> expresion MAS expresion .)
    DIREFENCIACION  reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 84 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 84 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion MAS expresion .)
    error           reduce using rule 84 (expresion -> expresion MAS expresion .)
    IDENTIFICADOR   reduce using rule 84 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 84 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 84 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 84 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 84 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion MAS expresion .)
    MAIN            reduce using rule 84 (expresion -> expresion MAS expresion .)
    FUNC            reduce using rule 84 (expresion -> expresion MAS expresion .)
    VAR             reduce using rule 84 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 84 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 84 (expresion -> expresion MAS expresion .)
    DOUBLE          reduce using rule 84 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 84 (expresion -> expresion MAS expresion .)
    BOOLEAN         reduce using rule 84 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 84 (expresion -> expresion MAS expresion .)
    LLAVE_CIERRA    reduce using rule 84 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 84 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 84 (expresion -> expresion MAS expresion .)
    PARENTESIS_CIERRA reduce using rule 84 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 84 (expresion -> expresion MAS expresion .)
    CORCHETE_CIERRA reduce using rule 84 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 84 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! POR             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 160

    (85) expresion -> expresion MENOS expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    DIREFENCIACION  reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 85 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 85 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    IDENTIFICADOR   reduce using rule 85 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 85 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    MAIN            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    FUNC            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    VAR             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 85 (expresion -> expresion MENOS expresion .)
    DOUBLE          reduce using rule 85 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    BOOLEAN         reduce using rule 85 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 85 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 85 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 85 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 85 (expresion -> expresion MENOS expresion .)
    CORCHETE_CIERRA reduce using rule 85 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 85 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! POR             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 161

    (86) expresion -> expresion POR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 86 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 86 (expresion -> expresion POR expresion .)
    POR             reduce using rule 86 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 86 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 86 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 86 (expresion -> expresion POR expresion .)
    DIREFENCIACION  reduce using rule 86 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 86 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 86 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 86 (expresion -> expresion POR expresion .)
    OR              reduce using rule 86 (expresion -> expresion POR expresion .)
    AND             reduce using rule 86 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 86 (expresion -> expresion POR expresion .)
    error           reduce using rule 86 (expresion -> expresion POR expresion .)
    IDENTIFICADOR   reduce using rule 86 (expresion -> expresion POR expresion .)
    IF              reduce using rule 86 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 86 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 86 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 86 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion POR expresion .)
    MAIN            reduce using rule 86 (expresion -> expresion POR expresion .)
    FUNC            reduce using rule 86 (expresion -> expresion POR expresion .)
    VAR             reduce using rule 86 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 86 (expresion -> expresion POR expresion .)
    INT             reduce using rule 86 (expresion -> expresion POR expresion .)
    DOUBLE          reduce using rule 86 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 86 (expresion -> expresion POR expresion .)
    BOOLEAN         reduce using rule 86 (expresion -> expresion POR expresion .)
    $end            reduce using rule 86 (expresion -> expresion POR expresion .)
    LLAVE_CIERRA    reduce using rule 86 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 86 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 86 (expresion -> expresion POR expresion .)
    PARENTESIS_CIERRA reduce using rule 86 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 86 (expresion -> expresion POR expresion .)
    CORCHETE_CIERRA reduce using rule 86 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 86 (expresion -> expresion POR expresion .)
    POT             shift and go to state 109

  ! POT             [ reduce using rule 86 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 162

    (87) expresion -> expresion DIV expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 87 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 87 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 87 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 87 (expresion -> expresion DIV expresion .)
    IGUALACION      reduce using rule 87 (expresion -> expresion DIV expresion .)
    DIREFENCIACION  reduce using rule 87 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 87 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 87 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 87 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 87 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion DIV expresion .)
    error           reduce using rule 87 (expresion -> expresion DIV expresion .)
    IDENTIFICADOR   reduce using rule 87 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 87 (expresion -> expresion DIV expresion .)
    SWITCH          reduce using rule 87 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 87 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion DIV expresion .)
    MAIN            reduce using rule 87 (expresion -> expresion DIV expresion .)
    FUNC            reduce using rule 87 (expresion -> expresion DIV expresion .)
    VAR             reduce using rule 87 (expresion -> expresion DIV expresion .)
    STRING          reduce using rule 87 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 87 (expresion -> expresion DIV expresion .)
    DOUBLE          reduce using rule 87 (expresion -> expresion DIV expresion .)
    CHAR            reduce using rule 87 (expresion -> expresion DIV expresion .)
    BOOLEAN         reduce using rule 87 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 87 (expresion -> expresion DIV expresion .)
    LLAVE_CIERRA    reduce using rule 87 (expresion -> expresion DIV expresion .)
    DEFAULT         reduce using rule 87 (expresion -> expresion DIV expresion .)
    CASE            reduce using rule 87 (expresion -> expresion DIV expresion .)
    PARENTESIS_CIERRA reduce using rule 87 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 87 (expresion -> expresion DIV expresion .)
    CORCHETE_CIERRA reduce using rule 87 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 109

  ! POT             [ reduce using rule 87 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 163

    (88) expresion -> expresion POT expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 88 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion POT expresion .)
    POR             reduce using rule 88 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 88 (expresion -> expresion POT expresion .)
    POT             reduce using rule 88 (expresion -> expresion POT expresion .)
    MODULO          reduce using rule 88 (expresion -> expresion POT expresion .)
    IGUALACION      reduce using rule 88 (expresion -> expresion POT expresion .)
    DIREFENCIACION  reduce using rule 88 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 88 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 88 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion POT expresion .)
    OR              reduce using rule 88 (expresion -> expresion POT expresion .)
    AND             reduce using rule 88 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion POT expresion .)
    error           reduce using rule 88 (expresion -> expresion POT expresion .)
    IDENTIFICADOR   reduce using rule 88 (expresion -> expresion POT expresion .)
    IF              reduce using rule 88 (expresion -> expresion POT expresion .)
    SWITCH          reduce using rule 88 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 88 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 88 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion POT expresion .)
    MAIN            reduce using rule 88 (expresion -> expresion POT expresion .)
    FUNC            reduce using rule 88 (expresion -> expresion POT expresion .)
    VAR             reduce using rule 88 (expresion -> expresion POT expresion .)
    STRING          reduce using rule 88 (expresion -> expresion POT expresion .)
    INT             reduce using rule 88 (expresion -> expresion POT expresion .)
    DOUBLE          reduce using rule 88 (expresion -> expresion POT expresion .)
    CHAR            reduce using rule 88 (expresion -> expresion POT expresion .)
    BOOLEAN         reduce using rule 88 (expresion -> expresion POT expresion .)
    $end            reduce using rule 88 (expresion -> expresion POT expresion .)
    LLAVE_CIERRA    reduce using rule 88 (expresion -> expresion POT expresion .)
    DEFAULT         reduce using rule 88 (expresion -> expresion POT expresion .)
    CASE            reduce using rule 88 (expresion -> expresion POT expresion .)
    PARENTESIS_CIERRA reduce using rule 88 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 88 (expresion -> expresion POT expresion .)
    CORCHETE_CIERRA reduce using rule 88 (expresion -> expresion POT expresion .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! POT             [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 164

    (89) expresion -> expresion MODULO expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    MAS             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 89 (expresion -> expresion MODULO expresion .)
    DIREFENCIACION  reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MAYORQ          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MENORQ          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 89 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 89 (expresion -> expresion MODULO expresion .)
    IDENTIFICADOR   reduce using rule 89 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 89 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 89 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 89 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 89 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 89 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    MAIN            reduce using rule 89 (expresion -> expresion MODULO expresion .)
    FUNC            reduce using rule 89 (expresion -> expresion MODULO expresion .)
    VAR             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 89 (expresion -> expresion MODULO expresion .)
    DOUBLE          reduce using rule 89 (expresion -> expresion MODULO expresion .)
    CHAR            reduce using rule 89 (expresion -> expresion MODULO expresion .)
    BOOLEAN         reduce using rule 89 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 89 (expresion -> expresion MODULO expresion .)
    LLAVE_CIERRA    reduce using rule 89 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 89 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 89 (expresion -> expresion MODULO expresion .)
    PARENTESIS_CIERRA reduce using rule 89 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 89 (expresion -> expresion MODULO expresion .)
    CORCHETE_CIERRA reduce using rule 89 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion MODULO expresion .)
    POT             shift and go to state 109

  ! POT             [ reduce using rule 89 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIV             [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 110 ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 165

    (90) expresion -> expresion IGUALACION expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    DIREFENCIACION  reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    MAYORQ          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    MENORQ          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    IDENTIFICADOR   reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    SWITCH          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    PRINT           reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    MAIN            reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    FUNC            reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    VAR             reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    STRING          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    INT             reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    DOUBLE          reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    CHAR            reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    BOOLEAN         reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    LLAVE_CIERRA    reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    DEFAULT         reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    CASE            reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    PARENTESIS_CIERRA reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    CORCHETE_CIERRA reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 90 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> expresion IGUALACION expresion .) ]
  ! DIV             [ reduce using rule 90 (expresion -> expresion IGUALACION expresion .) ]
  ! POT             [ reduce using rule 90 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 90 (expresion -> expresion IGUALACION expresion .) ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 166

    (91) expresion -> expresion DIREFENCIACION expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    DIREFENCIACION  reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORQ          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    MENORQ          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORIGUAL      reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    MENORIGUAL      reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    OR              reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    AND             reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    error           reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    IDENTIFICADOR   reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    IF              reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    SWITCH          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    WHILE           reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    FOR             reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    PRINT           reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    BREAK           reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    CONTINUE        reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    RETURN          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    MAIN            reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    FUNC            reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    VAR             reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    STRING          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    INT             reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    DOUBLE          reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    CHAR            reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    BOOLEAN         reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    $end            reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    LLAVE_CIERRA    reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    DEFAULT         reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    CASE            reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    PARENTESIS_CIERRA reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    COMA            reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    CORCHETE_CIERRA reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! DIV             [ reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POT             [ reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MODULO          [ reduce using rule 91 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 167

    (92) expresion -> expresion MAYORQ expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    DIREFENCIACION  reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    error           reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    IDENTIFICADOR   reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    IF              reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    SWITCH          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    WHILE           reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    FOR             reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    PRINT           reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    BREAK           reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    CONTINUE        reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    RETURN          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    MAIN            reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    FUNC            reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    VAR             reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    STRING          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    INT             reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    DOUBLE          reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    CHAR            reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    BOOLEAN         reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    LLAVE_CIERRA    reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    DEFAULT         reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    CASE            reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    CORCHETE_CIERRA reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    DOSPUNTOS       reduce using rule 92 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 92 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 92 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 92 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 92 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 92 (expresion -> expresion MAYORQ expresion .) ]
  ! MODULO          [ reduce using rule 92 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 168

    (93) expresion -> expresion MENORQ expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    DIREFENCIACION  reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    error           reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    IDENTIFICADOR   reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    IF              reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    SWITCH          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    WHILE           reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    FOR             reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    PRINT           reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    BREAK           reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    CONTINUE        reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    RETURN          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    MAIN            reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    FUNC            reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    VAR             reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    STRING          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    INT             reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    DOUBLE          reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    CHAR            reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    BOOLEAN         reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    LLAVE_CIERRA    reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    DEFAULT         reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    CASE            reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    COMA            reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    CORCHETE_CIERRA reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    DOSPUNTOS       reduce using rule 93 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 93 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 93 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 93 (expresion -> expresion MENORQ expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 169

    (94) expresion -> expresion MAYORIGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    SWITCH          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MAIN            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    FUNC            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    VAR             reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    STRING          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    INT             reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    DOUBLE          reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    CHAR            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    BOOLEAN         reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    DEFAULT         reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    CASE            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    CORCHETE_CIERRA reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 170

    (95) expresion -> expresion MENORIGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    SWITCH          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MAIN            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    FUNC            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    VAR             reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    STRING          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    INT             reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    DOUBLE          reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    CHAR            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    BOOLEAN         reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    DEFAULT         reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    CASE            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    CORCHETE_CIERRA reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110

  ! MAS             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 111 ]
  ! DIREFENCIACION  [ shift and go to state 112 ]
  ! MAYORQ          [ shift and go to state 113 ]
  ! MENORQ          [ shift and go to state 114 ]
  ! MAYORIGUAL      [ shift and go to state 115 ]
  ! MENORIGUAL      [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 171

    (96) expresion -> expresion OR expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    OR              reduce using rule 96 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion OR expresion .)
    error           reduce using rule 96 (expresion -> expresion OR expresion .)
    IDENTIFICADOR   reduce using rule 96 (expresion -> expresion OR expresion .)
    IF              reduce using rule 96 (expresion -> expresion OR expresion .)
    SWITCH          reduce using rule 96 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 96 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 96 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 96 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 96 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 96 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 96 (expresion -> expresion OR expresion .)
    MAIN            reduce using rule 96 (expresion -> expresion OR expresion .)
    FUNC            reduce using rule 96 (expresion -> expresion OR expresion .)
    VAR             reduce using rule 96 (expresion -> expresion OR expresion .)
    STRING          reduce using rule 96 (expresion -> expresion OR expresion .)
    INT             reduce using rule 96 (expresion -> expresion OR expresion .)
    DOUBLE          reduce using rule 96 (expresion -> expresion OR expresion .)
    CHAR            reduce using rule 96 (expresion -> expresion OR expresion .)
    BOOLEAN         reduce using rule 96 (expresion -> expresion OR expresion .)
    $end            reduce using rule 96 (expresion -> expresion OR expresion .)
    LLAVE_CIERRA    reduce using rule 96 (expresion -> expresion OR expresion .)
    DEFAULT         reduce using rule 96 (expresion -> expresion OR expresion .)
    CASE            reduce using rule 96 (expresion -> expresion OR expresion .)
    PARENTESIS_CIERRA reduce using rule 96 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 96 (expresion -> expresion OR expresion .)
    CORCHETE_CIERRA reduce using rule 96 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 96 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 96 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 117 ]


state 172

    (97) expresion -> expresion AND expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    OR              reduce using rule 97 (expresion -> expresion AND expresion .)
    AND             reduce using rule 97 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 97 (expresion -> expresion AND expresion .)
    error           reduce using rule 97 (expresion -> expresion AND expresion .)
    IDENTIFICADOR   reduce using rule 97 (expresion -> expresion AND expresion .)
    IF              reduce using rule 97 (expresion -> expresion AND expresion .)
    SWITCH          reduce using rule 97 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 97 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 97 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 97 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 97 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 97 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 97 (expresion -> expresion AND expresion .)
    MAIN            reduce using rule 97 (expresion -> expresion AND expresion .)
    FUNC            reduce using rule 97 (expresion -> expresion AND expresion .)
    VAR             reduce using rule 97 (expresion -> expresion AND expresion .)
    STRING          reduce using rule 97 (expresion -> expresion AND expresion .)
    INT             reduce using rule 97 (expresion -> expresion AND expresion .)
    DOUBLE          reduce using rule 97 (expresion -> expresion AND expresion .)
    CHAR            reduce using rule 97 (expresion -> expresion AND expresion .)
    BOOLEAN         reduce using rule 97 (expresion -> expresion AND expresion .)
    $end            reduce using rule 97 (expresion -> expresion AND expresion .)
    LLAVE_CIERRA    reduce using rule 97 (expresion -> expresion AND expresion .)
    DEFAULT         reduce using rule 97 (expresion -> expresion AND expresion .)
    CASE            reduce using rule 97 (expresion -> expresion AND expresion .)
    PARENTESIS_CIERRA reduce using rule 97 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 97 (expresion -> expresion AND expresion .)
    CORCHETE_CIERRA reduce using rule 97 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 97 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116

  ! MAS             [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 97 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]


state 173

    (102) expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 102 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 174

    (117) expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 209
    llamada_fvoid                  shift and go to state 72

state 175

    (118) expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 210
    llamada_fvoid                  shift and go to state 72

state 176

    (119) expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 211
    llamada_fvoid                  shift and go to state 72

state 177

    (120) expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 212
    llamada_fvoid                  shift and go to state 72

state 178

    (121) expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 213
    llamada_fvoid                  shift and go to state 72

state 179

    (111) expresion -> TOUPPER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 214
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 180

    (112) expresion -> TOLOWER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 215
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 181

    (113) expresion -> TRUNCATE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 216
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 182

    (114) expresion -> ROUND PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 217
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 183

    (115) expresion -> TYPEOF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 218
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 184

    (116) expresion -> LENGHT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 219
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 185

    (123) expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .

    MAS             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    STRING          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    INT             reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CHAR            reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 123 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 186

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 220
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 187

    (70) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 221


state 188

    (71) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (72) parametros -> parametros . COMA parametro

    PARENTESIS_CIERRA shift and go to state 222
    COMA            shift and go to state 223


state 189

    (73) parametros -> parametro .

    PARENTESIS_CIERRA reduce using rule 73 (parametros -> parametro .)
    COMA            reduce using rule 73 (parametros -> parametro .)


state 190

    (74) parametro -> INT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 224


state 191

    (75) parametro -> STRING . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 225


state 192

    (76) parametro -> DOUBLE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 226


state 193

    (77) parametro -> BOOLEAN . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 227


state 194

    (78) parametro -> CHAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 228


state 195

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL . NEW tip lista_expresiones
    (61) tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL . list_expresenes2
    (62) list_expresenes2 -> . list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA
    (63) list_expresenes2 -> . LLAVE_ABRE list_expresenes2a LLAVE_CIERRA

    NEW             shift and go to state 229
    LLAVE_ABRE      shift and go to state 231

    list_expresenes2               shift and go to state 230

state 196

    (50) lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .

    IDENTIFICADOR   reduce using rule 50 (lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 50 (lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .)


state 197

    (20) variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    STRING          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    INT             reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DOUBLE          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CHAR            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BOOLEAN         reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)


state 198

    (21) variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    STRING          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    INT             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DOUBLE          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CHAR            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BOOLEAN         reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)


state 199

    (67) parametros_llamada -> parametros_llamada COMA parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 67 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)
    COMA            reduce using rule 67 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)


state 200

    (52) lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .

    IGUAL           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAS             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENOS           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POR             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIV             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POT             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MODULO          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IGUALACION      reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIREFENCIACION  reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORQ          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORQ          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORIGUAL      reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORIGUAL      reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    OR              reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    AND             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PTCOMA          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    error           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IDENTIFICADOR   reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IF              reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    SWITCH          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    WHILE           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FOR             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PRINT           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BREAK           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CONTINUE        reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    RETURN          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAIN            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FUNC            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    VAR             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    STRING          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    INT             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOUBLE          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CHAR            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BOOLEAN         reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    $end            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DEFAULT         reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CASE            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    COMA            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_CIERRA reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOSPUNTOS       reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)


state 201

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 232
    if                             shift and go to state 5
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 202

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . default LLAVE_CIERRA
    (33) listacases -> . listacases case
    (34) listacases -> . case
    (36) default -> . DEFAULT DOSPUNTOS instrucciones
    (35) case -> . CASE expresion DOSPUNTOS instrucciones

    DEFAULT         shift and go to state 236
    CASE            shift and go to state 237

    listacases                     shift and go to state 233
    default                        shift and go to state 234
    case                           shift and go to state 235

state 203

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 238
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 204

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 239
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 205

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 240
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 206

    (41) declaracionfor1 -> VAR IDENTIFICADOR IGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 241
    llamada_fvoid                  shift and go to state 72

state 207

    (42) declaracionfor2 -> IDENTIFICADOR IGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 42 (declaracionfor2 -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 208

    (79) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .

    error           reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IDENTIFICADOR   reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IF              reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    SWITCH          reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    WHILE           reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FOR             reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    PRINT           reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BREAK           reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CONTINUE        reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    RETURN          reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    MAIN            reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FUNC            reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    VAR             reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    STRING          reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    INT             reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DOUBLE          reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CHAR            reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BOOLEAN         reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    $end            reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    LLAVE_CIERRA    reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DEFAULT         reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CASE            reduce using rule 79 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)


state 209

    (117) expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    error           reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 117 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]


state 210

    (118) expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    error           reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 118 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]


state 211

    (119) expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    error           reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 119 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]


state 212

    (120) expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    error           reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]


state 213

    (121) expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    error           reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]


state 214

    (111) expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 111 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 215

    (112) expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 112 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 216

    (113) expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 113 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 217

    (114) expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 114 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 218

    (115) expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 115 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 219

    (116) expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 116 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 220

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 242
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 221

    (70) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 243
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 222

    (71) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 244


state 223

    (72) parametros -> parametros COMA . parametro
    (74) parametro -> . INT IDENTIFICADOR
    (75) parametro -> . STRING IDENTIFICADOR
    (76) parametro -> . DOUBLE IDENTIFICADOR
    (77) parametro -> . BOOLEAN IDENTIFICADOR
    (78) parametro -> . CHAR IDENTIFICADOR

    INT             shift and go to state 190
    STRING          shift and go to state 191
    DOUBLE          shift and go to state 192
    BOOLEAN         shift and go to state 193
    CHAR            shift and go to state 194

    parametro                      shift and go to state 245

state 224

    (74) parametro -> INT IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 74 (parametro -> INT IDENTIFICADOR .)
    COMA            reduce using rule 74 (parametro -> INT IDENTIFICADOR .)


state 225

    (75) parametro -> STRING IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 75 (parametro -> STRING IDENTIFICADOR .)
    COMA            reduce using rule 75 (parametro -> STRING IDENTIFICADOR .)


state 226

    (76) parametro -> DOUBLE IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 76 (parametro -> DOUBLE IDENTIFICADOR .)
    COMA            reduce using rule 76 (parametro -> DOUBLE IDENTIFICADOR .)


state 227

    (77) parametro -> BOOLEAN IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 77 (parametro -> BOOLEAN IDENTIFICADOR .)
    COMA            reduce using rule 77 (parametro -> BOOLEAN IDENTIFICADOR .)


state 228

    (78) parametro -> CHAR IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 78 (parametro -> CHAR IDENTIFICADOR .)
    COMA            reduce using rule 78 (parametro -> CHAR IDENTIFICADOR .)


state 229

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW . tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    tip                            shift and go to state 246

state 230

    (61) tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .
    (62) list_expresenes2 -> list_expresenes2 . COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA

    PTCOMA          reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    error           reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    IDENTIFICADOR   reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    IF              reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    SWITCH          reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    WHILE           reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    FOR             reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    PRINT           reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    BREAK           reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    CONTINUE        reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    RETURN          reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    MAIN            reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    FUNC            reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    VAR             reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    STRING          reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    INT             reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    DOUBLE          reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    CHAR            reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    BOOLEAN         reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    $end            reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    LLAVE_CIERRA    reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    DEFAULT         reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    CASE            reduce using rule 61 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    COMA            shift and go to state 247


state 231

    (63) list_expresenes2 -> LLAVE_ABRE . list_expresenes2a LLAVE_CIERRA
    (64) list_expresenes2a -> . list_expresenes2a COMA LLAVE_ABRE expresion LLAVE_CIERRA
    (65) list_expresenes2a -> . LLAVE_ABRE expresion LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 248

    list_expresenes2a              shift and go to state 249

state 232

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 250
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    if                             shift and go to state 5
    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 233

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . default LLAVE_CIERRA
    (33) listacases -> listacases . case
    (36) default -> . DEFAULT DOSPUNTOS instrucciones
    (35) case -> . CASE expresion DOSPUNTOS instrucciones

    LLAVE_CIERRA    shift and go to state 251
    DEFAULT         shift and go to state 236
    CASE            shift and go to state 237

    default                        shift and go to state 252
    case                           shift and go to state 253

state 234

    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 254


state 235

    (34) listacases -> case .

    LLAVE_CIERRA    reduce using rule 34 (listacases -> case .)
    DEFAULT         reduce using rule 34 (listacases -> case .)
    CASE            reduce using rule 34 (listacases -> case .)


state 236

    (36) default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 255


state 237

    (35) case -> CASE . expresion DOSPUNTOS instrucciones
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 256
    llamada_fvoid                  shift and go to state 72

state 238

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 257
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 239

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (43) actualizacion -> . IDENTIFICADOR INCREMENTO
    (44) actualizacion -> . IDENTIFICADOR DECREMENTO
    (45) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 259

    actualizacion                  shift and go to state 258

state 240

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (43) actualizacion -> . IDENTIFICADOR INCREMENTO
    (44) actualizacion -> . IDENTIFICADOR DECREMENTO
    (45) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 259

    actualizacion                  shift and go to state 260

state 241

    (41) declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 41 (declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 242

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 243

    (70) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 261
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 244

    (71) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 262
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 245

    (72) parametros -> parametros COMA parametro .

    PARENTESIS_CIERRA reduce using rule 72 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 72 (parametros -> parametros COMA parametro .)


state 246

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip . lista_expresiones
    (52) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (53) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    CORCHETE_ABRE   shift and go to state 53

    lista_expresiones              shift and go to state 263

state 247

    (62) list_expresenes2 -> list_expresenes2 COMA . LLAVE_ABRE list_expresenes2a LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 264


state 248

    (65) list_expresenes2a -> LLAVE_ABRE . expresion LLAVE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 265
    llamada_fvoid                  shift and go to state 72

state 249

    (63) list_expresenes2 -> LLAVE_ABRE list_expresenes2a . LLAVE_CIERRA
    (64) list_expresenes2a -> list_expresenes2a . COMA LLAVE_ABRE expresion LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 266
    COMA            shift and go to state 267


state 250

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE if

    error           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ELSE            shift and go to state 268


state 251

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .

    error           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IF              reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    SWITCH          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    WHILE           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FOR             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    PRINT           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BREAK           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CONTINUE        reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    RETURN          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    MAIN            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FUNC            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    VAR             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    STRING          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    INT             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DOUBLE          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CHAR            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    $end            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DEFAULT         reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CASE            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)


state 252

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 269


state 253

    (33) listacases -> listacases case .

    LLAVE_CIERRA    reduce using rule 33 (listacases -> listacases case .)
    DEFAULT         reduce using rule 33 (listacases -> listacases case .)
    CASE            reduce using rule 33 (listacases -> listacases case .)


state 254

    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .

    error           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IF              reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    SWITCH          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    WHILE           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FOR             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    PRINT           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BREAK           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    RETURN          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    MAIN            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FUNC            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    VAR             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    STRING          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    INT             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DOUBLE          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CHAR            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    $end            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CASE            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)


state 255

    (36) default -> DEFAULT DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 270
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 256

    (35) case -> CASE expresion . DOSPUNTOS instrucciones
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    DOSPUNTOS       shift and go to state 271
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 257

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 258

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 272


state 259

    (43) actualizacion -> IDENTIFICADOR . INCREMENTO
    (44) actualizacion -> IDENTIFICADOR . DECREMENTO
    (45) actualizacion -> IDENTIFICADOR . IGUAL expresion

    INCREMENTO      shift and go to state 273
    DECREMENTO      shift and go to state 274
    IGUAL           shift and go to state 275


state 260

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 276


state 261

    (70) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 70 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 262

    (71) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 277
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 263

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .
    (52) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    PTCOMA          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    error           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    IDENTIFICADOR   reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    IF              reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    SWITCH          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    WHILE           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    FOR             reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    PRINT           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    BREAK           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CONTINUE        reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    RETURN          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    MAIN            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    FUNC            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    VAR             reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    STRING          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    INT             reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    DOUBLE          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CHAR            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    BOOLEAN         reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    $end            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    LLAVE_CIERRA    reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    DEFAULT         reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CASE            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CORCHETE_ABRE   shift and go to state 95


state 264

    (62) list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE . list_expresenes2a LLAVE_CIERRA
    (64) list_expresenes2a -> . list_expresenes2a COMA LLAVE_ABRE expresion LLAVE_CIERRA
    (65) list_expresenes2a -> . LLAVE_ABRE expresion LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 248

    list_expresenes2a              shift and go to state 278

state 265

    (65) list_expresenes2a -> LLAVE_ABRE expresion . LLAVE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    LLAVE_CIERRA    shift and go to state 279
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 266

    (63) list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .

    COMA            reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    PTCOMA          reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    error           reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    IF              reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    SWITCH          reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    WHILE           reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    FOR             reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    PRINT           reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    BREAK           reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    CONTINUE        reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    RETURN          reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    MAIN            reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    FUNC            reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    VAR             reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    STRING          reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    INT             reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    DOUBLE          reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    CHAR            reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    $end            reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    DEFAULT         reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    CASE            reduce using rule 63 (list_expresenes2 -> LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)


state 267

    (64) list_expresenes2a -> list_expresenes2a COMA . LLAVE_ABRE expresion LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 280


state 268

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . if
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 281
    IF              shift and go to state 21

    if                             shift and go to state 282

state 269

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .

    error           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IF              reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    SWITCH          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    WHILE           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FOR             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    PRINT           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BREAK           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    RETURN          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    MAIN            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FUNC            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    VAR             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    STRING          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    INT             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DOUBLE          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CHAR            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    $end            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CASE            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)


state 270

    (36) default -> DEFAULT DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    reduce using rule 36 (default -> DEFAULT DOSPUNTOS instrucciones .)
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 271

    (35) case -> CASE expresion DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 283
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 272

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 284


state 273

    (43) actualizacion -> IDENTIFICADOR INCREMENTO .

    PARENTESIS_CIERRA reduce using rule 43 (actualizacion -> IDENTIFICADOR INCREMENTO .)


state 274

    (44) actualizacion -> IDENTIFICADOR DECREMENTO .

    PARENTESIS_CIERRA reduce using rule 44 (actualizacion -> IDENTIFICADOR DECREMENTO .)


state 275

    (45) actualizacion -> IDENTIFICADOR IGUAL . expresion
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 285
    llamada_fvoid                  shift and go to state 72

state 276

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 286


state 277

    (71) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 71 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 278

    (62) list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a . LLAVE_CIERRA
    (64) list_expresenes2a -> list_expresenes2a . COMA LLAVE_ABRE expresion LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 287
    COMA            shift and go to state 267


state 279

    (65) list_expresenes2a -> LLAVE_ABRE expresion LLAVE_CIERRA .

    LLAVE_CIERRA    reduce using rule 65 (list_expresenes2a -> LLAVE_ABRE expresion LLAVE_CIERRA .)
    COMA            reduce using rule 65 (list_expresenes2a -> LLAVE_ABRE expresion LLAVE_CIERRA .)


state 280

    (64) list_expresenes2a -> list_expresenes2a COMA LLAVE_ABRE . expresion LLAVE_CIERRA
    (84) expresion -> . expresion MAS expresion
    (85) expresion -> . expresion MENOS expresion
    (86) expresion -> . expresion POR expresion
    (87) expresion -> . expresion DIV expresion
    (88) expresion -> . expresion POT expresion
    (89) expresion -> . expresion MODULO expresion
    (90) expresion -> . expresion IGUALACION expresion
    (91) expresion -> . expresion DIREFENCIACION expresion
    (92) expresion -> . expresion MAYORQ expresion
    (93) expresion -> . expresion MENORQ expresion
    (94) expresion -> . expresion MAYORIGUAL expresion
    (95) expresion -> . expresion MENORIGUAL expresion
    (96) expresion -> . expresion OR expresion
    (97) expresion -> . expresion AND expresion
    (98) expresion -> . MENOS expresion
    (99) expresion -> . NOT expresion
    (100) expresion -> . IDENTIFICADOR INCREMENTO
    (101) expresion -> . IDENTIFICADOR DECREMENTO
    (102) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (103) expresion -> . ENTERO
    (104) expresion -> . DECIMAL
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE
    (107) expresion -> . IDENTIFICADOR
    (108) expresion -> . CADENA
    (109) expresion -> . CHART
    (110) expresion -> . llamada_fvoid
    (111) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (112) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (113) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (114) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (118) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (119) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (120) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (122) expresion -> . IDENTIFICADOR lista_expresiones
    (123) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 62
    NOT             shift and go to state 63
    IDENTIFICADOR   shift and go to state 64
    PARENTESIS_ABRE shift and go to state 65
    ENTERO          shift and go to state 66
    DECIMAL         shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    CADENA          shift and go to state 70
    CHART           shift and go to state 71
    TOUPPER         shift and go to state 73
    TOLOWER         shift and go to state 74
    TRUNCATE        shift and go to state 75
    ROUND           shift and go to state 76
    TYPEOF          shift and go to state 77
    LENGHT          shift and go to state 78
    READ            shift and go to state 79

    expresion                      shift and go to state 288
    llamada_fvoid                  shift and go to state 72

state 281

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 289
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 282

    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .

    error           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IDENTIFICADOR   reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IF              reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    SWITCH          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    WHILE           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FOR             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    PRINT           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BREAK           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CONTINUE        reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    RETURN          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    MAIN            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FUNC            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    VAR             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    STRING          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    INT             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DOUBLE          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CHAR            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BOOLEAN         reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    $end            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    LLAVE_CIERRA    reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DEFAULT         reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CASE            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)


state 283

    (35) case -> CASE expresion DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    reduce using rule 35 (case -> CASE expresion DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 35 (case -> CASE expresion DOSPUNTOS instrucciones .)
    CASE            reduce using rule 35 (case -> CASE expresion DOSPUNTOS instrucciones .)
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 284

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 290
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 285

    (45) actualizacion -> IDENTIFICADOR IGUAL expresion .
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 45 (actualizacion -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 286

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instrucciones                  shift and go to state 291
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 287

    (62) list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .

    COMA            reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    PTCOMA          reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    error           reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    IF              reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    SWITCH          reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    WHILE           reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    FOR             reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    PRINT           reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    BREAK           reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    CONTINUE        reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    RETURN          reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    MAIN            reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    FUNC            reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    VAR             reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    STRING          reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    INT             reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    DOUBLE          reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    CHAR            reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    $end            reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    DEFAULT         reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)
    CASE            reduce using rule 62 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE list_expresenes2a LLAVE_CIERRA .)


state 288

    (64) list_expresenes2a -> list_expresenes2a COMA LLAVE_ABRE expresion . LLAVE_CIERRA
    (84) expresion -> expresion . MAS expresion
    (85) expresion -> expresion . MENOS expresion
    (86) expresion -> expresion . POR expresion
    (87) expresion -> expresion . DIV expresion
    (88) expresion -> expresion . POT expresion
    (89) expresion -> expresion . MODULO expresion
    (90) expresion -> expresion . IGUALACION expresion
    (91) expresion -> expresion . DIREFENCIACION expresion
    (92) expresion -> expresion . MAYORQ expresion
    (93) expresion -> expresion . MENORQ expresion
    (94) expresion -> expresion . MAYORIGUAL expresion
    (95) expresion -> expresion . MENORIGUAL expresion
    (96) expresion -> expresion . OR expresion
    (97) expresion -> expresion . AND expresion

    LLAVE_CIERRA    shift and go to state 292
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIV             shift and go to state 108
    POT             shift and go to state 109
    MODULO          shift and go to state 110
    IGUALACION      shift and go to state 111
    DIREFENCIACION  shift and go to state 112
    MAYORQ          shift and go to state 113
    MENORQ          shift and go to state 114
    MAYORIGUAL      shift and go to state 115
    MENORIGUAL      shift and go to state 116
    OR              shift and go to state 117
    AND             shift and go to state 118


state 289

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 293
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 290

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 294
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 291

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (79) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (80) break -> . BREAK finInstruccion
    (81) continue -> . CONTINUE finInstruccion
    (66) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (70) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (71) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (60) declArr_instr -> . tipo2
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (61) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 295
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 33
    STRING          shift and go to state 35
    INT             shift and go to state 36
    DOUBLE          shift and go to state 37
    CHAR            shift and go to state 38
    BOOLEAN         shift and go to state 39

    instruccion                    shift and go to state 40
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tipo2                          shift and go to state 32
    tip                            shift and go to state 34

state 292

    (64) list_expresenes2a -> list_expresenes2a COMA LLAVE_ABRE expresion LLAVE_CIERRA .

    LLAVE_CIERRA    reduce using rule 64 (list_expresenes2a -> list_expresenes2a COMA LLAVE_ABRE expresion LLAVE_CIERRA .)
    COMA            reduce using rule 64 (list_expresenes2a -> list_expresenes2a COMA LLAVE_ABRE expresion LLAVE_CIERRA .)


state 293

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 294

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 295

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 209 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 209 resolved as shift
WARNING: shift/reduce conflict for POR in state 209 resolved as shift
WARNING: shift/reduce conflict for DIV in state 209 resolved as shift
WARNING: shift/reduce conflict for POT in state 209 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 209 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 209 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 209 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 209 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 209 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for OR in state 209 resolved as shift
WARNING: shift/reduce conflict for AND in state 209 resolved as shift
WARNING: shift/reduce conflict for MAS in state 210 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 210 resolved as shift
WARNING: shift/reduce conflict for POR in state 210 resolved as shift
WARNING: shift/reduce conflict for DIV in state 210 resolved as shift
WARNING: shift/reduce conflict for POT in state 210 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 210 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 210 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 210 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 210 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 210 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 210 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 210 resolved as shift
WARNING: shift/reduce conflict for OR in state 210 resolved as shift
WARNING: shift/reduce conflict for AND in state 210 resolved as shift
WARNING: shift/reduce conflict for MAS in state 211 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 211 resolved as shift
WARNING: shift/reduce conflict for POR in state 211 resolved as shift
WARNING: shift/reduce conflict for DIV in state 211 resolved as shift
WARNING: shift/reduce conflict for POT in state 211 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 211 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 211 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 211 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for OR in state 211 resolved as shift
WARNING: shift/reduce conflict for AND in state 211 resolved as shift
WARNING: shift/reduce conflict for MAS in state 212 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 212 resolved as shift
WARNING: shift/reduce conflict for POR in state 212 resolved as shift
WARNING: shift/reduce conflict for DIV in state 212 resolved as shift
WARNING: shift/reduce conflict for POT in state 212 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 212 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 212 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 212 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 212 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 212 resolved as shift
WARNING: shift/reduce conflict for OR in state 212 resolved as shift
WARNING: shift/reduce conflict for AND in state 212 resolved as shift
WARNING: shift/reduce conflict for MAS in state 213 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 213 resolved as shift
WARNING: shift/reduce conflict for POR in state 213 resolved as shift
WARNING: shift/reduce conflict for DIV in state 213 resolved as shift
WARNING: shift/reduce conflict for POT in state 213 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 213 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 213 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 213 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for OR in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
