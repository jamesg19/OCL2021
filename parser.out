Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ESPBARRAINVERTIVA
    ESPLINEA

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> variables
Rule 5     instruccion -> if
Rule 6     instruccion -> switch
Rule 7     instruccion -> while
Rule 8     instruccion -> for
Rule 9     instruccion -> print
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion -> returnn finInstruccion
Rule 13    instruccion -> main
Rule 14    instruccion -> funcion_void
Rule 15    instruccion -> llamada_fvoid finInstruccion
Rule 16    instruccion -> declArr_instr finInstruccion
Rule 17    instruccion -> modArr_instr finInstruccion
Rule 18    instruccion -> error PTCOMA
Rule 19    variables -> var IDENTIFICADOR finInstruccion
Rule 20    variables -> var IDENTIFICADOR IGUAL expresion finInstruccion
Rule 21    variables -> var IDENTIFICADOR IGUAL NULL finInstruccion
Rule 22    variables -> IDENTIFICADOR IGUAL expresion finInstruccion
Rule 23    variables -> IDENTIFICADOR IGUAL NULL finInstruccion
Rule 24    var -> VAR
Rule 25    variables -> IDENTIFICADOR INCREMENTO finInstruccion
Rule 26    variables -> IDENTIFICADOR DECREMENTO finInstruccion
Rule 27    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 28    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 29    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
Rule 30    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
Rule 31    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
Rule 32    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
Rule 33    listacases -> listacases case
Rule 34    listacases -> case
Rule 35    case -> CASE expresion DOSPUNTOS instrucciones
Rule 36    default -> DEFAULT DOSPUNTOS instrucciones
Rule 37    main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 38    while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 39    for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 40    for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 41    declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion
Rule 42    declaracionfor2 -> IDENTIFICADOR IGUAL expresion
Rule 43    actualizacion -> IDENTIFICADOR INCREMENTO
Rule 44    actualizacion -> IDENTIFICADOR DECREMENTO
Rule 45    actualizacion -> IDENTIFICADOR IGUAL expresion
Rule 46    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 47    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
Rule 48    declArr_instr -> tipo1
Rule 49    tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
Rule 50    lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA
Rule 51    lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 52    lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
Rule 53    lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA
Rule 54    tip -> STRING
Rule 55    tip -> INT
Rule 56    tip -> DOUBLE
Rule 57    tip -> CHAR
Rule 58    tip -> BOOLEAN
Rule 59    modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion
Rule 60    returnn -> RETURN expresion
Rule 61    parametros_llamada -> parametros_llamada COMA parametro_llamada
Rule 62    parametros_llamada -> parametro_llamada
Rule 63    parametro_llamada -> expresion
Rule 64    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 65    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 66    parametros -> parametros COMA parametro
Rule 67    parametros -> parametro
Rule 68    parametro -> INT IDENTIFICADOR
Rule 69    parametro -> STRING IDENTIFICADOR
Rule 70    parametro -> DOUBLE IDENTIFICADOR
Rule 71    parametro -> BOOLEAN IDENTIFICADOR
Rule 72    parametro -> CHAR IDENTIFICADOR
Rule 73    print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
Rule 74    break -> BREAK finInstruccion
Rule 75    continue -> CONTINUE finInstruccion
Rule 76    finInstruccion -> PTCOMA
Rule 77    finInstruccion -> <empty>
Rule 78    expresion -> expresion MAS expresion
Rule 79    expresion -> expresion MENOS expresion
Rule 80    expresion -> expresion POR expresion
Rule 81    expresion -> expresion DIV expresion
Rule 82    expresion -> expresion POT expresion
Rule 83    expresion -> expresion MODULO expresion
Rule 84    expresion -> expresion IGUALACION expresion
Rule 85    expresion -> expresion DIREFENCIACION expresion
Rule 86    expresion -> expresion MAYORQ expresion
Rule 87    expresion -> expresion MENORQ expresion
Rule 88    expresion -> expresion MAYORIGUAL expresion
Rule 89    expresion -> expresion MENORIGUAL expresion
Rule 90    expresion -> expresion OR expresion
Rule 91    expresion -> expresion AND expresion
Rule 92    expresion -> MENOS expresion
Rule 93    expresion -> NOT expresion
Rule 94    expresion -> IDENTIFICADOR INCREMENTO
Rule 95    expresion -> IDENTIFICADOR DECREMENTO
Rule 96    expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 97    expresion -> ENTERO
Rule 98    expresion -> DECIMAL
Rule 99    expresion -> TRUE
Rule 100   expresion -> FALSE
Rule 101   expresion -> IDENTIFICADOR
Rule 102   expresion -> CADENA
Rule 103   expresion -> CHART
Rule 104   expresion -> llamada_fvoid
Rule 105   expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 106   expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 107   expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 108   expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 109   expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 110   expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 111   expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
Rule 112   expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
Rule 113   expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
Rule 114   expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
Rule 115   expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
Rule 116   expresion -> IDENTIFICADOR lista_expresiones
Rule 117   expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA

Terminals, with rules where they appear

AND                  : 91
BOOLEAN              : 58 71 114
BREAK                : 74
CADENA               : 102
CASE                 : 35
CHAR                 : 57 72 115
CHART                : 103
COMA                 : 61 66
CONTINUE             : 75
CORCHETE_ABRE        : 50 51 52 53
CORCHETE_CIERRA      : 50 51 52 53
DECIMAL              : 98
DECREMENTO           : 26 44 95
DEFAULT              : 36
DIREFENCIACION       : 85
DIV                  : 81
DOSPUNTOS            : 35 36
DOUBLE               : 56 70 112
ELSE                 : 28 29
ENTERO               : 97
ESPBARRAINVERTIVA    : 
ESPLINEA             : 
FALSE                : 100
FOR                  : 39 40
FUNC                 : 64 65
IDENTIFICADOR        : 19 20 21 22 23 25 26 41 42 43 44 45 46 47 49 59 64 65 68 69 70 71 72 94 95 101 116
IF                   : 27 28 29
IGUAL                : 20 21 22 23 41 42 45 49 59
IGUALACION           : 84
INCREMENTO           : 25 43 94
INT                  : 55 68 111
LENGHT               : 110
LLAVE_ABRE           : 27 28 28 29 30 31 32 37 38 39 40 64 65
LLAVE_CIERRA         : 27 28 28 29 30 31 32 37 38 39 40 64 65
MAIN                 : 37
MAS                  : 78
MAYORIGUAL           : 88
MAYORQ               : 86
MENORIGUAL           : 89
MENORQ               : 87
MENOS                : 79 92
MODULO               : 83
NEW                  : 49
NOT                  : 93
NULL                 : 21 23
OR                   : 90
PARENTESIS_ABRE      : 27 28 29 30 31 32 37 38 39 40 46 47 64 65 73 96 105 106 107 108 109 110 111 112 113 114 115 117
PARENTESIS_CIERRA    : 27 28 29 30 31 32 37 38 39 40 46 47 64 65 73 96 105 106 107 108 109 110 111 112 113 114 115 117
POR                  : 80
POT                  : 82
PRINT                : 73
PTCOMA               : 18 39 39 40 40 76
READ                 : 117
RETURN               : 60
ROUND                : 108
STRING               : 54 69 113
SWITCH               : 30 31 32
TOLOWER              : 106
TOUPPER              : 105
TRUE                 : 99
TRUNCATE             : 107
TYPEOF               : 109
VAR                  : 24 41
WHILE                : 38
error                : 18

Nonterminals, with rules where they appear

actualizacion        : 39 40
break                : 10
case                 : 33 34
continue             : 11
declArr_instr        : 16
declaracionfor1      : 39
declaracionfor2      : 40
default              : 31 32
expresion            : 20 22 27 28 29 30 31 32 35 38 39 40 41 42 45 52 53 59 60 63 73 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 93 96 105 106 107 108 109 110 111 112 113 114 115
finInstruccion       : 12 15 16 17 19 20 21 22 23 25 26 73 74 75
for                  : 8
funcion_void         : 14
if                   : 5 29
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 27 28 28 29 35 36 37 38 39 40 64 65
lista_Dimension      : 49 50
lista_expresiones    : 49 52 59 116
listacases           : 30 31 33
llamada_fvoid        : 15 104
main                 : 13
modArr_instr         : 17
parametro            : 66 67
parametro_llamada    : 61 62
parametros           : 65 66
parametros_llamada   : 47 61
print                : 9
returnn              : 12
switch               : 6
tip                  : 49 49
tipo1                : 48
var                  : 19 20 21
variables            : 4
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    $end            reduce using rule 1 (init -> instrucciones .)
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 3

    (3) instrucciones -> instruccion .

    error           reduce using rule 3 (instrucciones -> instruccion .)
    IDENTIFICADOR   reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    FUNC            reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    INT             reduce using rule 3 (instrucciones -> instruccion .)
    DOUBLE          reduce using rule 3 (instrucciones -> instruccion .)
    CHAR            reduce using rule 3 (instrucciones -> instruccion .)
    BOOLEAN         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVE_CIERRA    reduce using rule 3 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 3 (instrucciones -> instruccion .)
    CASE            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> variables .

    error           reduce using rule 4 (instruccion -> variables .)
    IDENTIFICADOR   reduce using rule 4 (instruccion -> variables .)
    IF              reduce using rule 4 (instruccion -> variables .)
    SWITCH          reduce using rule 4 (instruccion -> variables .)
    WHILE           reduce using rule 4 (instruccion -> variables .)
    FOR             reduce using rule 4 (instruccion -> variables .)
    PRINT           reduce using rule 4 (instruccion -> variables .)
    BREAK           reduce using rule 4 (instruccion -> variables .)
    CONTINUE        reduce using rule 4 (instruccion -> variables .)
    RETURN          reduce using rule 4 (instruccion -> variables .)
    MAIN            reduce using rule 4 (instruccion -> variables .)
    FUNC            reduce using rule 4 (instruccion -> variables .)
    VAR             reduce using rule 4 (instruccion -> variables .)
    STRING          reduce using rule 4 (instruccion -> variables .)
    INT             reduce using rule 4 (instruccion -> variables .)
    DOUBLE          reduce using rule 4 (instruccion -> variables .)
    CHAR            reduce using rule 4 (instruccion -> variables .)
    BOOLEAN         reduce using rule 4 (instruccion -> variables .)
    $end            reduce using rule 4 (instruccion -> variables .)
    LLAVE_CIERRA    reduce using rule 4 (instruccion -> variables .)
    DEFAULT         reduce using rule 4 (instruccion -> variables .)
    CASE            reduce using rule 4 (instruccion -> variables .)


state 5

    (5) instruccion -> if .

    error           reduce using rule 5 (instruccion -> if .)
    IDENTIFICADOR   reduce using rule 5 (instruccion -> if .)
    IF              reduce using rule 5 (instruccion -> if .)
    SWITCH          reduce using rule 5 (instruccion -> if .)
    WHILE           reduce using rule 5 (instruccion -> if .)
    FOR             reduce using rule 5 (instruccion -> if .)
    PRINT           reduce using rule 5 (instruccion -> if .)
    BREAK           reduce using rule 5 (instruccion -> if .)
    CONTINUE        reduce using rule 5 (instruccion -> if .)
    RETURN          reduce using rule 5 (instruccion -> if .)
    MAIN            reduce using rule 5 (instruccion -> if .)
    FUNC            reduce using rule 5 (instruccion -> if .)
    VAR             reduce using rule 5 (instruccion -> if .)
    STRING          reduce using rule 5 (instruccion -> if .)
    INT             reduce using rule 5 (instruccion -> if .)
    DOUBLE          reduce using rule 5 (instruccion -> if .)
    CHAR            reduce using rule 5 (instruccion -> if .)
    BOOLEAN         reduce using rule 5 (instruccion -> if .)
    $end            reduce using rule 5 (instruccion -> if .)
    LLAVE_CIERRA    reduce using rule 5 (instruccion -> if .)
    DEFAULT         reduce using rule 5 (instruccion -> if .)
    CASE            reduce using rule 5 (instruccion -> if .)


state 6

    (6) instruccion -> switch .

    error           reduce using rule 6 (instruccion -> switch .)
    IDENTIFICADOR   reduce using rule 6 (instruccion -> switch .)
    IF              reduce using rule 6 (instruccion -> switch .)
    SWITCH          reduce using rule 6 (instruccion -> switch .)
    WHILE           reduce using rule 6 (instruccion -> switch .)
    FOR             reduce using rule 6 (instruccion -> switch .)
    PRINT           reduce using rule 6 (instruccion -> switch .)
    BREAK           reduce using rule 6 (instruccion -> switch .)
    CONTINUE        reduce using rule 6 (instruccion -> switch .)
    RETURN          reduce using rule 6 (instruccion -> switch .)
    MAIN            reduce using rule 6 (instruccion -> switch .)
    FUNC            reduce using rule 6 (instruccion -> switch .)
    VAR             reduce using rule 6 (instruccion -> switch .)
    STRING          reduce using rule 6 (instruccion -> switch .)
    INT             reduce using rule 6 (instruccion -> switch .)
    DOUBLE          reduce using rule 6 (instruccion -> switch .)
    CHAR            reduce using rule 6 (instruccion -> switch .)
    BOOLEAN         reduce using rule 6 (instruccion -> switch .)
    $end            reduce using rule 6 (instruccion -> switch .)
    LLAVE_CIERRA    reduce using rule 6 (instruccion -> switch .)
    DEFAULT         reduce using rule 6 (instruccion -> switch .)
    CASE            reduce using rule 6 (instruccion -> switch .)


state 7

    (7) instruccion -> while .

    error           reduce using rule 7 (instruccion -> while .)
    IDENTIFICADOR   reduce using rule 7 (instruccion -> while .)
    IF              reduce using rule 7 (instruccion -> while .)
    SWITCH          reduce using rule 7 (instruccion -> while .)
    WHILE           reduce using rule 7 (instruccion -> while .)
    FOR             reduce using rule 7 (instruccion -> while .)
    PRINT           reduce using rule 7 (instruccion -> while .)
    BREAK           reduce using rule 7 (instruccion -> while .)
    CONTINUE        reduce using rule 7 (instruccion -> while .)
    RETURN          reduce using rule 7 (instruccion -> while .)
    MAIN            reduce using rule 7 (instruccion -> while .)
    FUNC            reduce using rule 7 (instruccion -> while .)
    VAR             reduce using rule 7 (instruccion -> while .)
    STRING          reduce using rule 7 (instruccion -> while .)
    INT             reduce using rule 7 (instruccion -> while .)
    DOUBLE          reduce using rule 7 (instruccion -> while .)
    CHAR            reduce using rule 7 (instruccion -> while .)
    BOOLEAN         reduce using rule 7 (instruccion -> while .)
    $end            reduce using rule 7 (instruccion -> while .)
    LLAVE_CIERRA    reduce using rule 7 (instruccion -> while .)
    DEFAULT         reduce using rule 7 (instruccion -> while .)
    CASE            reduce using rule 7 (instruccion -> while .)


state 8

    (8) instruccion -> for .

    error           reduce using rule 8 (instruccion -> for .)
    IDENTIFICADOR   reduce using rule 8 (instruccion -> for .)
    IF              reduce using rule 8 (instruccion -> for .)
    SWITCH          reduce using rule 8 (instruccion -> for .)
    WHILE           reduce using rule 8 (instruccion -> for .)
    FOR             reduce using rule 8 (instruccion -> for .)
    PRINT           reduce using rule 8 (instruccion -> for .)
    BREAK           reduce using rule 8 (instruccion -> for .)
    CONTINUE        reduce using rule 8 (instruccion -> for .)
    RETURN          reduce using rule 8 (instruccion -> for .)
    MAIN            reduce using rule 8 (instruccion -> for .)
    FUNC            reduce using rule 8 (instruccion -> for .)
    VAR             reduce using rule 8 (instruccion -> for .)
    STRING          reduce using rule 8 (instruccion -> for .)
    INT             reduce using rule 8 (instruccion -> for .)
    DOUBLE          reduce using rule 8 (instruccion -> for .)
    CHAR            reduce using rule 8 (instruccion -> for .)
    BOOLEAN         reduce using rule 8 (instruccion -> for .)
    $end            reduce using rule 8 (instruccion -> for .)
    LLAVE_CIERRA    reduce using rule 8 (instruccion -> for .)
    DEFAULT         reduce using rule 8 (instruccion -> for .)
    CASE            reduce using rule 8 (instruccion -> for .)


state 9

    (9) instruccion -> print .

    error           reduce using rule 9 (instruccion -> print .)
    IDENTIFICADOR   reduce using rule 9 (instruccion -> print .)
    IF              reduce using rule 9 (instruccion -> print .)
    SWITCH          reduce using rule 9 (instruccion -> print .)
    WHILE           reduce using rule 9 (instruccion -> print .)
    FOR             reduce using rule 9 (instruccion -> print .)
    PRINT           reduce using rule 9 (instruccion -> print .)
    BREAK           reduce using rule 9 (instruccion -> print .)
    CONTINUE        reduce using rule 9 (instruccion -> print .)
    RETURN          reduce using rule 9 (instruccion -> print .)
    MAIN            reduce using rule 9 (instruccion -> print .)
    FUNC            reduce using rule 9 (instruccion -> print .)
    VAR             reduce using rule 9 (instruccion -> print .)
    STRING          reduce using rule 9 (instruccion -> print .)
    INT             reduce using rule 9 (instruccion -> print .)
    DOUBLE          reduce using rule 9 (instruccion -> print .)
    CHAR            reduce using rule 9 (instruccion -> print .)
    BOOLEAN         reduce using rule 9 (instruccion -> print .)
    $end            reduce using rule 9 (instruccion -> print .)
    LLAVE_CIERRA    reduce using rule 9 (instruccion -> print .)
    DEFAULT         reduce using rule 9 (instruccion -> print .)
    CASE            reduce using rule 9 (instruccion -> print .)


state 10

    (10) instruccion -> break .

    error           reduce using rule 10 (instruccion -> break .)
    IDENTIFICADOR   reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    SWITCH          reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    FOR             reduce using rule 10 (instruccion -> break .)
    PRINT           reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    RETURN          reduce using rule 10 (instruccion -> break .)
    MAIN            reduce using rule 10 (instruccion -> break .)
    FUNC            reduce using rule 10 (instruccion -> break .)
    VAR             reduce using rule 10 (instruccion -> break .)
    STRING          reduce using rule 10 (instruccion -> break .)
    INT             reduce using rule 10 (instruccion -> break .)
    DOUBLE          reduce using rule 10 (instruccion -> break .)
    CHAR            reduce using rule 10 (instruccion -> break .)
    BOOLEAN         reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLAVE_CIERRA    reduce using rule 10 (instruccion -> break .)
    DEFAULT         reduce using rule 10 (instruccion -> break .)
    CASE            reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    error           reduce using rule 11 (instruccion -> continue .)
    IDENTIFICADOR   reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    SWITCH          reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    FOR             reduce using rule 11 (instruccion -> continue .)
    PRINT           reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    RETURN          reduce using rule 11 (instruccion -> continue .)
    MAIN            reduce using rule 11 (instruccion -> continue .)
    FUNC            reduce using rule 11 (instruccion -> continue .)
    VAR             reduce using rule 11 (instruccion -> continue .)
    STRING          reduce using rule 11 (instruccion -> continue .)
    INT             reduce using rule 11 (instruccion -> continue .)
    DOUBLE          reduce using rule 11 (instruccion -> continue .)
    CHAR            reduce using rule 11 (instruccion -> continue .)
    BOOLEAN         reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLAVE_CIERRA    reduce using rule 11 (instruccion -> continue .)
    DEFAULT         reduce using rule 11 (instruccion -> continue .)
    CASE            reduce using rule 11 (instruccion -> continue .)


state 12

    (12) instruccion -> returnn . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 40

state 13

    (13) instruccion -> main .

    error           reduce using rule 13 (instruccion -> main .)
    IDENTIFICADOR   reduce using rule 13 (instruccion -> main .)
    IF              reduce using rule 13 (instruccion -> main .)
    SWITCH          reduce using rule 13 (instruccion -> main .)
    WHILE           reduce using rule 13 (instruccion -> main .)
    FOR             reduce using rule 13 (instruccion -> main .)
    PRINT           reduce using rule 13 (instruccion -> main .)
    BREAK           reduce using rule 13 (instruccion -> main .)
    CONTINUE        reduce using rule 13 (instruccion -> main .)
    RETURN          reduce using rule 13 (instruccion -> main .)
    MAIN            reduce using rule 13 (instruccion -> main .)
    FUNC            reduce using rule 13 (instruccion -> main .)
    VAR             reduce using rule 13 (instruccion -> main .)
    STRING          reduce using rule 13 (instruccion -> main .)
    INT             reduce using rule 13 (instruccion -> main .)
    DOUBLE          reduce using rule 13 (instruccion -> main .)
    CHAR            reduce using rule 13 (instruccion -> main .)
    BOOLEAN         reduce using rule 13 (instruccion -> main .)
    $end            reduce using rule 13 (instruccion -> main .)
    LLAVE_CIERRA    reduce using rule 13 (instruccion -> main .)
    DEFAULT         reduce using rule 13 (instruccion -> main .)
    CASE            reduce using rule 13 (instruccion -> main .)


state 14

    (14) instruccion -> funcion_void .

    error           reduce using rule 14 (instruccion -> funcion_void .)
    IDENTIFICADOR   reduce using rule 14 (instruccion -> funcion_void .)
    IF              reduce using rule 14 (instruccion -> funcion_void .)
    SWITCH          reduce using rule 14 (instruccion -> funcion_void .)
    WHILE           reduce using rule 14 (instruccion -> funcion_void .)
    FOR             reduce using rule 14 (instruccion -> funcion_void .)
    PRINT           reduce using rule 14 (instruccion -> funcion_void .)
    BREAK           reduce using rule 14 (instruccion -> funcion_void .)
    CONTINUE        reduce using rule 14 (instruccion -> funcion_void .)
    RETURN          reduce using rule 14 (instruccion -> funcion_void .)
    MAIN            reduce using rule 14 (instruccion -> funcion_void .)
    FUNC            reduce using rule 14 (instruccion -> funcion_void .)
    VAR             reduce using rule 14 (instruccion -> funcion_void .)
    STRING          reduce using rule 14 (instruccion -> funcion_void .)
    INT             reduce using rule 14 (instruccion -> funcion_void .)
    DOUBLE          reduce using rule 14 (instruccion -> funcion_void .)
    CHAR            reduce using rule 14 (instruccion -> funcion_void .)
    BOOLEAN         reduce using rule 14 (instruccion -> funcion_void .)
    $end            reduce using rule 14 (instruccion -> funcion_void .)
    LLAVE_CIERRA    reduce using rule 14 (instruccion -> funcion_void .)
    DEFAULT         reduce using rule 14 (instruccion -> funcion_void .)
    CASE            reduce using rule 14 (instruccion -> funcion_void .)


state 15

    (15) instruccion -> llamada_fvoid . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 42

state 16

    (16) instruccion -> declArr_instr . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 43

state 17

    (17) instruccion -> modArr_instr . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 44

state 18

    (18) instruccion -> error . PTCOMA

    PTCOMA          shift and go to state 45


state 19

    (19) variables -> var . IDENTIFICADOR finInstruccion
    (20) variables -> var . IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> var . IDENTIFICADOR IGUAL NULL finInstruccion

    IDENTIFICADOR   shift and go to state 46


state 20

    (22) variables -> IDENTIFICADOR . IGUAL expresion finInstruccion
    (23) variables -> IDENTIFICADOR . IGUAL NULL finInstruccion
    (25) variables -> IDENTIFICADOR . INCREMENTO finInstruccion
    (26) variables -> IDENTIFICADOR . DECREMENTO finInstruccion
    (46) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (59) modArr_instr -> IDENTIFICADOR . lista_expresiones IGUAL expresion
    (52) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (53) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    IGUAL           shift and go to state 47
    INCREMENTO      shift and go to state 48
    DECREMENTO      shift and go to state 49
    PARENTESIS_ABRE shift and go to state 50
    CORCHETE_ABRE   shift and go to state 52

    lista_expresiones              shift and go to state 51

state 21

    (27) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    PARENTESIS_ABRE shift and go to state 53


state 22

    (30) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 54


state 23

    (38) while -> WHILE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 55


state 24

    (39) for -> FOR . PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> FOR . PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 56


state 25

    (73) print -> PRINT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion

    PARENTESIS_ABRE shift and go to state 57


state 26

    (74) break -> BREAK . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 58

state 27

    (75) continue -> CONTINUE . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 59

state 28

    (60) returnn -> RETURN . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 60
    llamada_fvoid                  shift and go to state 71

state 29

    (37) main -> MAIN . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 79


state 30

    (64) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 80


state 31

    (48) declArr_instr -> tipo1 .

    PTCOMA          reduce using rule 48 (declArr_instr -> tipo1 .)
    error           reduce using rule 48 (declArr_instr -> tipo1 .)
    IDENTIFICADOR   reduce using rule 48 (declArr_instr -> tipo1 .)
    IF              reduce using rule 48 (declArr_instr -> tipo1 .)
    SWITCH          reduce using rule 48 (declArr_instr -> tipo1 .)
    WHILE           reduce using rule 48 (declArr_instr -> tipo1 .)
    FOR             reduce using rule 48 (declArr_instr -> tipo1 .)
    PRINT           reduce using rule 48 (declArr_instr -> tipo1 .)
    BREAK           reduce using rule 48 (declArr_instr -> tipo1 .)
    CONTINUE        reduce using rule 48 (declArr_instr -> tipo1 .)
    RETURN          reduce using rule 48 (declArr_instr -> tipo1 .)
    MAIN            reduce using rule 48 (declArr_instr -> tipo1 .)
    FUNC            reduce using rule 48 (declArr_instr -> tipo1 .)
    VAR             reduce using rule 48 (declArr_instr -> tipo1 .)
    STRING          reduce using rule 48 (declArr_instr -> tipo1 .)
    INT             reduce using rule 48 (declArr_instr -> tipo1 .)
    DOUBLE          reduce using rule 48 (declArr_instr -> tipo1 .)
    CHAR            reduce using rule 48 (declArr_instr -> tipo1 .)
    BOOLEAN         reduce using rule 48 (declArr_instr -> tipo1 .)
    $end            reduce using rule 48 (declArr_instr -> tipo1 .)
    LLAVE_CIERRA    reduce using rule 48 (declArr_instr -> tipo1 .)
    DEFAULT         reduce using rule 48 (declArr_instr -> tipo1 .)
    CASE            reduce using rule 48 (declArr_instr -> tipo1 .)


state 32

    (24) var -> VAR .

    IDENTIFICADOR   reduce using rule 24 (var -> VAR .)


state 33

    (49) tipo1 -> tip . lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (50) lista_Dimension -> . lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA
    (51) lista_Dimension -> . CORCHETE_ABRE CORCHETE_CIERRA

    CORCHETE_ABRE   shift and go to state 82

    lista_Dimension                shift and go to state 81

state 34

    (54) tip -> STRING .

    CORCHETE_ABRE   reduce using rule 54 (tip -> STRING .)


state 35

    (55) tip -> INT .

    CORCHETE_ABRE   reduce using rule 55 (tip -> INT .)


state 36

    (56) tip -> DOUBLE .

    CORCHETE_ABRE   reduce using rule 56 (tip -> DOUBLE .)


state 37

    (57) tip -> CHAR .

    CORCHETE_ABRE   reduce using rule 57 (tip -> CHAR .)


state 38

    (58) tip -> BOOLEAN .

    CORCHETE_ABRE   reduce using rule 58 (tip -> BOOLEAN .)


state 39

    (2) instrucciones -> instrucciones instruccion .

    error           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNC            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DOUBLE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BOOLEAN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVE_CIERRA    reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 40

    (12) instruccion -> returnn finInstruccion .

    error           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IDENTIFICADOR   reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IF              reduce using rule 12 (instruccion -> returnn finInstruccion .)
    SWITCH          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    WHILE           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FOR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    PRINT           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BREAK           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CONTINUE        reduce using rule 12 (instruccion -> returnn finInstruccion .)
    RETURN          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    MAIN            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FUNC            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    VAR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    STRING          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    INT             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DOUBLE          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CHAR            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BOOLEAN         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    $end            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    LLAVE_CIERRA    reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DEFAULT         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CASE            reduce using rule 12 (instruccion -> returnn finInstruccion .)


state 41

    (76) finInstruccion -> PTCOMA .

    error           reduce using rule 76 (finInstruccion -> PTCOMA .)
    IDENTIFICADOR   reduce using rule 76 (finInstruccion -> PTCOMA .)
    IF              reduce using rule 76 (finInstruccion -> PTCOMA .)
    SWITCH          reduce using rule 76 (finInstruccion -> PTCOMA .)
    WHILE           reduce using rule 76 (finInstruccion -> PTCOMA .)
    FOR             reduce using rule 76 (finInstruccion -> PTCOMA .)
    PRINT           reduce using rule 76 (finInstruccion -> PTCOMA .)
    BREAK           reduce using rule 76 (finInstruccion -> PTCOMA .)
    CONTINUE        reduce using rule 76 (finInstruccion -> PTCOMA .)
    RETURN          reduce using rule 76 (finInstruccion -> PTCOMA .)
    MAIN            reduce using rule 76 (finInstruccion -> PTCOMA .)
    FUNC            reduce using rule 76 (finInstruccion -> PTCOMA .)
    VAR             reduce using rule 76 (finInstruccion -> PTCOMA .)
    STRING          reduce using rule 76 (finInstruccion -> PTCOMA .)
    INT             reduce using rule 76 (finInstruccion -> PTCOMA .)
    DOUBLE          reduce using rule 76 (finInstruccion -> PTCOMA .)
    CHAR            reduce using rule 76 (finInstruccion -> PTCOMA .)
    BOOLEAN         reduce using rule 76 (finInstruccion -> PTCOMA .)
    $end            reduce using rule 76 (finInstruccion -> PTCOMA .)
    LLAVE_CIERRA    reduce using rule 76 (finInstruccion -> PTCOMA .)
    DEFAULT         reduce using rule 76 (finInstruccion -> PTCOMA .)
    CASE            reduce using rule 76 (finInstruccion -> PTCOMA .)


state 42

    (15) instruccion -> llamada_fvoid finInstruccion .

    error           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IDENTIFICADOR   reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IF              reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    SWITCH          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    WHILE           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FOR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    PRINT           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BREAK           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CONTINUE        reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    RETURN          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    MAIN            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FUNC            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    VAR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    STRING          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    INT             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DOUBLE          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CHAR            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BOOLEAN         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    $end            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    LLAVE_CIERRA    reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DEFAULT         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CASE            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)


state 43

    (16) instruccion -> declArr_instr finInstruccion .

    error           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    IDENTIFICADOR   reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    IF              reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    SWITCH          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    WHILE           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    FOR             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    PRINT           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    BREAK           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CONTINUE        reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    RETURN          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    MAIN            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    FUNC            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    VAR             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    STRING          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    INT             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    DOUBLE          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CHAR            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    BOOLEAN         reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    $end            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    LLAVE_CIERRA    reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    DEFAULT         reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CASE            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)


state 44

    (17) instruccion -> modArr_instr finInstruccion .

    error           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    IDENTIFICADOR   reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    IF              reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    SWITCH          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    WHILE           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    FOR             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    PRINT           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    BREAK           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CONTINUE        reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    RETURN          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    MAIN            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    FUNC            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    VAR             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    STRING          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    INT             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    DOUBLE          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CHAR            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    BOOLEAN         reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    $end            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    LLAVE_CIERRA    reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    DEFAULT         reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CASE            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)


state 45

    (18) instruccion -> error PTCOMA .

    error           reduce using rule 18 (instruccion -> error PTCOMA .)
    IDENTIFICADOR   reduce using rule 18 (instruccion -> error PTCOMA .)
    IF              reduce using rule 18 (instruccion -> error PTCOMA .)
    SWITCH          reduce using rule 18 (instruccion -> error PTCOMA .)
    WHILE           reduce using rule 18 (instruccion -> error PTCOMA .)
    FOR             reduce using rule 18 (instruccion -> error PTCOMA .)
    PRINT           reduce using rule 18 (instruccion -> error PTCOMA .)
    BREAK           reduce using rule 18 (instruccion -> error PTCOMA .)
    CONTINUE        reduce using rule 18 (instruccion -> error PTCOMA .)
    RETURN          reduce using rule 18 (instruccion -> error PTCOMA .)
    MAIN            reduce using rule 18 (instruccion -> error PTCOMA .)
    FUNC            reduce using rule 18 (instruccion -> error PTCOMA .)
    VAR             reduce using rule 18 (instruccion -> error PTCOMA .)
    STRING          reduce using rule 18 (instruccion -> error PTCOMA .)
    INT             reduce using rule 18 (instruccion -> error PTCOMA .)
    DOUBLE          reduce using rule 18 (instruccion -> error PTCOMA .)
    CHAR            reduce using rule 18 (instruccion -> error PTCOMA .)
    BOOLEAN         reduce using rule 18 (instruccion -> error PTCOMA .)
    $end            reduce using rule 18 (instruccion -> error PTCOMA .)
    LLAVE_CIERRA    reduce using rule 18 (instruccion -> error PTCOMA .)
    DEFAULT         reduce using rule 18 (instruccion -> error PTCOMA .)
    CASE            reduce using rule 18 (instruccion -> error PTCOMA .)


state 46

    (19) variables -> var IDENTIFICADOR . finInstruccion
    (20) variables -> var IDENTIFICADOR . IGUAL expresion finInstruccion
    (21) variables -> var IDENTIFICADOR . IGUAL NULL finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    IGUAL           shift and go to state 84
    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 83

state 47

    (22) variables -> IDENTIFICADOR IGUAL . expresion finInstruccion
    (23) variables -> IDENTIFICADOR IGUAL . NULL finInstruccion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 86
    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 85
    llamada_fvoid                  shift and go to state 71

state 48

    (25) variables -> IDENTIFICADOR INCREMENTO . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 87

state 49

    (26) variables -> IDENTIFICADOR DECREMENTO . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 88

state 50

    (46) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA
    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . parametros_llamada PARENTESIS_CIERRA
    (61) parametros_llamada -> . parametros_llamada COMA parametro_llamada
    (62) parametros_llamada -> . parametro_llamada
    (63) parametro_llamada -> . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 89
    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    parametros_llamada             shift and go to state 90
    parametro_llamada              shift and go to state 91
    expresion                      shift and go to state 92
    llamada_fvoid                  shift and go to state 71

state 51

    (59) modArr_instr -> IDENTIFICADOR lista_expresiones . IGUAL expresion
    (52) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    IGUAL           shift and go to state 93
    CORCHETE_ABRE   shift and go to state 94


state 52

    (53) lista_expresiones -> CORCHETE_ABRE . expresion CORCHETE_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 95
    llamada_fvoid                  shift and go to state 71

state 53

    (27) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 96
    llamada_fvoid                  shift and go to state 71

state 54

    (30) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 97
    llamada_fvoid                  shift and go to state 71

state 55

    (38) while -> WHILE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 98
    llamada_fvoid                  shift and go to state 71

state 56

    (39) for -> FOR PARENTESIS_ABRE . declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> FOR PARENTESIS_ABRE . declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) declaracionfor1 -> . VAR IDENTIFICADOR IGUAL expresion
    (42) declaracionfor2 -> . IDENTIFICADOR IGUAL expresion

    VAR             shift and go to state 101
    IDENTIFICADOR   shift and go to state 102

    declaracionfor1                shift and go to state 99
    declaracionfor2                shift and go to state 100

state 57

    (73) print -> PRINT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA finInstruccion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 103
    llamada_fvoid                  shift and go to state 71

state 58

    (74) break -> BREAK finInstruccion .

    error           reduce using rule 74 (break -> BREAK finInstruccion .)
    IDENTIFICADOR   reduce using rule 74 (break -> BREAK finInstruccion .)
    IF              reduce using rule 74 (break -> BREAK finInstruccion .)
    SWITCH          reduce using rule 74 (break -> BREAK finInstruccion .)
    WHILE           reduce using rule 74 (break -> BREAK finInstruccion .)
    FOR             reduce using rule 74 (break -> BREAK finInstruccion .)
    PRINT           reduce using rule 74 (break -> BREAK finInstruccion .)
    BREAK           reduce using rule 74 (break -> BREAK finInstruccion .)
    CONTINUE        reduce using rule 74 (break -> BREAK finInstruccion .)
    RETURN          reduce using rule 74 (break -> BREAK finInstruccion .)
    MAIN            reduce using rule 74 (break -> BREAK finInstruccion .)
    FUNC            reduce using rule 74 (break -> BREAK finInstruccion .)
    VAR             reduce using rule 74 (break -> BREAK finInstruccion .)
    STRING          reduce using rule 74 (break -> BREAK finInstruccion .)
    INT             reduce using rule 74 (break -> BREAK finInstruccion .)
    DOUBLE          reduce using rule 74 (break -> BREAK finInstruccion .)
    CHAR            reduce using rule 74 (break -> BREAK finInstruccion .)
    BOOLEAN         reduce using rule 74 (break -> BREAK finInstruccion .)
    $end            reduce using rule 74 (break -> BREAK finInstruccion .)
    LLAVE_CIERRA    reduce using rule 74 (break -> BREAK finInstruccion .)
    DEFAULT         reduce using rule 74 (break -> BREAK finInstruccion .)
    CASE            reduce using rule 74 (break -> BREAK finInstruccion .)


state 59

    (75) continue -> CONTINUE finInstruccion .

    error           reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    IDENTIFICADOR   reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    IF              reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    SWITCH          reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    WHILE           reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    FOR             reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    PRINT           reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    BREAK           reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    CONTINUE        reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    RETURN          reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    MAIN            reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    FUNC            reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    VAR             reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    STRING          reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    INT             reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    DOUBLE          reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    CHAR            reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    BOOLEAN         reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    $end            reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    LLAVE_CIERRA    reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    DEFAULT         reduce using rule 75 (continue -> CONTINUE finInstruccion .)
    CASE            reduce using rule 75 (continue -> CONTINUE finInstruccion .)


state 60

    (60) returnn -> RETURN expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 60 (returnn -> RETURN expresion .)
    error           reduce using rule 60 (returnn -> RETURN expresion .)
    IDENTIFICADOR   reduce using rule 60 (returnn -> RETURN expresion .)
    IF              reduce using rule 60 (returnn -> RETURN expresion .)
    SWITCH          reduce using rule 60 (returnn -> RETURN expresion .)
    WHILE           reduce using rule 60 (returnn -> RETURN expresion .)
    FOR             reduce using rule 60 (returnn -> RETURN expresion .)
    PRINT           reduce using rule 60 (returnn -> RETURN expresion .)
    BREAK           reduce using rule 60 (returnn -> RETURN expresion .)
    CONTINUE        reduce using rule 60 (returnn -> RETURN expresion .)
    RETURN          reduce using rule 60 (returnn -> RETURN expresion .)
    MAIN            reduce using rule 60 (returnn -> RETURN expresion .)
    FUNC            reduce using rule 60 (returnn -> RETURN expresion .)
    VAR             reduce using rule 60 (returnn -> RETURN expresion .)
    STRING          reduce using rule 60 (returnn -> RETURN expresion .)
    INT             reduce using rule 60 (returnn -> RETURN expresion .)
    DOUBLE          reduce using rule 60 (returnn -> RETURN expresion .)
    CHAR            reduce using rule 60 (returnn -> RETURN expresion .)
    BOOLEAN         reduce using rule 60 (returnn -> RETURN expresion .)
    $end            reduce using rule 60 (returnn -> RETURN expresion .)
    LLAVE_CIERRA    reduce using rule 60 (returnn -> RETURN expresion .)
    DEFAULT         reduce using rule 60 (returnn -> RETURN expresion .)
    CASE            reduce using rule 60 (returnn -> RETURN expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 61

    (92) expresion -> MENOS . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 118
    llamada_fvoid                  shift and go to state 71

state 62

    (93) expresion -> NOT . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 119
    llamada_fvoid                  shift and go to state 71

state 63

    (94) expresion -> IDENTIFICADOR . INCREMENTO
    (95) expresion -> IDENTIFICADOR . DECREMENTO
    (101) expresion -> IDENTIFICADOR .
    (116) expresion -> IDENTIFICADOR . lista_expresiones
    (46) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (52) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (53) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    INCREMENTO      shift and go to state 120
    DECREMENTO      shift and go to state 121
    MAS             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 101 (expresion -> IDENTIFICADOR .)
    POR             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    POT             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MODULO          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    IGUALACION      reduce using rule 101 (expresion -> IDENTIFICADOR .)
    DIREFENCIACION  reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MAYORQ          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MENORQ          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MAYORIGUAL      reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MENORIGUAL      reduce using rule 101 (expresion -> IDENTIFICADOR .)
    OR              reduce using rule 101 (expresion -> IDENTIFICADOR .)
    AND             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    PTCOMA          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    error           reduce using rule 101 (expresion -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 101 (expresion -> IDENTIFICADOR .)
    IF              reduce using rule 101 (expresion -> IDENTIFICADOR .)
    SWITCH          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    WHILE           reduce using rule 101 (expresion -> IDENTIFICADOR .)
    FOR             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    PRINT           reduce using rule 101 (expresion -> IDENTIFICADOR .)
    BREAK           reduce using rule 101 (expresion -> IDENTIFICADOR .)
    CONTINUE        reduce using rule 101 (expresion -> IDENTIFICADOR .)
    RETURN          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    MAIN            reduce using rule 101 (expresion -> IDENTIFICADOR .)
    FUNC            reduce using rule 101 (expresion -> IDENTIFICADOR .)
    VAR             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    STRING          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    INT             reduce using rule 101 (expresion -> IDENTIFICADOR .)
    DOUBLE          reduce using rule 101 (expresion -> IDENTIFICADOR .)
    CHAR            reduce using rule 101 (expresion -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 101 (expresion -> IDENTIFICADOR .)
    $end            reduce using rule 101 (expresion -> IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 101 (expresion -> IDENTIFICADOR .)
    DEFAULT         reduce using rule 101 (expresion -> IDENTIFICADOR .)
    CASE            reduce using rule 101 (expresion -> IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 101 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 101 (expresion -> IDENTIFICADOR .)
    CORCHETE_CIERRA reduce using rule 101 (expresion -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 101 (expresion -> IDENTIFICADOR .)
    PARENTESIS_ABRE shift and go to state 50
    CORCHETE_ABRE   shift and go to state 52

    lista_expresiones              shift and go to state 122

state 64

    (96) expresion -> PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (111) expresion -> PARENTESIS_ABRE . INT PARENTESIS_CIERRA expresion
    (112) expresion -> PARENTESIS_ABRE . DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> PARENTESIS_ABRE . STRING PARENTESIS_CIERRA expresion
    (114) expresion -> PARENTESIS_ABRE . BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> PARENTESIS_ABRE . CHAR PARENTESIS_CIERRA expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    INT             shift and go to state 124
    DOUBLE          shift and go to state 125
    STRING          shift and go to state 126
    BOOLEAN         shift and go to state 127
    CHAR            shift and go to state 128
    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 123
    llamada_fvoid                  shift and go to state 71

state 65

    (97) expresion -> ENTERO .

    MAS             reduce using rule 97 (expresion -> ENTERO .)
    MENOS           reduce using rule 97 (expresion -> ENTERO .)
    POR             reduce using rule 97 (expresion -> ENTERO .)
    DIV             reduce using rule 97 (expresion -> ENTERO .)
    POT             reduce using rule 97 (expresion -> ENTERO .)
    MODULO          reduce using rule 97 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 97 (expresion -> ENTERO .)
    DIREFENCIACION  reduce using rule 97 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 97 (expresion -> ENTERO .)
    MENORQ          reduce using rule 97 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 97 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 97 (expresion -> ENTERO .)
    OR              reduce using rule 97 (expresion -> ENTERO .)
    AND             reduce using rule 97 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 97 (expresion -> ENTERO .)
    error           reduce using rule 97 (expresion -> ENTERO .)
    IDENTIFICADOR   reduce using rule 97 (expresion -> ENTERO .)
    IF              reduce using rule 97 (expresion -> ENTERO .)
    SWITCH          reduce using rule 97 (expresion -> ENTERO .)
    WHILE           reduce using rule 97 (expresion -> ENTERO .)
    FOR             reduce using rule 97 (expresion -> ENTERO .)
    PRINT           reduce using rule 97 (expresion -> ENTERO .)
    BREAK           reduce using rule 97 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 97 (expresion -> ENTERO .)
    RETURN          reduce using rule 97 (expresion -> ENTERO .)
    MAIN            reduce using rule 97 (expresion -> ENTERO .)
    FUNC            reduce using rule 97 (expresion -> ENTERO .)
    VAR             reduce using rule 97 (expresion -> ENTERO .)
    STRING          reduce using rule 97 (expresion -> ENTERO .)
    INT             reduce using rule 97 (expresion -> ENTERO .)
    DOUBLE          reduce using rule 97 (expresion -> ENTERO .)
    CHAR            reduce using rule 97 (expresion -> ENTERO .)
    BOOLEAN         reduce using rule 97 (expresion -> ENTERO .)
    $end            reduce using rule 97 (expresion -> ENTERO .)
    LLAVE_CIERRA    reduce using rule 97 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 97 (expresion -> ENTERO .)
    CASE            reduce using rule 97 (expresion -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 97 (expresion -> ENTERO .)
    COMA            reduce using rule 97 (expresion -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 97 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 97 (expresion -> ENTERO .)


state 66

    (98) expresion -> DECIMAL .

    MAS             reduce using rule 98 (expresion -> DECIMAL .)
    MENOS           reduce using rule 98 (expresion -> DECIMAL .)
    POR             reduce using rule 98 (expresion -> DECIMAL .)
    DIV             reduce using rule 98 (expresion -> DECIMAL .)
    POT             reduce using rule 98 (expresion -> DECIMAL .)
    MODULO          reduce using rule 98 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 98 (expresion -> DECIMAL .)
    DIREFENCIACION  reduce using rule 98 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 98 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 98 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 98 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 98 (expresion -> DECIMAL .)
    OR              reduce using rule 98 (expresion -> DECIMAL .)
    AND             reduce using rule 98 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 98 (expresion -> DECIMAL .)
    error           reduce using rule 98 (expresion -> DECIMAL .)
    IDENTIFICADOR   reduce using rule 98 (expresion -> DECIMAL .)
    IF              reduce using rule 98 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 98 (expresion -> DECIMAL .)
    WHILE           reduce using rule 98 (expresion -> DECIMAL .)
    FOR             reduce using rule 98 (expresion -> DECIMAL .)
    PRINT           reduce using rule 98 (expresion -> DECIMAL .)
    BREAK           reduce using rule 98 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 98 (expresion -> DECIMAL .)
    RETURN          reduce using rule 98 (expresion -> DECIMAL .)
    MAIN            reduce using rule 98 (expresion -> DECIMAL .)
    FUNC            reduce using rule 98 (expresion -> DECIMAL .)
    VAR             reduce using rule 98 (expresion -> DECIMAL .)
    STRING          reduce using rule 98 (expresion -> DECIMAL .)
    INT             reduce using rule 98 (expresion -> DECIMAL .)
    DOUBLE          reduce using rule 98 (expresion -> DECIMAL .)
    CHAR            reduce using rule 98 (expresion -> DECIMAL .)
    BOOLEAN         reduce using rule 98 (expresion -> DECIMAL .)
    $end            reduce using rule 98 (expresion -> DECIMAL .)
    LLAVE_CIERRA    reduce using rule 98 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 98 (expresion -> DECIMAL .)
    CASE            reduce using rule 98 (expresion -> DECIMAL .)
    PARENTESIS_CIERRA reduce using rule 98 (expresion -> DECIMAL .)
    COMA            reduce using rule 98 (expresion -> DECIMAL .)
    CORCHETE_CIERRA reduce using rule 98 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 98 (expresion -> DECIMAL .)


state 67

    (99) expresion -> TRUE .

    MAS             reduce using rule 99 (expresion -> TRUE .)
    MENOS           reduce using rule 99 (expresion -> TRUE .)
    POR             reduce using rule 99 (expresion -> TRUE .)
    DIV             reduce using rule 99 (expresion -> TRUE .)
    POT             reduce using rule 99 (expresion -> TRUE .)
    MODULO          reduce using rule 99 (expresion -> TRUE .)
    IGUALACION      reduce using rule 99 (expresion -> TRUE .)
    DIREFENCIACION  reduce using rule 99 (expresion -> TRUE .)
    MAYORQ          reduce using rule 99 (expresion -> TRUE .)
    MENORQ          reduce using rule 99 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 99 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 99 (expresion -> TRUE .)
    OR              reduce using rule 99 (expresion -> TRUE .)
    AND             reduce using rule 99 (expresion -> TRUE .)
    PTCOMA          reduce using rule 99 (expresion -> TRUE .)
    error           reduce using rule 99 (expresion -> TRUE .)
    IDENTIFICADOR   reduce using rule 99 (expresion -> TRUE .)
    IF              reduce using rule 99 (expresion -> TRUE .)
    SWITCH          reduce using rule 99 (expresion -> TRUE .)
    WHILE           reduce using rule 99 (expresion -> TRUE .)
    FOR             reduce using rule 99 (expresion -> TRUE .)
    PRINT           reduce using rule 99 (expresion -> TRUE .)
    BREAK           reduce using rule 99 (expresion -> TRUE .)
    CONTINUE        reduce using rule 99 (expresion -> TRUE .)
    RETURN          reduce using rule 99 (expresion -> TRUE .)
    MAIN            reduce using rule 99 (expresion -> TRUE .)
    FUNC            reduce using rule 99 (expresion -> TRUE .)
    VAR             reduce using rule 99 (expresion -> TRUE .)
    STRING          reduce using rule 99 (expresion -> TRUE .)
    INT             reduce using rule 99 (expresion -> TRUE .)
    DOUBLE          reduce using rule 99 (expresion -> TRUE .)
    CHAR            reduce using rule 99 (expresion -> TRUE .)
    BOOLEAN         reduce using rule 99 (expresion -> TRUE .)
    $end            reduce using rule 99 (expresion -> TRUE .)
    LLAVE_CIERRA    reduce using rule 99 (expresion -> TRUE .)
    DEFAULT         reduce using rule 99 (expresion -> TRUE .)
    CASE            reduce using rule 99 (expresion -> TRUE .)
    PARENTESIS_CIERRA reduce using rule 99 (expresion -> TRUE .)
    COMA            reduce using rule 99 (expresion -> TRUE .)
    CORCHETE_CIERRA reduce using rule 99 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 99 (expresion -> TRUE .)


state 68

    (100) expresion -> FALSE .

    MAS             reduce using rule 100 (expresion -> FALSE .)
    MENOS           reduce using rule 100 (expresion -> FALSE .)
    POR             reduce using rule 100 (expresion -> FALSE .)
    DIV             reduce using rule 100 (expresion -> FALSE .)
    POT             reduce using rule 100 (expresion -> FALSE .)
    MODULO          reduce using rule 100 (expresion -> FALSE .)
    IGUALACION      reduce using rule 100 (expresion -> FALSE .)
    DIREFENCIACION  reduce using rule 100 (expresion -> FALSE .)
    MAYORQ          reduce using rule 100 (expresion -> FALSE .)
    MENORQ          reduce using rule 100 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 100 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 100 (expresion -> FALSE .)
    OR              reduce using rule 100 (expresion -> FALSE .)
    AND             reduce using rule 100 (expresion -> FALSE .)
    PTCOMA          reduce using rule 100 (expresion -> FALSE .)
    error           reduce using rule 100 (expresion -> FALSE .)
    IDENTIFICADOR   reduce using rule 100 (expresion -> FALSE .)
    IF              reduce using rule 100 (expresion -> FALSE .)
    SWITCH          reduce using rule 100 (expresion -> FALSE .)
    WHILE           reduce using rule 100 (expresion -> FALSE .)
    FOR             reduce using rule 100 (expresion -> FALSE .)
    PRINT           reduce using rule 100 (expresion -> FALSE .)
    BREAK           reduce using rule 100 (expresion -> FALSE .)
    CONTINUE        reduce using rule 100 (expresion -> FALSE .)
    RETURN          reduce using rule 100 (expresion -> FALSE .)
    MAIN            reduce using rule 100 (expresion -> FALSE .)
    FUNC            reduce using rule 100 (expresion -> FALSE .)
    VAR             reduce using rule 100 (expresion -> FALSE .)
    STRING          reduce using rule 100 (expresion -> FALSE .)
    INT             reduce using rule 100 (expresion -> FALSE .)
    DOUBLE          reduce using rule 100 (expresion -> FALSE .)
    CHAR            reduce using rule 100 (expresion -> FALSE .)
    BOOLEAN         reduce using rule 100 (expresion -> FALSE .)
    $end            reduce using rule 100 (expresion -> FALSE .)
    LLAVE_CIERRA    reduce using rule 100 (expresion -> FALSE .)
    DEFAULT         reduce using rule 100 (expresion -> FALSE .)
    CASE            reduce using rule 100 (expresion -> FALSE .)
    PARENTESIS_CIERRA reduce using rule 100 (expresion -> FALSE .)
    COMA            reduce using rule 100 (expresion -> FALSE .)
    CORCHETE_CIERRA reduce using rule 100 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 100 (expresion -> FALSE .)


state 69

    (102) expresion -> CADENA .

    MAS             reduce using rule 102 (expresion -> CADENA .)
    MENOS           reduce using rule 102 (expresion -> CADENA .)
    POR             reduce using rule 102 (expresion -> CADENA .)
    DIV             reduce using rule 102 (expresion -> CADENA .)
    POT             reduce using rule 102 (expresion -> CADENA .)
    MODULO          reduce using rule 102 (expresion -> CADENA .)
    IGUALACION      reduce using rule 102 (expresion -> CADENA .)
    DIREFENCIACION  reduce using rule 102 (expresion -> CADENA .)
    MAYORQ          reduce using rule 102 (expresion -> CADENA .)
    MENORQ          reduce using rule 102 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 102 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 102 (expresion -> CADENA .)
    OR              reduce using rule 102 (expresion -> CADENA .)
    AND             reduce using rule 102 (expresion -> CADENA .)
    PTCOMA          reduce using rule 102 (expresion -> CADENA .)
    error           reduce using rule 102 (expresion -> CADENA .)
    IDENTIFICADOR   reduce using rule 102 (expresion -> CADENA .)
    IF              reduce using rule 102 (expresion -> CADENA .)
    SWITCH          reduce using rule 102 (expresion -> CADENA .)
    WHILE           reduce using rule 102 (expresion -> CADENA .)
    FOR             reduce using rule 102 (expresion -> CADENA .)
    PRINT           reduce using rule 102 (expresion -> CADENA .)
    BREAK           reduce using rule 102 (expresion -> CADENA .)
    CONTINUE        reduce using rule 102 (expresion -> CADENA .)
    RETURN          reduce using rule 102 (expresion -> CADENA .)
    MAIN            reduce using rule 102 (expresion -> CADENA .)
    FUNC            reduce using rule 102 (expresion -> CADENA .)
    VAR             reduce using rule 102 (expresion -> CADENA .)
    STRING          reduce using rule 102 (expresion -> CADENA .)
    INT             reduce using rule 102 (expresion -> CADENA .)
    DOUBLE          reduce using rule 102 (expresion -> CADENA .)
    CHAR            reduce using rule 102 (expresion -> CADENA .)
    BOOLEAN         reduce using rule 102 (expresion -> CADENA .)
    $end            reduce using rule 102 (expresion -> CADENA .)
    LLAVE_CIERRA    reduce using rule 102 (expresion -> CADENA .)
    DEFAULT         reduce using rule 102 (expresion -> CADENA .)
    CASE            reduce using rule 102 (expresion -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 102 (expresion -> CADENA .)
    COMA            reduce using rule 102 (expresion -> CADENA .)
    CORCHETE_CIERRA reduce using rule 102 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 102 (expresion -> CADENA .)


state 70

    (103) expresion -> CHART .

    MAS             reduce using rule 103 (expresion -> CHART .)
    MENOS           reduce using rule 103 (expresion -> CHART .)
    POR             reduce using rule 103 (expresion -> CHART .)
    DIV             reduce using rule 103 (expresion -> CHART .)
    POT             reduce using rule 103 (expresion -> CHART .)
    MODULO          reduce using rule 103 (expresion -> CHART .)
    IGUALACION      reduce using rule 103 (expresion -> CHART .)
    DIREFENCIACION  reduce using rule 103 (expresion -> CHART .)
    MAYORQ          reduce using rule 103 (expresion -> CHART .)
    MENORQ          reduce using rule 103 (expresion -> CHART .)
    MAYORIGUAL      reduce using rule 103 (expresion -> CHART .)
    MENORIGUAL      reduce using rule 103 (expresion -> CHART .)
    OR              reduce using rule 103 (expresion -> CHART .)
    AND             reduce using rule 103 (expresion -> CHART .)
    PTCOMA          reduce using rule 103 (expresion -> CHART .)
    error           reduce using rule 103 (expresion -> CHART .)
    IDENTIFICADOR   reduce using rule 103 (expresion -> CHART .)
    IF              reduce using rule 103 (expresion -> CHART .)
    SWITCH          reduce using rule 103 (expresion -> CHART .)
    WHILE           reduce using rule 103 (expresion -> CHART .)
    FOR             reduce using rule 103 (expresion -> CHART .)
    PRINT           reduce using rule 103 (expresion -> CHART .)
    BREAK           reduce using rule 103 (expresion -> CHART .)
    CONTINUE        reduce using rule 103 (expresion -> CHART .)
    RETURN          reduce using rule 103 (expresion -> CHART .)
    MAIN            reduce using rule 103 (expresion -> CHART .)
    FUNC            reduce using rule 103 (expresion -> CHART .)
    VAR             reduce using rule 103 (expresion -> CHART .)
    STRING          reduce using rule 103 (expresion -> CHART .)
    INT             reduce using rule 103 (expresion -> CHART .)
    DOUBLE          reduce using rule 103 (expresion -> CHART .)
    CHAR            reduce using rule 103 (expresion -> CHART .)
    BOOLEAN         reduce using rule 103 (expresion -> CHART .)
    $end            reduce using rule 103 (expresion -> CHART .)
    LLAVE_CIERRA    reduce using rule 103 (expresion -> CHART .)
    DEFAULT         reduce using rule 103 (expresion -> CHART .)
    CASE            reduce using rule 103 (expresion -> CHART .)
    PARENTESIS_CIERRA reduce using rule 103 (expresion -> CHART .)
    COMA            reduce using rule 103 (expresion -> CHART .)
    CORCHETE_CIERRA reduce using rule 103 (expresion -> CHART .)
    DOSPUNTOS       reduce using rule 103 (expresion -> CHART .)


state 71

    (104) expresion -> llamada_fvoid .

    MAS             reduce using rule 104 (expresion -> llamada_fvoid .)
    MENOS           reduce using rule 104 (expresion -> llamada_fvoid .)
    POR             reduce using rule 104 (expresion -> llamada_fvoid .)
    DIV             reduce using rule 104 (expresion -> llamada_fvoid .)
    POT             reduce using rule 104 (expresion -> llamada_fvoid .)
    MODULO          reduce using rule 104 (expresion -> llamada_fvoid .)
    IGUALACION      reduce using rule 104 (expresion -> llamada_fvoid .)
    DIREFENCIACION  reduce using rule 104 (expresion -> llamada_fvoid .)
    MAYORQ          reduce using rule 104 (expresion -> llamada_fvoid .)
    MENORQ          reduce using rule 104 (expresion -> llamada_fvoid .)
    MAYORIGUAL      reduce using rule 104 (expresion -> llamada_fvoid .)
    MENORIGUAL      reduce using rule 104 (expresion -> llamada_fvoid .)
    OR              reduce using rule 104 (expresion -> llamada_fvoid .)
    AND             reduce using rule 104 (expresion -> llamada_fvoid .)
    PTCOMA          reduce using rule 104 (expresion -> llamada_fvoid .)
    error           reduce using rule 104 (expresion -> llamada_fvoid .)
    IDENTIFICADOR   reduce using rule 104 (expresion -> llamada_fvoid .)
    IF              reduce using rule 104 (expresion -> llamada_fvoid .)
    SWITCH          reduce using rule 104 (expresion -> llamada_fvoid .)
    WHILE           reduce using rule 104 (expresion -> llamada_fvoid .)
    FOR             reduce using rule 104 (expresion -> llamada_fvoid .)
    PRINT           reduce using rule 104 (expresion -> llamada_fvoid .)
    BREAK           reduce using rule 104 (expresion -> llamada_fvoid .)
    CONTINUE        reduce using rule 104 (expresion -> llamada_fvoid .)
    RETURN          reduce using rule 104 (expresion -> llamada_fvoid .)
    MAIN            reduce using rule 104 (expresion -> llamada_fvoid .)
    FUNC            reduce using rule 104 (expresion -> llamada_fvoid .)
    VAR             reduce using rule 104 (expresion -> llamada_fvoid .)
    STRING          reduce using rule 104 (expresion -> llamada_fvoid .)
    INT             reduce using rule 104 (expresion -> llamada_fvoid .)
    DOUBLE          reduce using rule 104 (expresion -> llamada_fvoid .)
    CHAR            reduce using rule 104 (expresion -> llamada_fvoid .)
    BOOLEAN         reduce using rule 104 (expresion -> llamada_fvoid .)
    $end            reduce using rule 104 (expresion -> llamada_fvoid .)
    LLAVE_CIERRA    reduce using rule 104 (expresion -> llamada_fvoid .)
    DEFAULT         reduce using rule 104 (expresion -> llamada_fvoid .)
    CASE            reduce using rule 104 (expresion -> llamada_fvoid .)
    PARENTESIS_CIERRA reduce using rule 104 (expresion -> llamada_fvoid .)
    COMA            reduce using rule 104 (expresion -> llamada_fvoid .)
    CORCHETE_CIERRA reduce using rule 104 (expresion -> llamada_fvoid .)
    DOSPUNTOS       reduce using rule 104 (expresion -> llamada_fvoid .)


state 72

    (105) expresion -> TOUPPER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 129


state 73

    (106) expresion -> TOLOWER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 130


state 74

    (107) expresion -> TRUNCATE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 131


state 75

    (108) expresion -> ROUND . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 132


state 76

    (109) expresion -> TYPEOF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 133


state 77

    (110) expresion -> LENGHT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 134


state 78

    (117) expresion -> READ . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 135


state 79

    (37) main -> MAIN PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 136


state 80

    (64) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 137


state 81

    (49) tipo1 -> tip lista_Dimension . IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (50) lista_Dimension -> lista_Dimension . CORCHETE_ABRE CORCHETE_CIERRA

    IDENTIFICADOR   shift and go to state 138
    CORCHETE_ABRE   shift and go to state 139


state 82

    (51) lista_Dimension -> CORCHETE_ABRE . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 140


state 83

    (19) variables -> var IDENTIFICADOR finInstruccion .

    error           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    IDENTIFICADOR   reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    IF              reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    SWITCH          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    WHILE           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    FOR             reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    PRINT           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    BREAK           reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    CONTINUE        reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    RETURN          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    MAIN            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    FUNC            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    VAR             reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    STRING          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    INT             reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    DOUBLE          reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    CHAR            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    BOOLEAN         reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    $end            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    LLAVE_CIERRA    reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    DEFAULT         reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)
    CASE            reduce using rule 19 (variables -> var IDENTIFICADOR finInstruccion .)


state 84

    (20) variables -> var IDENTIFICADOR IGUAL . expresion finInstruccion
    (21) variables -> var IDENTIFICADOR IGUAL . NULL finInstruccion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 142
    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 141
    llamada_fvoid                  shift and go to state 71

state 85

    (22) variables -> IDENTIFICADOR IGUAL expresion . finInstruccion
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117
    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 143

state 86

    (23) variables -> IDENTIFICADOR IGUAL NULL . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 144

state 87

    (25) variables -> IDENTIFICADOR INCREMENTO finInstruccion .

    error           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IF              reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    SWITCH          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    WHILE           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FOR             reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    PRINT           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BREAK           reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CONTINUE        reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    RETURN          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    MAIN            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FUNC            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    VAR             reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    STRING          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    INT             reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DOUBLE          reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CHAR            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BOOLEAN         reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    $end            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DEFAULT         reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CASE            reduce using rule 25 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)


state 88

    (26) variables -> IDENTIFICADOR DECREMENTO finInstruccion .

    error           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IF              reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    SWITCH          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    WHILE           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FOR             reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    PRINT           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BREAK           reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CONTINUE        reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    RETURN          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    MAIN            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FUNC            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    VAR             reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    STRING          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    INT             reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DOUBLE          reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CHAR            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BOOLEAN         reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    $end            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DEFAULT         reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CASE            reduce using rule 26 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)


state 89

    (46) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    STRING          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    INT             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CHAR            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAS             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 46 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 90

    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada . PARENTESIS_CIERRA
    (61) parametros_llamada -> parametros_llamada . COMA parametro_llamada

    PARENTESIS_CIERRA shift and go to state 145
    COMA            shift and go to state 146


state 91

    (62) parametros_llamada -> parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 62 (parametros_llamada -> parametro_llamada .)
    COMA            reduce using rule 62 (parametros_llamada -> parametro_llamada .)


state 92

    (63) parametro_llamada -> expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 63 (parametro_llamada -> expresion .)
    COMA            reduce using rule 63 (parametro_llamada -> expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 93

    (59) modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 147
    llamada_fvoid                  shift and go to state 71

state 94

    (52) lista_expresiones -> lista_expresiones CORCHETE_ABRE . expresion CORCHETE_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 148
    llamada_fvoid                  shift and go to state 71

state 95

    (53) lista_expresiones -> CORCHETE_ABRE expresion . CORCHETE_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    CORCHETE_CIERRA shift and go to state 149
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 96

    (27) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 150
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 97

    (30) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 151
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 98

    (38) while -> WHILE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 152
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 99

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 153


state 100

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 154


state 101

    (41) declaracionfor1 -> VAR . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 155


state 102

    (42) declaracionfor2 -> IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 156


state 103

    (73) print -> PRINT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA finInstruccion
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 157
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 104

    (78) expresion -> expresion MAS . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 158
    llamada_fvoid                  shift and go to state 71

state 105

    (79) expresion -> expresion MENOS . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 159
    llamada_fvoid                  shift and go to state 71

state 106

    (80) expresion -> expresion POR . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 160
    llamada_fvoid                  shift and go to state 71

state 107

    (81) expresion -> expresion DIV . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 161
    llamada_fvoid                  shift and go to state 71

state 108

    (82) expresion -> expresion POT . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 162
    llamada_fvoid                  shift and go to state 71

state 109

    (83) expresion -> expresion MODULO . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 163
    llamada_fvoid                  shift and go to state 71

state 110

    (84) expresion -> expresion IGUALACION . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 164
    llamada_fvoid                  shift and go to state 71

state 111

    (85) expresion -> expresion DIREFENCIACION . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 165
    llamada_fvoid                  shift and go to state 71

state 112

    (86) expresion -> expresion MAYORQ . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 166
    llamada_fvoid                  shift and go to state 71

state 113

    (87) expresion -> expresion MENORQ . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 167
    llamada_fvoid                  shift and go to state 71

state 114

    (88) expresion -> expresion MAYORIGUAL . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 168
    llamada_fvoid                  shift and go to state 71

state 115

    (89) expresion -> expresion MENORIGUAL . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 169
    llamada_fvoid                  shift and go to state 71

state 116

    (90) expresion -> expresion OR . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 170
    llamada_fvoid                  shift and go to state 71

state 117

    (91) expresion -> expresion AND . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 171
    llamada_fvoid                  shift and go to state 71

state 118

    (92) expresion -> MENOS expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 92 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 92 (expresion -> MENOS expresion .)
    POR             reduce using rule 92 (expresion -> MENOS expresion .)
    DIV             reduce using rule 92 (expresion -> MENOS expresion .)
    POT             reduce using rule 92 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 92 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 92 (expresion -> MENOS expresion .)
    DIREFENCIACION  reduce using rule 92 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 92 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 92 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 92 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 92 (expresion -> MENOS expresion .)
    OR              reduce using rule 92 (expresion -> MENOS expresion .)
    AND             reduce using rule 92 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 92 (expresion -> MENOS expresion .)
    error           reduce using rule 92 (expresion -> MENOS expresion .)
    IDENTIFICADOR   reduce using rule 92 (expresion -> MENOS expresion .)
    IF              reduce using rule 92 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 92 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 92 (expresion -> MENOS expresion .)
    FOR             reduce using rule 92 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 92 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 92 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 92 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 92 (expresion -> MENOS expresion .)
    MAIN            reduce using rule 92 (expresion -> MENOS expresion .)
    FUNC            reduce using rule 92 (expresion -> MENOS expresion .)
    VAR             reduce using rule 92 (expresion -> MENOS expresion .)
    STRING          reduce using rule 92 (expresion -> MENOS expresion .)
    INT             reduce using rule 92 (expresion -> MENOS expresion .)
    DOUBLE          reduce using rule 92 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 92 (expresion -> MENOS expresion .)
    BOOLEAN         reduce using rule 92 (expresion -> MENOS expresion .)
    $end            reduce using rule 92 (expresion -> MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 92 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 92 (expresion -> MENOS expresion .)
    CASE            reduce using rule 92 (expresion -> MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 92 (expresion -> MENOS expresion .)
    COMA            reduce using rule 92 (expresion -> MENOS expresion .)
    CORCHETE_CIERRA reduce using rule 92 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 92 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! POT             [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 119

    (93) expresion -> NOT expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    OR              reduce using rule 93 (expresion -> NOT expresion .)
    AND             reduce using rule 93 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 93 (expresion -> NOT expresion .)
    error           reduce using rule 93 (expresion -> NOT expresion .)
    IDENTIFICADOR   reduce using rule 93 (expresion -> NOT expresion .)
    IF              reduce using rule 93 (expresion -> NOT expresion .)
    SWITCH          reduce using rule 93 (expresion -> NOT expresion .)
    WHILE           reduce using rule 93 (expresion -> NOT expresion .)
    FOR             reduce using rule 93 (expresion -> NOT expresion .)
    PRINT           reduce using rule 93 (expresion -> NOT expresion .)
    BREAK           reduce using rule 93 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 93 (expresion -> NOT expresion .)
    RETURN          reduce using rule 93 (expresion -> NOT expresion .)
    MAIN            reduce using rule 93 (expresion -> NOT expresion .)
    FUNC            reduce using rule 93 (expresion -> NOT expresion .)
    VAR             reduce using rule 93 (expresion -> NOT expresion .)
    STRING          reduce using rule 93 (expresion -> NOT expresion .)
    INT             reduce using rule 93 (expresion -> NOT expresion .)
    DOUBLE          reduce using rule 93 (expresion -> NOT expresion .)
    CHAR            reduce using rule 93 (expresion -> NOT expresion .)
    BOOLEAN         reduce using rule 93 (expresion -> NOT expresion .)
    $end            reduce using rule 93 (expresion -> NOT expresion .)
    LLAVE_CIERRA    reduce using rule 93 (expresion -> NOT expresion .)
    DEFAULT         reduce using rule 93 (expresion -> NOT expresion .)
    CASE            reduce using rule 93 (expresion -> NOT expresion .)
    PARENTESIS_CIERRA reduce using rule 93 (expresion -> NOT expresion .)
    COMA            reduce using rule 93 (expresion -> NOT expresion .)
    CORCHETE_CIERRA reduce using rule 93 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 93 (expresion -> NOT expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115

  ! MAS             [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 93 (expresion -> NOT expresion .) ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 120

    (94) expresion -> IDENTIFICADOR INCREMENTO .

    MAS             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENOS           reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    POR             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIV             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    POT             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MODULO          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    IGUALACION      reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIREFENCIACION  reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORQ          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORQ          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORIGUAL      reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORIGUAL      reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    OR              reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    AND             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    PTCOMA          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    error           reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    IDENTIFICADOR   reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    IF              reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    SWITCH          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    WHILE           reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    FOR             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    PRINT           reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    BREAK           reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    CONTINUE        reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    RETURN          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAIN            reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    FUNC            reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    VAR             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    STRING          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    INT             reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOUBLE          reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    CHAR            reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    BOOLEAN         reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    $end            reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    LLAVE_CIERRA    reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    DEFAULT         reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    CASE            reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    COMA            reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    CORCHETE_CIERRA reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOSPUNTOS       reduce using rule 94 (expresion -> IDENTIFICADOR INCREMENTO .)


state 121

    (95) expresion -> IDENTIFICADOR DECREMENTO .

    MAS             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENOS           reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    POR             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIV             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    POT             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MODULO          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    IGUALACION      reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIREFENCIACION  reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORQ          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORQ          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORIGUAL      reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORIGUAL      reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    OR              reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    AND             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    PTCOMA          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    error           reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    IDENTIFICADOR   reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    IF              reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    SWITCH          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    WHILE           reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    FOR             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    PRINT           reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    BREAK           reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    CONTINUE        reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    RETURN          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAIN            reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    FUNC            reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    VAR             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    STRING          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    INT             reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOUBLE          reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    CHAR            reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    BOOLEAN         reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    $end            reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    LLAVE_CIERRA    reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    DEFAULT         reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    CASE            reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    COMA            reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    CORCHETE_CIERRA reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOSPUNTOS       reduce using rule 95 (expresion -> IDENTIFICADOR DECREMENTO .)


state 122

    (116) expresion -> IDENTIFICADOR lista_expresiones .
    (52) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    MAS             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENOS           reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    POR             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    DIV             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    POT             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MODULO          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    IGUALACION      reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    DIREFENCIACION  reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAYORQ          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENORQ          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAYORIGUAL      reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENORIGUAL      reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    OR              reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    AND             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    PTCOMA          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    error           reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    IDENTIFICADOR   reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    IF              reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    SWITCH          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    WHILE           reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    FOR             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    PRINT           reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    BREAK           reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    CONTINUE        reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    RETURN          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAIN            reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    FUNC            reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    VAR             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    STRING          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    INT             reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    DOUBLE          reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    CHAR            reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    BOOLEAN         reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    $end            reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    LLAVE_CIERRA    reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    DEFAULT         reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    CASE            reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    PARENTESIS_CIERRA reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    COMA            reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    CORCHETE_CIERRA reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    DOSPUNTOS       reduce using rule 116 (expresion -> IDENTIFICADOR lista_expresiones .)
    CORCHETE_ABRE   shift and go to state 94


state 123

    (96) expresion -> PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 172
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 124

    (111) expresion -> PARENTESIS_ABRE INT . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 173


state 125

    (112) expresion -> PARENTESIS_ABRE DOUBLE . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 174


state 126

    (113) expresion -> PARENTESIS_ABRE STRING . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 175


state 127

    (114) expresion -> PARENTESIS_ABRE BOOLEAN . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 176


state 128

    (115) expresion -> PARENTESIS_ABRE CHAR . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 177


state 129

    (105) expresion -> TOUPPER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 178
    llamada_fvoid                  shift and go to state 71

state 130

    (106) expresion -> TOLOWER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 179
    llamada_fvoid                  shift and go to state 71

state 131

    (107) expresion -> TRUNCATE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 180
    llamada_fvoid                  shift and go to state 71

state 132

    (108) expresion -> ROUND PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 181
    llamada_fvoid                  shift and go to state 71

state 133

    (109) expresion -> TYPEOF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 182
    llamada_fvoid                  shift and go to state 71

state 134

    (110) expresion -> LENGHT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 183
    llamada_fvoid                  shift and go to state 71

state 135

    (117) expresion -> READ PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 184


state 136

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 185


state 137

    (64) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (66) parametros -> . parametros COMA parametro
    (67) parametros -> . parametro
    (68) parametro -> . INT IDENTIFICADOR
    (69) parametro -> . STRING IDENTIFICADOR
    (70) parametro -> . DOUBLE IDENTIFICADOR
    (71) parametro -> . BOOLEAN IDENTIFICADOR
    (72) parametro -> . CHAR IDENTIFICADOR

    PARENTESIS_CIERRA shift and go to state 186
    INT             shift and go to state 189
    STRING          shift and go to state 190
    DOUBLE          shift and go to state 191
    BOOLEAN         shift and go to state 192
    CHAR            shift and go to state 193

    parametros                     shift and go to state 187
    parametro                      shift and go to state 188

state 138

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR . IGUAL NEW tip lista_expresiones

    IGUAL           shift and go to state 194


state 139

    (50) lista_Dimension -> lista_Dimension CORCHETE_ABRE . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 195


state 140

    (51) lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .

    IDENTIFICADOR   reduce using rule 51 (lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 51 (lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 141

    (20) variables -> var IDENTIFICADOR IGUAL expresion . finInstruccion
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117
    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 196

state 142

    (21) variables -> var IDENTIFICADOR IGUAL NULL . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 197

state 143

    (22) variables -> IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    STRING          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    INT             reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DOUBLE          reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CHAR            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BOOLEAN         reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 22 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)


state 144

    (23) variables -> IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    STRING          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    INT             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DOUBLE          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CHAR            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BOOLEAN         reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)


state 145

    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    error           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IF              reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    WHILE           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FOR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PRINT           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BREAK           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    RETURN          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAIN            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FUNC            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    VAR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    STRING          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    INT             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CHAR            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    $end            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAS             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENOS           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIV             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POT             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MODULO          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    OR              reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    AND             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CASE            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    COMA            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)


state 146

    (61) parametros_llamada -> parametros_llamada COMA . parametro_llamada
    (63) parametro_llamada -> . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    parametro_llamada              shift and go to state 198
    expresion                      shift and go to state 92
    llamada_fvoid                  shift and go to state 71

state 147

    (59) modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    error           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    IDENTIFICADOR   reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    IF              reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    SWITCH          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    WHILE           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    FOR             reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    PRINT           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    BREAK           reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CONTINUE        reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    RETURN          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    MAIN            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    FUNC            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    VAR             reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    STRING          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    INT             reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    DOUBLE          reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CHAR            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    BOOLEAN         reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    $end            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    DEFAULT         reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CASE            reduce using rule 59 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 148

    (52) lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion . CORCHETE_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    CORCHETE_CIERRA shift and go to state 199
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 149

    (53) lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .

    IGUAL           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAS             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENOS           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POR             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIV             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POT             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MODULO          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IGUALACION      reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIREFENCIACION  reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORQ          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORQ          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORIGUAL      reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORIGUAL      reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    OR              reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    AND             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PTCOMA          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    error           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IDENTIFICADOR   reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IF              reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    SWITCH          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    WHILE           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FOR             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PRINT           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BREAK           reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CONTINUE        reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    RETURN          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAIN            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FUNC            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    VAR             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    STRING          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    INT             reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOUBLE          reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CHAR            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BOOLEAN         reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    $end            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DEFAULT         reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CASE            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    COMA            reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_CIERRA reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOSPUNTOS       reduce using rule 53 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)


state 150

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 200


state 151

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE default LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 201


state 152

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 202


state 153

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 203
    llamada_fvoid                  shift and go to state 71

state 154

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 204
    llamada_fvoid                  shift and go to state 71

state 155

    (41) declaracionfor1 -> VAR IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 205


state 156

    (42) declaracionfor2 -> IDENTIFICADOR IGUAL . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 206
    llamada_fvoid                  shift and go to state 71

state 157

    (73) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA . finInstruccion
    (76) finInstruccion -> . PTCOMA
    (77) finInstruccion -> .

    PTCOMA          shift and go to state 41
    error           reduce using rule 77 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 77 (finInstruccion -> .)
    IF              reduce using rule 77 (finInstruccion -> .)
    SWITCH          reduce using rule 77 (finInstruccion -> .)
    WHILE           reduce using rule 77 (finInstruccion -> .)
    FOR             reduce using rule 77 (finInstruccion -> .)
    PRINT           reduce using rule 77 (finInstruccion -> .)
    BREAK           reduce using rule 77 (finInstruccion -> .)
    CONTINUE        reduce using rule 77 (finInstruccion -> .)
    RETURN          reduce using rule 77 (finInstruccion -> .)
    MAIN            reduce using rule 77 (finInstruccion -> .)
    FUNC            reduce using rule 77 (finInstruccion -> .)
    VAR             reduce using rule 77 (finInstruccion -> .)
    STRING          reduce using rule 77 (finInstruccion -> .)
    INT             reduce using rule 77 (finInstruccion -> .)
    DOUBLE          reduce using rule 77 (finInstruccion -> .)
    CHAR            reduce using rule 77 (finInstruccion -> .)
    BOOLEAN         reduce using rule 77 (finInstruccion -> .)
    $end            reduce using rule 77 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 77 (finInstruccion -> .)
    DEFAULT         reduce using rule 77 (finInstruccion -> .)
    CASE            reduce using rule 77 (finInstruccion -> .)

    finInstruccion                 shift and go to state 207

state 158

    (78) expresion -> expresion MAS expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 78 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 78 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 78 (expresion -> expresion MAS expresion .)
    DIREFENCIACION  reduce using rule 78 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 78 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 78 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 78 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 78 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 78 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 78 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 78 (expresion -> expresion MAS expresion .)
    error           reduce using rule 78 (expresion -> expresion MAS expresion .)
    IDENTIFICADOR   reduce using rule 78 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 78 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 78 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 78 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 78 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 78 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 78 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 78 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 78 (expresion -> expresion MAS expresion .)
    MAIN            reduce using rule 78 (expresion -> expresion MAS expresion .)
    FUNC            reduce using rule 78 (expresion -> expresion MAS expresion .)
    VAR             reduce using rule 78 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 78 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 78 (expresion -> expresion MAS expresion .)
    DOUBLE          reduce using rule 78 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 78 (expresion -> expresion MAS expresion .)
    BOOLEAN         reduce using rule 78 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 78 (expresion -> expresion MAS expresion .)
    LLAVE_CIERRA    reduce using rule 78 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 78 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 78 (expresion -> expresion MAS expresion .)
    PARENTESIS_CIERRA reduce using rule 78 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 78 (expresion -> expresion MAS expresion .)
    CORCHETE_CIERRA reduce using rule 78 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 78 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! POR             [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 78 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 159

    (79) expresion -> expresion MENOS expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 79 (expresion -> expresion MENOS expresion .)
    DIREFENCIACION  reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 79 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 79 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    IDENTIFICADOR   reduce using rule 79 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 79 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 79 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 79 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    MAIN            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    FUNC            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    VAR             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 79 (expresion -> expresion MENOS expresion .)
    DOUBLE          reduce using rule 79 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    BOOLEAN         reduce using rule 79 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 79 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 79 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 79 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 79 (expresion -> expresion MENOS expresion .)
    CORCHETE_CIERRA reduce using rule 79 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 79 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! POR             [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 79 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 160

    (80) expresion -> expresion POR expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 80 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 80 (expresion -> expresion POR expresion .)
    POR             reduce using rule 80 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 80 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 80 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 80 (expresion -> expresion POR expresion .)
    DIREFENCIACION  reduce using rule 80 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 80 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 80 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 80 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 80 (expresion -> expresion POR expresion .)
    OR              reduce using rule 80 (expresion -> expresion POR expresion .)
    AND             reduce using rule 80 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 80 (expresion -> expresion POR expresion .)
    error           reduce using rule 80 (expresion -> expresion POR expresion .)
    IDENTIFICADOR   reduce using rule 80 (expresion -> expresion POR expresion .)
    IF              reduce using rule 80 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 80 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 80 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 80 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 80 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 80 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 80 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 80 (expresion -> expresion POR expresion .)
    MAIN            reduce using rule 80 (expresion -> expresion POR expresion .)
    FUNC            reduce using rule 80 (expresion -> expresion POR expresion .)
    VAR             reduce using rule 80 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 80 (expresion -> expresion POR expresion .)
    INT             reduce using rule 80 (expresion -> expresion POR expresion .)
    DOUBLE          reduce using rule 80 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 80 (expresion -> expresion POR expresion .)
    BOOLEAN         reduce using rule 80 (expresion -> expresion POR expresion .)
    $end            reduce using rule 80 (expresion -> expresion POR expresion .)
    LLAVE_CIERRA    reduce using rule 80 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 80 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 80 (expresion -> expresion POR expresion .)
    PARENTESIS_CIERRA reduce using rule 80 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 80 (expresion -> expresion POR expresion .)
    CORCHETE_CIERRA reduce using rule 80 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 80 (expresion -> expresion POR expresion .)
    POT             shift and go to state 108

  ! POT             [ reduce using rule 80 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 161

    (81) expresion -> expresion DIV expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 81 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 81 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 81 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 81 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 81 (expresion -> expresion DIV expresion .)
    IGUALACION      reduce using rule 81 (expresion -> expresion DIV expresion .)
    DIREFENCIACION  reduce using rule 81 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 81 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 81 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 81 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 81 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 81 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 81 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 81 (expresion -> expresion DIV expresion .)
    error           reduce using rule 81 (expresion -> expresion DIV expresion .)
    IDENTIFICADOR   reduce using rule 81 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 81 (expresion -> expresion DIV expresion .)
    SWITCH          reduce using rule 81 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 81 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 81 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 81 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 81 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 81 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 81 (expresion -> expresion DIV expresion .)
    MAIN            reduce using rule 81 (expresion -> expresion DIV expresion .)
    FUNC            reduce using rule 81 (expresion -> expresion DIV expresion .)
    VAR             reduce using rule 81 (expresion -> expresion DIV expresion .)
    STRING          reduce using rule 81 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 81 (expresion -> expresion DIV expresion .)
    DOUBLE          reduce using rule 81 (expresion -> expresion DIV expresion .)
    CHAR            reduce using rule 81 (expresion -> expresion DIV expresion .)
    BOOLEAN         reduce using rule 81 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 81 (expresion -> expresion DIV expresion .)
    LLAVE_CIERRA    reduce using rule 81 (expresion -> expresion DIV expresion .)
    DEFAULT         reduce using rule 81 (expresion -> expresion DIV expresion .)
    CASE            reduce using rule 81 (expresion -> expresion DIV expresion .)
    PARENTESIS_CIERRA reduce using rule 81 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 81 (expresion -> expresion DIV expresion .)
    CORCHETE_CIERRA reduce using rule 81 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 81 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 108

  ! POT             [ reduce using rule 81 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 162

    (82) expresion -> expresion POT expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 82 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 82 (expresion -> expresion POT expresion .)
    POR             reduce using rule 82 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 82 (expresion -> expresion POT expresion .)
    POT             reduce using rule 82 (expresion -> expresion POT expresion .)
    MODULO          reduce using rule 82 (expresion -> expresion POT expresion .)
    IGUALACION      reduce using rule 82 (expresion -> expresion POT expresion .)
    DIREFENCIACION  reduce using rule 82 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 82 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 82 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 82 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 82 (expresion -> expresion POT expresion .)
    OR              reduce using rule 82 (expresion -> expresion POT expresion .)
    AND             reduce using rule 82 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 82 (expresion -> expresion POT expresion .)
    error           reduce using rule 82 (expresion -> expresion POT expresion .)
    IDENTIFICADOR   reduce using rule 82 (expresion -> expresion POT expresion .)
    IF              reduce using rule 82 (expresion -> expresion POT expresion .)
    SWITCH          reduce using rule 82 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 82 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 82 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 82 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 82 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 82 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 82 (expresion -> expresion POT expresion .)
    MAIN            reduce using rule 82 (expresion -> expresion POT expresion .)
    FUNC            reduce using rule 82 (expresion -> expresion POT expresion .)
    VAR             reduce using rule 82 (expresion -> expresion POT expresion .)
    STRING          reduce using rule 82 (expresion -> expresion POT expresion .)
    INT             reduce using rule 82 (expresion -> expresion POT expresion .)
    DOUBLE          reduce using rule 82 (expresion -> expresion POT expresion .)
    CHAR            reduce using rule 82 (expresion -> expresion POT expresion .)
    BOOLEAN         reduce using rule 82 (expresion -> expresion POT expresion .)
    $end            reduce using rule 82 (expresion -> expresion POT expresion .)
    LLAVE_CIERRA    reduce using rule 82 (expresion -> expresion POT expresion .)
    DEFAULT         reduce using rule 82 (expresion -> expresion POT expresion .)
    CASE            reduce using rule 82 (expresion -> expresion POT expresion .)
    PARENTESIS_CIERRA reduce using rule 82 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 82 (expresion -> expresion POT expresion .)
    CORCHETE_CIERRA reduce using rule 82 (expresion -> expresion POT expresion .)
    DOSPUNTOS       reduce using rule 82 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! POT             [ shift and go to state 108 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 163

    (83) expresion -> expresion MODULO expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    MAS             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DIREFENCIACION  reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MAYORQ          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MENORQ          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 83 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 83 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    IDENTIFICADOR   reduce using rule 83 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 83 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 83 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 83 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    MAIN            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    FUNC            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    VAR             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DOUBLE          reduce using rule 83 (expresion -> expresion MODULO expresion .)
    CHAR            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    BOOLEAN         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    LLAVE_CIERRA    reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 83 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    PARENTESIS_CIERRA reduce using rule 83 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 83 (expresion -> expresion MODULO expresion .)
    CORCHETE_CIERRA reduce using rule 83 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 83 (expresion -> expresion MODULO expresion .)
    POT             shift and go to state 108

  ! POT             [ reduce using rule 83 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 104 ]
  ! MENOS           [ shift and go to state 105 ]
  ! POR             [ shift and go to state 106 ]
  ! DIV             [ shift and go to state 107 ]
  ! MODULO          [ shift and go to state 109 ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 164

    (84) expresion -> expresion IGUALACION expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    DIREFENCIACION  reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MAYORQ          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MENORQ          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    PTCOMA          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    IDENTIFICADOR   reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    SWITCH          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    PRINT           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MAIN            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    FUNC            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    VAR             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    STRING          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    INT             reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    DOUBLE          reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CHAR            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    BOOLEAN         reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    LLAVE_CIERRA    reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    DEFAULT         reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CASE            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    PARENTESIS_CIERRA reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    CORCHETE_CIERRA reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    DOSPUNTOS       reduce using rule 84 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! DIV             [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! POT             [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 84 (expresion -> expresion IGUALACION expresion .) ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 165

    (85) expresion -> expresion DIREFENCIACION expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    DIREFENCIACION  reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORQ          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    MENORQ          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORIGUAL      reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    MENORIGUAL      reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    OR              reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    AND             reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    PTCOMA          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    error           reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    IDENTIFICADOR   reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    IF              reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    SWITCH          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    WHILE           reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    FOR             reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    PRINT           reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    BREAK           reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    CONTINUE        reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    RETURN          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    MAIN            reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    FUNC            reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    VAR             reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    STRING          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    INT             reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    DOUBLE          reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    CHAR            reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    BOOLEAN         reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    $end            reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    LLAVE_CIERRA    reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    DEFAULT         reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    CASE            reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    PARENTESIS_CIERRA reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    COMA            reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    CORCHETE_CIERRA reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    DOSPUNTOS       reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MENOS           [ reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POR             [ reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! DIV             [ reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POT             [ reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MODULO          [ reduce using rule 85 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 166

    (86) expresion -> expresion MAYORQ expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    DIREFENCIACION  reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    error           reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    IDENTIFICADOR   reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    IF              reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    SWITCH          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    WHILE           reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    FOR             reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    PRINT           reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    BREAK           reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    CONTINUE        reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    RETURN          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    MAIN            reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    FUNC            reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    VAR             reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    STRING          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    INT             reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    DOUBLE          reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    CHAR            reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    BOOLEAN         reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    LLAVE_CIERRA    reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    DEFAULT         reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    CASE            reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    COMA            reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    CORCHETE_CIERRA reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    DOSPUNTOS       reduce using rule 86 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 86 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 86 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 86 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 86 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 86 (expresion -> expresion MAYORQ expresion .) ]
  ! MODULO          [ reduce using rule 86 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 167

    (87) expresion -> expresion MENORQ expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    DIREFENCIACION  reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    error           reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    IDENTIFICADOR   reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    IF              reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    SWITCH          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    FOR             reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    MAIN            reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    FUNC            reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    VAR             reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    STRING          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    INT             reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    DOUBLE          reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    CHAR            reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    BOOLEAN         reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    LLAVE_CIERRA    reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    DEFAULT         reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    CASE            reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    CORCHETE_CIERRA reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 87 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 87 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 87 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 87 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 87 (expresion -> expresion MENORQ expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 168

    (88) expresion -> expresion MAYORIGUAL expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    SWITCH          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MAIN            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    FUNC            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    VAR             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    STRING          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    INT             reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DOUBLE          reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    CHAR            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    BOOLEAN         reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DEFAULT         reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    CASE            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    CORCHETE_CIERRA reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 169

    (89) expresion -> expresion MENORIGUAL expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    SWITCH          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    MAIN            reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    FUNC            reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    VAR             reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    STRING          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    INT             reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    DOUBLE          reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    CHAR            reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    BOOLEAN         reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    DEFAULT         reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    CASE            reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    CORCHETE_CIERRA reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109

  ! MAS             [ reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 89 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 110 ]
  ! DIREFENCIACION  [ shift and go to state 111 ]
  ! MAYORQ          [ shift and go to state 112 ]
  ! MENORQ          [ shift and go to state 113 ]
  ! MAYORIGUAL      [ shift and go to state 114 ]
  ! MENORIGUAL      [ shift and go to state 115 ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 170

    (90) expresion -> expresion OR expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    OR              reduce using rule 90 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion OR expresion .)
    error           reduce using rule 90 (expresion -> expresion OR expresion .)
    IDENTIFICADOR   reduce using rule 90 (expresion -> expresion OR expresion .)
    IF              reduce using rule 90 (expresion -> expresion OR expresion .)
    SWITCH          reduce using rule 90 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 90 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 90 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 90 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 90 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 90 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 90 (expresion -> expresion OR expresion .)
    MAIN            reduce using rule 90 (expresion -> expresion OR expresion .)
    FUNC            reduce using rule 90 (expresion -> expresion OR expresion .)
    VAR             reduce using rule 90 (expresion -> expresion OR expresion .)
    STRING          reduce using rule 90 (expresion -> expresion OR expresion .)
    INT             reduce using rule 90 (expresion -> expresion OR expresion .)
    DOUBLE          reduce using rule 90 (expresion -> expresion OR expresion .)
    CHAR            reduce using rule 90 (expresion -> expresion OR expresion .)
    BOOLEAN         reduce using rule 90 (expresion -> expresion OR expresion .)
    $end            reduce using rule 90 (expresion -> expresion OR expresion .)
    LLAVE_CIERRA    reduce using rule 90 (expresion -> expresion OR expresion .)
    DEFAULT         reduce using rule 90 (expresion -> expresion OR expresion .)
    CASE            reduce using rule 90 (expresion -> expresion OR expresion .)
    PARENTESIS_CIERRA reduce using rule 90 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 90 (expresion -> expresion OR expresion .)
    CORCHETE_CIERRA reduce using rule 90 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 90 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 116 ]


state 171

    (91) expresion -> expresion AND expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    OR              reduce using rule 91 (expresion -> expresion AND expresion .)
    AND             reduce using rule 91 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion AND expresion .)
    error           reduce using rule 91 (expresion -> expresion AND expresion .)
    IDENTIFICADOR   reduce using rule 91 (expresion -> expresion AND expresion .)
    IF              reduce using rule 91 (expresion -> expresion AND expresion .)
    SWITCH          reduce using rule 91 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 91 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 91 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 91 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 91 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 91 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 91 (expresion -> expresion AND expresion .)
    MAIN            reduce using rule 91 (expresion -> expresion AND expresion .)
    FUNC            reduce using rule 91 (expresion -> expresion AND expresion .)
    VAR             reduce using rule 91 (expresion -> expresion AND expresion .)
    STRING          reduce using rule 91 (expresion -> expresion AND expresion .)
    INT             reduce using rule 91 (expresion -> expresion AND expresion .)
    DOUBLE          reduce using rule 91 (expresion -> expresion AND expresion .)
    CHAR            reduce using rule 91 (expresion -> expresion AND expresion .)
    BOOLEAN         reduce using rule 91 (expresion -> expresion AND expresion .)
    $end            reduce using rule 91 (expresion -> expresion AND expresion .)
    LLAVE_CIERRA    reduce using rule 91 (expresion -> expresion AND expresion .)
    DEFAULT         reduce using rule 91 (expresion -> expresion AND expresion .)
    CASE            reduce using rule 91 (expresion -> expresion AND expresion .)
    PARENTESIS_CIERRA reduce using rule 91 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 91 (expresion -> expresion AND expresion .)
    CORCHETE_CIERRA reduce using rule 91 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115

  ! MAS             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 91 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 116 ]
  ! AND             [ shift and go to state 117 ]


state 172

    (96) expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 96 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 173

    (111) expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 208
    llamada_fvoid                  shift and go to state 71

state 174

    (112) expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 209
    llamada_fvoid                  shift and go to state 71

state 175

    (113) expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 210
    llamada_fvoid                  shift and go to state 71

state 176

    (114) expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 211
    llamada_fvoid                  shift and go to state 71

state 177

    (115) expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 212
    llamada_fvoid                  shift and go to state 71

state 178

    (105) expresion -> TOUPPER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 213
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 179

    (106) expresion -> TOLOWER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 214
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 180

    (107) expresion -> TRUNCATE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 215
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 181

    (108) expresion -> ROUND PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 216
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 182

    (109) expresion -> TYPEOF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 217
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 183

    (110) expresion -> LENGHT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 218
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 184

    (117) expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .

    MAS             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    STRING          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    INT             reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CHAR            reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 117 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 185

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 219
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 186

    (64) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 220


state 187

    (65) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (66) parametros -> parametros . COMA parametro

    PARENTESIS_CIERRA shift and go to state 221
    COMA            shift and go to state 222


state 188

    (67) parametros -> parametro .

    PARENTESIS_CIERRA reduce using rule 67 (parametros -> parametro .)
    COMA            reduce using rule 67 (parametros -> parametro .)


state 189

    (68) parametro -> INT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 223


state 190

    (69) parametro -> STRING . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 224


state 191

    (70) parametro -> DOUBLE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 225


state 192

    (71) parametro -> BOOLEAN . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 226


state 193

    (72) parametro -> CHAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 227


state 194

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL . NEW tip lista_expresiones

    NEW             shift and go to state 228


state 195

    (50) lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .

    IDENTIFICADOR   reduce using rule 50 (lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 50 (lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .)


state 196

    (20) variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    STRING          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    INT             reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DOUBLE          reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CHAR            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BOOLEAN         reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 20 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)


state 197

    (21) variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    STRING          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    INT             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DOUBLE          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CHAR            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BOOLEAN         reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)


state 198

    (61) parametros_llamada -> parametros_llamada COMA parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 61 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)
    COMA            reduce using rule 61 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)


state 199

    (52) lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .

    IGUAL           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAS             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENOS           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POR             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIV             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POT             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MODULO          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IGUALACION      reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIREFENCIACION  reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORQ          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORQ          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORIGUAL      reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORIGUAL      reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    OR              reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    AND             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PTCOMA          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    error           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IDENTIFICADOR   reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IF              reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    SWITCH          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    WHILE           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FOR             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PRINT           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BREAK           reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CONTINUE        reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    RETURN          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAIN            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FUNC            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    VAR             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    STRING          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    INT             reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOUBLE          reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CHAR            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BOOLEAN         reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    $end            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DEFAULT         reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CASE            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    COMA            reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_CIERRA reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOSPUNTOS       reduce using rule 52 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)


state 200

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 229
    if                             shift and go to state 5
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 201

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases default LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . default LLAVE_CIERRA
    (33) listacases -> . listacases case
    (34) listacases -> . case
    (36) default -> . DEFAULT DOSPUNTOS instrucciones
    (35) case -> . CASE expresion DOSPUNTOS instrucciones

    DEFAULT         shift and go to state 233
    CASE            shift and go to state 234

    listacases                     shift and go to state 230
    default                        shift and go to state 231
    case                           shift and go to state 232

state 202

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 235
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 203

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 236
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 204

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 237
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 205

    (41) declaracionfor1 -> VAR IDENTIFICADOR IGUAL . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 238
    llamada_fvoid                  shift and go to state 71

state 206

    (42) declaracionfor2 -> IDENTIFICADOR IGUAL expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 42 (declaracionfor2 -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 207

    (73) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .

    error           reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IDENTIFICADOR   reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IF              reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    SWITCH          reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    WHILE           reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FOR             reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    PRINT           reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BREAK           reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CONTINUE        reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    RETURN          reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    MAIN            reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FUNC            reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    VAR             reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    STRING          reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    INT             reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DOUBLE          reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CHAR            reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BOOLEAN         reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    $end            reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    LLAVE_CIERRA    reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DEFAULT         reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CASE            reduce using rule 73 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)


state 208

    (111) expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    error           reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 111 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]


state 209

    (112) expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    error           reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 112 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]


state 210

    (113) expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    error           reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 113 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]


state 211

    (114) expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    error           reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 114 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]


state 212

    (115) expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    error           reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117

  ! MAS             [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 115 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]


state 213

    (105) expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 105 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 214

    (106) expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 106 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 215

    (107) expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 107 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 216

    (108) expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 108 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 217

    (109) expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 109 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 218

    (110) expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 110 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 219

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 239
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 220

    (64) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 240
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 221

    (65) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 241


state 222

    (66) parametros -> parametros COMA . parametro
    (68) parametro -> . INT IDENTIFICADOR
    (69) parametro -> . STRING IDENTIFICADOR
    (70) parametro -> . DOUBLE IDENTIFICADOR
    (71) parametro -> . BOOLEAN IDENTIFICADOR
    (72) parametro -> . CHAR IDENTIFICADOR

    INT             shift and go to state 189
    STRING          shift and go to state 190
    DOUBLE          shift and go to state 191
    BOOLEAN         shift and go to state 192
    CHAR            shift and go to state 193

    parametro                      shift and go to state 242

state 223

    (68) parametro -> INT IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 68 (parametro -> INT IDENTIFICADOR .)
    COMA            reduce using rule 68 (parametro -> INT IDENTIFICADOR .)


state 224

    (69) parametro -> STRING IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 69 (parametro -> STRING IDENTIFICADOR .)
    COMA            reduce using rule 69 (parametro -> STRING IDENTIFICADOR .)


state 225

    (70) parametro -> DOUBLE IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 70 (parametro -> DOUBLE IDENTIFICADOR .)
    COMA            reduce using rule 70 (parametro -> DOUBLE IDENTIFICADOR .)


state 226

    (71) parametro -> BOOLEAN IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 71 (parametro -> BOOLEAN IDENTIFICADOR .)
    COMA            reduce using rule 71 (parametro -> BOOLEAN IDENTIFICADOR .)


state 227

    (72) parametro -> CHAR IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 72 (parametro -> CHAR IDENTIFICADOR .)
    COMA            reduce using rule 72 (parametro -> CHAR IDENTIFICADOR .)


state 228

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW . tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    tip                            shift and go to state 243

state 229

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 244
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    if                             shift and go to state 5
    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 230

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . LLAVE_CIERRA
    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . default LLAVE_CIERRA
    (33) listacases -> listacases . case
    (36) default -> . DEFAULT DOSPUNTOS instrucciones
    (35) case -> . CASE expresion DOSPUNTOS instrucciones

    LLAVE_CIERRA    shift and go to state 245
    DEFAULT         shift and go to state 233
    CASE            shift and go to state 234

    default                        shift and go to state 246
    case                           shift and go to state 247

state 231

    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 248


state 232

    (34) listacases -> case .

    LLAVE_CIERRA    reduce using rule 34 (listacases -> case .)
    DEFAULT         reduce using rule 34 (listacases -> case .)
    CASE            reduce using rule 34 (listacases -> case .)


state 233

    (36) default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 249


state 234

    (35) case -> CASE . expresion DOSPUNTOS instrucciones
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 250
    llamada_fvoid                  shift and go to state 71

state 235

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 251
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 236

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (43) actualizacion -> . IDENTIFICADOR INCREMENTO
    (44) actualizacion -> . IDENTIFICADOR DECREMENTO
    (45) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 253

    actualizacion                  shift and go to state 252

state 237

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (43) actualizacion -> . IDENTIFICADOR INCREMENTO
    (44) actualizacion -> . IDENTIFICADOR DECREMENTO
    (45) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 253

    actualizacion                  shift and go to state 254

state 238

    (41) declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 41 (declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 239

    (37) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 37 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 240

    (64) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 255
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 241

    (65) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 256
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 242

    (66) parametros -> parametros COMA parametro .

    PARENTESIS_CIERRA reduce using rule 66 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 66 (parametros -> parametros COMA parametro .)


state 243

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip . lista_expresiones
    (52) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (53) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    CORCHETE_ABRE   shift and go to state 52

    lista_expresiones              shift and go to state 257

state 244

    (27) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .
    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE if

    error           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 27 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ELSE            shift and go to state 258


state 245

    (30) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .

    error           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IF              reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    SWITCH          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    WHILE           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FOR             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    PRINT           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BREAK           reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CONTINUE        reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    RETURN          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    MAIN            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FUNC            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    VAR             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    STRING          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    INT             reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DOUBLE          reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CHAR            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    $end            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DEFAULT         reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CASE            reduce using rule 30 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)


state 246

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 259


state 247

    (33) listacases -> listacases case .

    LLAVE_CIERRA    reduce using rule 33 (listacases -> listacases case .)
    DEFAULT         reduce using rule 33 (listacases -> listacases case .)
    CASE            reduce using rule 33 (listacases -> listacases case .)


state 248

    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .

    error           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IF              reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    SWITCH          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    WHILE           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FOR             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    PRINT           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BREAK           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    RETURN          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    MAIN            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FUNC            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    VAR             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    STRING          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    INT             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DOUBLE          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CHAR            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    $end            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CASE            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)


state 249

    (36) default -> DEFAULT DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 260
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 250

    (35) case -> CASE expresion . DOSPUNTOS instrucciones
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    DOSPUNTOS       shift and go to state 261
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 251

    (38) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 38 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 252

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 262


state 253

    (43) actualizacion -> IDENTIFICADOR . INCREMENTO
    (44) actualizacion -> IDENTIFICADOR . DECREMENTO
    (45) actualizacion -> IDENTIFICADOR . IGUAL expresion

    INCREMENTO      shift and go to state 263
    DECREMENTO      shift and go to state 264
    IGUAL           shift and go to state 265


state 254

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 266


state 255

    (64) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 64 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 256

    (65) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 267
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 257

    (49) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .
    (52) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    PTCOMA          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    error           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    IDENTIFICADOR   reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    IF              reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    SWITCH          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    WHILE           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    FOR             reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    PRINT           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    BREAK           reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CONTINUE        reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    RETURN          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    MAIN            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    FUNC            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    VAR             reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    STRING          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    INT             reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    DOUBLE          reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CHAR            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    BOOLEAN         reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    $end            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    LLAVE_CIERRA    reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    DEFAULT         reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CASE            reduce using rule 49 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CORCHETE_ABRE   shift and go to state 94


state 258

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . if
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 268
    IF              shift and go to state 21

    if                             shift and go to state 269

state 259

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .

    error           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IF              reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    SWITCH          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    WHILE           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FOR             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    PRINT           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BREAK           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    RETURN          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    MAIN            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FUNC            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    VAR             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    STRING          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    INT             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DOUBLE          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CHAR            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    $end            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CASE            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)


state 260

    (36) default -> DEFAULT DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    reduce using rule 36 (default -> DEFAULT DOSPUNTOS instrucciones .)
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 261

    (35) case -> CASE expresion DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 270
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 262

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 271


state 263

    (43) actualizacion -> IDENTIFICADOR INCREMENTO .

    PARENTESIS_CIERRA reduce using rule 43 (actualizacion -> IDENTIFICADOR INCREMENTO .)


state 264

    (44) actualizacion -> IDENTIFICADOR DECREMENTO .

    PARENTESIS_CIERRA reduce using rule 44 (actualizacion -> IDENTIFICADOR DECREMENTO .)


state 265

    (45) actualizacion -> IDENTIFICADOR IGUAL . expresion
    (78) expresion -> . expresion MAS expresion
    (79) expresion -> . expresion MENOS expresion
    (80) expresion -> . expresion POR expresion
    (81) expresion -> . expresion DIV expresion
    (82) expresion -> . expresion POT expresion
    (83) expresion -> . expresion MODULO expresion
    (84) expresion -> . expresion IGUALACION expresion
    (85) expresion -> . expresion DIREFENCIACION expresion
    (86) expresion -> . expresion MAYORQ expresion
    (87) expresion -> . expresion MENORQ expresion
    (88) expresion -> . expresion MAYORIGUAL expresion
    (89) expresion -> . expresion MENORIGUAL expresion
    (90) expresion -> . expresion OR expresion
    (91) expresion -> . expresion AND expresion
    (92) expresion -> . MENOS expresion
    (93) expresion -> . NOT expresion
    (94) expresion -> . IDENTIFICADOR INCREMENTO
    (95) expresion -> . IDENTIFICADOR DECREMENTO
    (96) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (97) expresion -> . ENTERO
    (98) expresion -> . DECIMAL
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE
    (101) expresion -> . IDENTIFICADOR
    (102) expresion -> . CADENA
    (103) expresion -> . CHART
    (104) expresion -> . llamada_fvoid
    (105) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (107) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (108) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (109) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (110) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (111) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (112) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (113) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (114) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (115) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (116) expresion -> . IDENTIFICADOR lista_expresiones
    (117) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 61
    NOT             shift and go to state 62
    IDENTIFICADOR   shift and go to state 63
    PARENTESIS_ABRE shift and go to state 64
    ENTERO          shift and go to state 65
    DECIMAL         shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    CADENA          shift and go to state 69
    CHART           shift and go to state 70
    TOUPPER         shift and go to state 72
    TOLOWER         shift and go to state 73
    TRUNCATE        shift and go to state 74
    ROUND           shift and go to state 75
    TYPEOF          shift and go to state 76
    LENGHT          shift and go to state 77
    READ            shift and go to state 78

    expresion                      shift and go to state 272
    llamada_fvoid                  shift and go to state 71

state 266

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 273


state 267

    (65) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 65 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 268

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 274
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 269

    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .

    error           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IDENTIFICADOR   reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IF              reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    SWITCH          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    WHILE           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FOR             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    PRINT           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BREAK           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CONTINUE        reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    RETURN          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    MAIN            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FUNC            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    VAR             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    STRING          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    INT             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DOUBLE          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CHAR            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BOOLEAN         reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    $end            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    LLAVE_CIERRA    reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DEFAULT         reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CASE            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)


state 270

    (35) case -> CASE expresion DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    reduce using rule 35 (case -> CASE expresion DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 35 (case -> CASE expresion DOSPUNTOS instrucciones .)
    CASE            reduce using rule 35 (case -> CASE expresion DOSPUNTOS instrucciones .)
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 271

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 275
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 272

    (45) actualizacion -> IDENTIFICADOR IGUAL expresion .
    (78) expresion -> expresion . MAS expresion
    (79) expresion -> expresion . MENOS expresion
    (80) expresion -> expresion . POR expresion
    (81) expresion -> expresion . DIV expresion
    (82) expresion -> expresion . POT expresion
    (83) expresion -> expresion . MODULO expresion
    (84) expresion -> expresion . IGUALACION expresion
    (85) expresion -> expresion . DIREFENCIACION expresion
    (86) expresion -> expresion . MAYORQ expresion
    (87) expresion -> expresion . MENORQ expresion
    (88) expresion -> expresion . MAYORIGUAL expresion
    (89) expresion -> expresion . MENORIGUAL expresion
    (90) expresion -> expresion . OR expresion
    (91) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 45 (actualizacion -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 104
    MENOS           shift and go to state 105
    POR             shift and go to state 106
    DIV             shift and go to state 107
    POT             shift and go to state 108
    MODULO          shift and go to state 109
    IGUALACION      shift and go to state 110
    DIREFENCIACION  shift and go to state 111
    MAYORQ          shift and go to state 112
    MENORQ          shift and go to state 113
    MAYORIGUAL      shift and go to state 114
    MENORIGUAL      shift and go to state 115
    OR              shift and go to state 116
    AND             shift and go to state 117


state 273

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instrucciones                  shift and go to state 276
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 274

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 277
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 275

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 278
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 276

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . error PTCOMA
    (19) variables -> . var IDENTIFICADOR finInstruccion
    (20) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (22) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (25) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (26) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (27) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (30) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (38) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (39) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (74) break -> . BREAK finInstruccion
    (75) continue -> . CONTINUE finInstruccion
    (60) returnn -> . RETURN expresion
    (37) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (64) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (65) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (46) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (48) declArr_instr -> . tipo1
    (59) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (24) var -> . VAR
    (49) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (54) tip -> . STRING
    (55) tip -> . INT
    (56) tip -> . DOUBLE
    (57) tip -> . CHAR
    (58) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 279
    error           shift and go to state 18
    IDENTIFICADOR   shift and go to state 20
    IF              shift and go to state 21
    SWITCH          shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    PRINT           shift and go to state 25
    BREAK           shift and go to state 26
    CONTINUE        shift and go to state 27
    RETURN          shift and go to state 28
    MAIN            shift and go to state 29
    FUNC            shift and go to state 30
    VAR             shift and go to state 32
    STRING          shift and go to state 34
    INT             shift and go to state 35
    DOUBLE          shift and go to state 36
    CHAR            shift and go to state 37
    BOOLEAN         shift and go to state 38

    instruccion                    shift and go to state 39
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    var                            shift and go to state 19
    tipo1                          shift and go to state 31
    tip                            shift and go to state 33

state 277

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 278

    (39) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 39 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 279

    (40) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 208 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 208 resolved as shift
WARNING: shift/reduce conflict for POR in state 208 resolved as shift
WARNING: shift/reduce conflict for DIV in state 208 resolved as shift
WARNING: shift/reduce conflict for POT in state 208 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 208 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 208 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 208 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 208 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 208 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for OR in state 208 resolved as shift
WARNING: shift/reduce conflict for AND in state 208 resolved as shift
WARNING: shift/reduce conflict for MAS in state 209 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 209 resolved as shift
WARNING: shift/reduce conflict for POR in state 209 resolved as shift
WARNING: shift/reduce conflict for DIV in state 209 resolved as shift
WARNING: shift/reduce conflict for POT in state 209 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 209 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 209 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 209 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 209 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 209 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 209 resolved as shift
WARNING: shift/reduce conflict for OR in state 209 resolved as shift
WARNING: shift/reduce conflict for AND in state 209 resolved as shift
WARNING: shift/reduce conflict for MAS in state 210 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 210 resolved as shift
WARNING: shift/reduce conflict for POR in state 210 resolved as shift
WARNING: shift/reduce conflict for DIV in state 210 resolved as shift
WARNING: shift/reduce conflict for POT in state 210 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 210 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 210 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 210 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 210 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 210 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 210 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 210 resolved as shift
WARNING: shift/reduce conflict for OR in state 210 resolved as shift
WARNING: shift/reduce conflict for AND in state 210 resolved as shift
WARNING: shift/reduce conflict for MAS in state 211 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 211 resolved as shift
WARNING: shift/reduce conflict for POR in state 211 resolved as shift
WARNING: shift/reduce conflict for DIV in state 211 resolved as shift
WARNING: shift/reduce conflict for POT in state 211 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 211 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 211 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 211 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for OR in state 211 resolved as shift
WARNING: shift/reduce conflict for AND in state 211 resolved as shift
WARNING: shift/reduce conflict for MAS in state 212 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 212 resolved as shift
WARNING: shift/reduce conflict for POR in state 212 resolved as shift
WARNING: shift/reduce conflict for DIV in state 212 resolved as shift
WARNING: shift/reduce conflict for POT in state 212 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 212 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 212 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 212 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 212 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 212 resolved as shift
WARNING: shift/reduce conflict for OR in state 212 resolved as shift
WARNING: shift/reduce conflict for AND in state 212 resolved as shift
