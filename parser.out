Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMILLAS
    COMILLASIMPLE
    CORCHETE_ABRE
    CORCHETE_CIERRA
    ESPBARRAINVERTIVA
    ESPCOMILLAS
    ESPCOMILLASIMPLE
    ESPLINEA
    ESPRETORNO
    ESPTAB
    NEW
    READ
    RETURN
    TOLOWER
    TOUPPER

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> variables
Rule 5     instruccion -> if
Rule 6     instruccion -> switch
Rule 7     instruccion -> while
Rule 8     instruccion -> for
Rule 9     instruccion -> funciones
Rule 10    instruccion -> print
Rule 11    instruccion -> break
Rule 12    instruccion -> main
Rule 13    instruccion -> error PTCOMA
Rule 14    variables -> var IDENTIFICADOR finInstruccion
Rule 15    variables -> var IDENTIFICADOR IGUAL expresion finInstruccion
Rule 16    variables -> var IDENTIFICADOR IGUAL NULL finInstruccion
Rule 17    variables -> IDENTIFICADOR IGUAL expresion finInstruccion
Rule 18    variables -> IDENTIFICADOR IGUAL NULL finInstruccion
Rule 19    var -> VAR
Rule 20    variables -> IDENTIFICADOR INCREMENTO finInstruccion
Rule 21    variables -> IDENTIFICADOR DECREMENTO finInstruccion
Rule 22    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 23    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 24    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
Rule 25    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
Rule 26    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
Rule 27    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
Rule 28    listacases -> listacases case
Rule 29    listacases -> case
Rule 30    case -> CASE expresion DOSPUNTOS instrucciones
Rule 31    default -> DEFAULT DOSPUNTOS instrucciones
Rule 32    main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 33    while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 34    for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 35    for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 36    declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion
Rule 37    declaracionfor2 -> IDENTIFICADOR IGUAL expresion
Rule 38    actualizacion -> IDENTIFICADOR INCREMENTO
Rule 39    actualizacion -> IDENTIFICADOR DECREMENTO
Rule 40    actualizacion -> IDENTIFICADOR IGUAL expresion
Rule 41    funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
Rule 42    parametrosf -> STRING IDENTIFICADOR COMA parametrosf
Rule 43    parametrosf -> STRING IDENTIFICADOR
Rule 44    parametrosf -> INT IDENTIFICADOR COMA parametrosf
Rule 45    parametrosf -> INT IDENTIFICADOR
Rule 46    parametrosf -> CHAR IDENTIFICADOR COMA parametrosf
Rule 47    parametrosf -> CHAR IDENTIFICADOR
Rule 48    parametrosf -> DOUBLE IDENTIFICADOR COMA parametrosf
Rule 49    parametrosf -> DOUBLE IDENTIFICADOR
Rule 50    print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
Rule 51    break -> BREAK finInstruccion
Rule 52    finInstruccion -> PTCOMA
Rule 53    finInstruccion -> <empty>
Rule 54    expresion -> expresion MAS expresion
Rule 55    expresion -> expresion MENOS expresion
Rule 56    expresion -> expresion POR expresion
Rule 57    expresion -> expresion DIV expresion
Rule 58    expresion -> expresion POT expresion
Rule 59    expresion -> expresion MODULO expresion
Rule 60    expresion -> expresion IGUALACION expresion
Rule 61    expresion -> expresion DIREFENCIACION expresion
Rule 62    expresion -> expresion MAYORQ expresion
Rule 63    expresion -> expresion MENORQ expresion
Rule 64    expresion -> expresion MAYORIGUAL expresion
Rule 65    expresion -> expresion MENORIGUAL expresion
Rule 66    expresion -> expresion OR expresion
Rule 67    expresion -> expresion AND expresion
Rule 68    expresion -> MENOS expresion
Rule 69    expresion -> NOT expresion
Rule 70    expresion -> IDENTIFICADOR INCREMENTO
Rule 71    expresion -> IDENTIFICADOR DECREMENTO
Rule 72    expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 73    expresion -> ENTERO
Rule 74    expresion -> DECIMAL
Rule 75    expresion -> TRUE
Rule 76    expresion -> FALSE
Rule 77    expresion -> IDENTIFICADOR
Rule 78    expresion -> CADENA
Rule 79    expresion -> CHART

Terminals, with rules where they appear

AND                  : 67
BREAK                : 51
CADENA               : 78
CASE                 : 30
CHAR                 : 46 47
CHART                : 79
COMA                 : 42 44 46 48
COMILLAS             : 
COMILLASIMPLE        : 
CORCHETE_ABRE        : 
CORCHETE_CIERRA      : 
DECIMAL              : 74
DECREMENTO           : 21 39 71
DEFAULT              : 31
DIREFENCIACION       : 61
DIV                  : 57
DOSPUNTOS            : 30 31
DOUBLE               : 48 49
ELSE                 : 23 24
ENTERO               : 73
ESPBARRAINVERTIVA    : 
ESPCOMILLAS          : 
ESPCOMILLASIMPLE     : 
ESPLINEA             : 
ESPRETORNO           : 
ESPTAB               : 
FALSE                : 76
FOR                  : 34 35
FUNC                 : 41
IDENTIFICADOR        : 14 15 16 17 18 20 21 36 37 38 39 40 41 42 43 44 45 46 47 48 49 70 71 77
IF                   : 22 23 24
IGUAL                : 15 16 17 18 36 37 40
IGUALACION           : 60
INCREMENTO           : 20 38 70
INT                  : 44 45
LLAVE_ABRE           : 22 23 23 24 25 26 27 32 33 34 35 41
LLAVE_CIERRA         : 22 23 23 24 25 26 27 32 33 34 35 41
MAIN                 : 32
MAS                  : 54
MAYORIGUAL           : 64
MAYORQ               : 62
MENORIGUAL           : 65
MENORQ               : 63
MENOS                : 55 68
MODULO               : 59
NEW                  : 
NOT                  : 69
NULL                 : 16 18
OR                   : 66
PARENTESIS_ABRE      : 22 23 24 25 26 27 32 33 34 35 41 50 72
PARENTESIS_CIERRA    : 22 23 24 25 26 27 32 33 34 35 41 50 72
POR                  : 56
POT                  : 58
PRINT                : 50
PTCOMA               : 13 34 34 35 35 52
READ                 : 
RETURN               : 
STRING               : 42 43
SWITCH               : 25 26 27
TOLOWER              : 
TOUPPER              : 
TRUE                 : 75
VAR                  : 19 36
WHILE                : 33
error                : 13

Nonterminals, with rules where they appear

actualizacion        : 34 35
break                : 11
case                 : 28 29
declaracionfor1      : 34
declaracionfor2      : 35
default              : 26 27
expresion            : 15 17 22 23 24 25 26 27 30 33 34 35 36 37 40 50 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 69 72
finInstruccion       : 14 15 16 17 18 20 21 50 51
for                  : 8
funciones            : 9
if                   : 5 24
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 22 23 23 24 30 31 32 33 34 35
listacases           : 25 26 28
main                 : 12
parametrosf          : 41 42 44 46 48
print                : 10
switch               : 6
var                  : 14 15 16
variables            : 4
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    $end            reduce using rule 1 (init -> instrucciones .)
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 3

    (3) instrucciones -> instruccion .

    error           reduce using rule 3 (instrucciones -> instruccion .)
    IDENTIFICADOR   reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    FUNC            reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVE_CIERRA    reduce using rule 3 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 3 (instrucciones -> instruccion .)
    CASE            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> variables .

    error           reduce using rule 4 (instruccion -> variables .)
    IDENTIFICADOR   reduce using rule 4 (instruccion -> variables .)
    IF              reduce using rule 4 (instruccion -> variables .)
    SWITCH          reduce using rule 4 (instruccion -> variables .)
    WHILE           reduce using rule 4 (instruccion -> variables .)
    FOR             reduce using rule 4 (instruccion -> variables .)
    FUNC            reduce using rule 4 (instruccion -> variables .)
    PRINT           reduce using rule 4 (instruccion -> variables .)
    BREAK           reduce using rule 4 (instruccion -> variables .)
    MAIN            reduce using rule 4 (instruccion -> variables .)
    VAR             reduce using rule 4 (instruccion -> variables .)
    $end            reduce using rule 4 (instruccion -> variables .)
    LLAVE_CIERRA    reduce using rule 4 (instruccion -> variables .)
    DEFAULT         reduce using rule 4 (instruccion -> variables .)
    CASE            reduce using rule 4 (instruccion -> variables .)


state 5

    (5) instruccion -> if .

    error           reduce using rule 5 (instruccion -> if .)
    IDENTIFICADOR   reduce using rule 5 (instruccion -> if .)
    IF              reduce using rule 5 (instruccion -> if .)
    SWITCH          reduce using rule 5 (instruccion -> if .)
    WHILE           reduce using rule 5 (instruccion -> if .)
    FOR             reduce using rule 5 (instruccion -> if .)
    FUNC            reduce using rule 5 (instruccion -> if .)
    PRINT           reduce using rule 5 (instruccion -> if .)
    BREAK           reduce using rule 5 (instruccion -> if .)
    MAIN            reduce using rule 5 (instruccion -> if .)
    VAR             reduce using rule 5 (instruccion -> if .)
    $end            reduce using rule 5 (instruccion -> if .)
    LLAVE_CIERRA    reduce using rule 5 (instruccion -> if .)
    DEFAULT         reduce using rule 5 (instruccion -> if .)
    CASE            reduce using rule 5 (instruccion -> if .)


state 6

    (6) instruccion -> switch .

    error           reduce using rule 6 (instruccion -> switch .)
    IDENTIFICADOR   reduce using rule 6 (instruccion -> switch .)
    IF              reduce using rule 6 (instruccion -> switch .)
    SWITCH          reduce using rule 6 (instruccion -> switch .)
    WHILE           reduce using rule 6 (instruccion -> switch .)
    FOR             reduce using rule 6 (instruccion -> switch .)
    FUNC            reduce using rule 6 (instruccion -> switch .)
    PRINT           reduce using rule 6 (instruccion -> switch .)
    BREAK           reduce using rule 6 (instruccion -> switch .)
    MAIN            reduce using rule 6 (instruccion -> switch .)
    VAR             reduce using rule 6 (instruccion -> switch .)
    $end            reduce using rule 6 (instruccion -> switch .)
    LLAVE_CIERRA    reduce using rule 6 (instruccion -> switch .)
    DEFAULT         reduce using rule 6 (instruccion -> switch .)
    CASE            reduce using rule 6 (instruccion -> switch .)


state 7

    (7) instruccion -> while .

    error           reduce using rule 7 (instruccion -> while .)
    IDENTIFICADOR   reduce using rule 7 (instruccion -> while .)
    IF              reduce using rule 7 (instruccion -> while .)
    SWITCH          reduce using rule 7 (instruccion -> while .)
    WHILE           reduce using rule 7 (instruccion -> while .)
    FOR             reduce using rule 7 (instruccion -> while .)
    FUNC            reduce using rule 7 (instruccion -> while .)
    PRINT           reduce using rule 7 (instruccion -> while .)
    BREAK           reduce using rule 7 (instruccion -> while .)
    MAIN            reduce using rule 7 (instruccion -> while .)
    VAR             reduce using rule 7 (instruccion -> while .)
    $end            reduce using rule 7 (instruccion -> while .)
    LLAVE_CIERRA    reduce using rule 7 (instruccion -> while .)
    DEFAULT         reduce using rule 7 (instruccion -> while .)
    CASE            reduce using rule 7 (instruccion -> while .)


state 8

    (8) instruccion -> for .

    error           reduce using rule 8 (instruccion -> for .)
    IDENTIFICADOR   reduce using rule 8 (instruccion -> for .)
    IF              reduce using rule 8 (instruccion -> for .)
    SWITCH          reduce using rule 8 (instruccion -> for .)
    WHILE           reduce using rule 8 (instruccion -> for .)
    FOR             reduce using rule 8 (instruccion -> for .)
    FUNC            reduce using rule 8 (instruccion -> for .)
    PRINT           reduce using rule 8 (instruccion -> for .)
    BREAK           reduce using rule 8 (instruccion -> for .)
    MAIN            reduce using rule 8 (instruccion -> for .)
    VAR             reduce using rule 8 (instruccion -> for .)
    $end            reduce using rule 8 (instruccion -> for .)
    LLAVE_CIERRA    reduce using rule 8 (instruccion -> for .)
    DEFAULT         reduce using rule 8 (instruccion -> for .)
    CASE            reduce using rule 8 (instruccion -> for .)


state 9

    (9) instruccion -> funciones .

    error           reduce using rule 9 (instruccion -> funciones .)
    IDENTIFICADOR   reduce using rule 9 (instruccion -> funciones .)
    IF              reduce using rule 9 (instruccion -> funciones .)
    SWITCH          reduce using rule 9 (instruccion -> funciones .)
    WHILE           reduce using rule 9 (instruccion -> funciones .)
    FOR             reduce using rule 9 (instruccion -> funciones .)
    FUNC            reduce using rule 9 (instruccion -> funciones .)
    PRINT           reduce using rule 9 (instruccion -> funciones .)
    BREAK           reduce using rule 9 (instruccion -> funciones .)
    MAIN            reduce using rule 9 (instruccion -> funciones .)
    VAR             reduce using rule 9 (instruccion -> funciones .)
    $end            reduce using rule 9 (instruccion -> funciones .)
    LLAVE_CIERRA    reduce using rule 9 (instruccion -> funciones .)
    DEFAULT         reduce using rule 9 (instruccion -> funciones .)
    CASE            reduce using rule 9 (instruccion -> funciones .)


state 10

    (10) instruccion -> print .

    error           reduce using rule 10 (instruccion -> print .)
    IDENTIFICADOR   reduce using rule 10 (instruccion -> print .)
    IF              reduce using rule 10 (instruccion -> print .)
    SWITCH          reduce using rule 10 (instruccion -> print .)
    WHILE           reduce using rule 10 (instruccion -> print .)
    FOR             reduce using rule 10 (instruccion -> print .)
    FUNC            reduce using rule 10 (instruccion -> print .)
    PRINT           reduce using rule 10 (instruccion -> print .)
    BREAK           reduce using rule 10 (instruccion -> print .)
    MAIN            reduce using rule 10 (instruccion -> print .)
    VAR             reduce using rule 10 (instruccion -> print .)
    $end            reduce using rule 10 (instruccion -> print .)
    LLAVE_CIERRA    reduce using rule 10 (instruccion -> print .)
    DEFAULT         reduce using rule 10 (instruccion -> print .)
    CASE            reduce using rule 10 (instruccion -> print .)


state 11

    (11) instruccion -> break .

    error           reduce using rule 11 (instruccion -> break .)
    IDENTIFICADOR   reduce using rule 11 (instruccion -> break .)
    IF              reduce using rule 11 (instruccion -> break .)
    SWITCH          reduce using rule 11 (instruccion -> break .)
    WHILE           reduce using rule 11 (instruccion -> break .)
    FOR             reduce using rule 11 (instruccion -> break .)
    FUNC            reduce using rule 11 (instruccion -> break .)
    PRINT           reduce using rule 11 (instruccion -> break .)
    BREAK           reduce using rule 11 (instruccion -> break .)
    MAIN            reduce using rule 11 (instruccion -> break .)
    VAR             reduce using rule 11 (instruccion -> break .)
    $end            reduce using rule 11 (instruccion -> break .)
    LLAVE_CIERRA    reduce using rule 11 (instruccion -> break .)
    DEFAULT         reduce using rule 11 (instruccion -> break .)
    CASE            reduce using rule 11 (instruccion -> break .)


state 12

    (12) instruccion -> main .

    error           reduce using rule 12 (instruccion -> main .)
    IDENTIFICADOR   reduce using rule 12 (instruccion -> main .)
    IF              reduce using rule 12 (instruccion -> main .)
    SWITCH          reduce using rule 12 (instruccion -> main .)
    WHILE           reduce using rule 12 (instruccion -> main .)
    FOR             reduce using rule 12 (instruccion -> main .)
    FUNC            reduce using rule 12 (instruccion -> main .)
    PRINT           reduce using rule 12 (instruccion -> main .)
    BREAK           reduce using rule 12 (instruccion -> main .)
    MAIN            reduce using rule 12 (instruccion -> main .)
    VAR             reduce using rule 12 (instruccion -> main .)
    $end            reduce using rule 12 (instruccion -> main .)
    LLAVE_CIERRA    reduce using rule 12 (instruccion -> main .)
    DEFAULT         reduce using rule 12 (instruccion -> main .)
    CASE            reduce using rule 12 (instruccion -> main .)


state 13

    (13) instruccion -> error . PTCOMA

    PTCOMA          shift and go to state 26


state 14

    (14) variables -> var . IDENTIFICADOR finInstruccion
    (15) variables -> var . IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> var . IDENTIFICADOR IGUAL NULL finInstruccion

    IDENTIFICADOR   shift and go to state 27


state 15

    (17) variables -> IDENTIFICADOR . IGUAL expresion finInstruccion
    (18) variables -> IDENTIFICADOR . IGUAL NULL finInstruccion
    (20) variables -> IDENTIFICADOR . INCREMENTO finInstruccion
    (21) variables -> IDENTIFICADOR . DECREMENTO finInstruccion

    IGUAL           shift and go to state 28
    INCREMENTO      shift and go to state 29
    DECREMENTO      shift and go to state 30


state 16

    (22) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    PARENTESIS_ABRE shift and go to state 31


state 17

    (25) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 32


state 18

    (33) while -> WHILE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 33


state 19

    (34) for -> FOR . PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> FOR . PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 34


state 20

    (41) funciones -> FUNC . IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 35


state 21

    (50) print -> PRINT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion

    PARENTESIS_ABRE shift and go to state 36


state 22

    (51) break -> BREAK . finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 37

state 23

    (32) main -> MAIN . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 39


state 24

    (19) var -> VAR .

    IDENTIFICADOR   reduce using rule 19 (var -> VAR .)


state 25

    (2) instrucciones -> instrucciones instruccion .

    error           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNC            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVE_CIERRA    reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 26

    (13) instruccion -> error PTCOMA .

    error           reduce using rule 13 (instruccion -> error PTCOMA .)
    IDENTIFICADOR   reduce using rule 13 (instruccion -> error PTCOMA .)
    IF              reduce using rule 13 (instruccion -> error PTCOMA .)
    SWITCH          reduce using rule 13 (instruccion -> error PTCOMA .)
    WHILE           reduce using rule 13 (instruccion -> error PTCOMA .)
    FOR             reduce using rule 13 (instruccion -> error PTCOMA .)
    FUNC            reduce using rule 13 (instruccion -> error PTCOMA .)
    PRINT           reduce using rule 13 (instruccion -> error PTCOMA .)
    BREAK           reduce using rule 13 (instruccion -> error PTCOMA .)
    MAIN            reduce using rule 13 (instruccion -> error PTCOMA .)
    VAR             reduce using rule 13 (instruccion -> error PTCOMA .)
    $end            reduce using rule 13 (instruccion -> error PTCOMA .)
    LLAVE_CIERRA    reduce using rule 13 (instruccion -> error PTCOMA .)
    DEFAULT         reduce using rule 13 (instruccion -> error PTCOMA .)
    CASE            reduce using rule 13 (instruccion -> error PTCOMA .)


state 27

    (14) variables -> var IDENTIFICADOR . finInstruccion
    (15) variables -> var IDENTIFICADOR . IGUAL expresion finInstruccion
    (16) variables -> var IDENTIFICADOR . IGUAL NULL finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    IGUAL           shift and go to state 41
    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 40

state 28

    (17) variables -> IDENTIFICADOR IGUAL . expresion finInstruccion
    (18) variables -> IDENTIFICADOR IGUAL . NULL finInstruccion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    NULL            shift and go to state 44
    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 43

state 29

    (20) variables -> IDENTIFICADOR INCREMENTO . finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 54

state 30

    (21) variables -> IDENTIFICADOR DECREMENTO . finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 55

state 31

    (22) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 56

state 32

    (25) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 57

state 33

    (33) while -> WHILE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 58

state 34

    (34) for -> FOR PARENTESIS_ABRE . declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> FOR PARENTESIS_ABRE . declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (36) declaracionfor1 -> . VAR IDENTIFICADOR IGUAL expresion
    (37) declaracionfor2 -> . IDENTIFICADOR IGUAL expresion

    VAR             shift and go to state 61
    IDENTIFICADOR   shift and go to state 62

    declaracionfor1                shift and go to state 59
    declaracionfor2                shift and go to state 60

state 35

    (41) funciones -> FUNC IDENTIFICADOR . PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 63


state 36

    (50) print -> PRINT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA finInstruccion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 64

state 37

    (51) break -> BREAK finInstruccion .

    error           reduce using rule 51 (break -> BREAK finInstruccion .)
    IDENTIFICADOR   reduce using rule 51 (break -> BREAK finInstruccion .)
    IF              reduce using rule 51 (break -> BREAK finInstruccion .)
    SWITCH          reduce using rule 51 (break -> BREAK finInstruccion .)
    WHILE           reduce using rule 51 (break -> BREAK finInstruccion .)
    FOR             reduce using rule 51 (break -> BREAK finInstruccion .)
    FUNC            reduce using rule 51 (break -> BREAK finInstruccion .)
    PRINT           reduce using rule 51 (break -> BREAK finInstruccion .)
    BREAK           reduce using rule 51 (break -> BREAK finInstruccion .)
    MAIN            reduce using rule 51 (break -> BREAK finInstruccion .)
    VAR             reduce using rule 51 (break -> BREAK finInstruccion .)
    $end            reduce using rule 51 (break -> BREAK finInstruccion .)
    LLAVE_CIERRA    reduce using rule 51 (break -> BREAK finInstruccion .)
    DEFAULT         reduce using rule 51 (break -> BREAK finInstruccion .)
    CASE            reduce using rule 51 (break -> BREAK finInstruccion .)


state 38

    (52) finInstruccion -> PTCOMA .

    error           reduce using rule 52 (finInstruccion -> PTCOMA .)
    IDENTIFICADOR   reduce using rule 52 (finInstruccion -> PTCOMA .)
    IF              reduce using rule 52 (finInstruccion -> PTCOMA .)
    SWITCH          reduce using rule 52 (finInstruccion -> PTCOMA .)
    WHILE           reduce using rule 52 (finInstruccion -> PTCOMA .)
    FOR             reduce using rule 52 (finInstruccion -> PTCOMA .)
    FUNC            reduce using rule 52 (finInstruccion -> PTCOMA .)
    PRINT           reduce using rule 52 (finInstruccion -> PTCOMA .)
    BREAK           reduce using rule 52 (finInstruccion -> PTCOMA .)
    MAIN            reduce using rule 52 (finInstruccion -> PTCOMA .)
    VAR             reduce using rule 52 (finInstruccion -> PTCOMA .)
    $end            reduce using rule 52 (finInstruccion -> PTCOMA .)
    LLAVE_CIERRA    reduce using rule 52 (finInstruccion -> PTCOMA .)
    DEFAULT         reduce using rule 52 (finInstruccion -> PTCOMA .)
    CASE            reduce using rule 52 (finInstruccion -> PTCOMA .)


state 39

    (32) main -> MAIN PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 65


state 40

    (14) variables -> var IDENTIFICADOR finInstruccion .

    error           reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    IDENTIFICADOR   reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    IF              reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    SWITCH          reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    WHILE           reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    FOR             reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    FUNC            reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    PRINT           reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    BREAK           reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    MAIN            reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    VAR             reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    $end            reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    LLAVE_CIERRA    reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    DEFAULT         reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)
    CASE            reduce using rule 14 (variables -> var IDENTIFICADOR finInstruccion .)


state 41

    (15) variables -> var IDENTIFICADOR IGUAL . expresion finInstruccion
    (16) variables -> var IDENTIFICADOR IGUAL . NULL finInstruccion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    NULL            shift and go to state 67
    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 66

state 42

    (70) expresion -> IDENTIFICADOR . INCREMENTO
    (71) expresion -> IDENTIFICADOR . DECREMENTO
    (77) expresion -> IDENTIFICADOR .

    INCREMENTO      shift and go to state 68
    DECREMENTO      shift and go to state 69
    MAS             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 77 (expresion -> IDENTIFICADOR .)
    POR             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    POT             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MODULO          reduce using rule 77 (expresion -> IDENTIFICADOR .)
    IGUALACION      reduce using rule 77 (expresion -> IDENTIFICADOR .)
    DIREFENCIACION  reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MAYORQ          reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MENORQ          reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MAYORIGUAL      reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MENORIGUAL      reduce using rule 77 (expresion -> IDENTIFICADOR .)
    OR              reduce using rule 77 (expresion -> IDENTIFICADOR .)
    AND             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    PTCOMA          reduce using rule 77 (expresion -> IDENTIFICADOR .)
    error           reduce using rule 77 (expresion -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 77 (expresion -> IDENTIFICADOR .)
    IF              reduce using rule 77 (expresion -> IDENTIFICADOR .)
    SWITCH          reduce using rule 77 (expresion -> IDENTIFICADOR .)
    WHILE           reduce using rule 77 (expresion -> IDENTIFICADOR .)
    FOR             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    FUNC            reduce using rule 77 (expresion -> IDENTIFICADOR .)
    PRINT           reduce using rule 77 (expresion -> IDENTIFICADOR .)
    BREAK           reduce using rule 77 (expresion -> IDENTIFICADOR .)
    MAIN            reduce using rule 77 (expresion -> IDENTIFICADOR .)
    VAR             reduce using rule 77 (expresion -> IDENTIFICADOR .)
    $end            reduce using rule 77 (expresion -> IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 77 (expresion -> IDENTIFICADOR .)
    DEFAULT         reduce using rule 77 (expresion -> IDENTIFICADOR .)
    CASE            reduce using rule 77 (expresion -> IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 77 (expresion -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 77 (expresion -> IDENTIFICADOR .)


state 43

    (17) variables -> IDENTIFICADOR IGUAL expresion . finInstruccion
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84
    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 70

state 44

    (18) variables -> IDENTIFICADOR IGUAL NULL . finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 85

state 45

    (68) expresion -> MENOS . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 86

state 46

    (69) expresion -> NOT . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 87

state 47

    (72) expresion -> PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 88

state 48

    (73) expresion -> ENTERO .

    MAS             reduce using rule 73 (expresion -> ENTERO .)
    MENOS           reduce using rule 73 (expresion -> ENTERO .)
    POR             reduce using rule 73 (expresion -> ENTERO .)
    DIV             reduce using rule 73 (expresion -> ENTERO .)
    POT             reduce using rule 73 (expresion -> ENTERO .)
    MODULO          reduce using rule 73 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 73 (expresion -> ENTERO .)
    DIREFENCIACION  reduce using rule 73 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 73 (expresion -> ENTERO .)
    MENORQ          reduce using rule 73 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 73 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 73 (expresion -> ENTERO .)
    OR              reduce using rule 73 (expresion -> ENTERO .)
    AND             reduce using rule 73 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 73 (expresion -> ENTERO .)
    error           reduce using rule 73 (expresion -> ENTERO .)
    IDENTIFICADOR   reduce using rule 73 (expresion -> ENTERO .)
    IF              reduce using rule 73 (expresion -> ENTERO .)
    SWITCH          reduce using rule 73 (expresion -> ENTERO .)
    WHILE           reduce using rule 73 (expresion -> ENTERO .)
    FOR             reduce using rule 73 (expresion -> ENTERO .)
    FUNC            reduce using rule 73 (expresion -> ENTERO .)
    PRINT           reduce using rule 73 (expresion -> ENTERO .)
    BREAK           reduce using rule 73 (expresion -> ENTERO .)
    MAIN            reduce using rule 73 (expresion -> ENTERO .)
    VAR             reduce using rule 73 (expresion -> ENTERO .)
    $end            reduce using rule 73 (expresion -> ENTERO .)
    LLAVE_CIERRA    reduce using rule 73 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 73 (expresion -> ENTERO .)
    CASE            reduce using rule 73 (expresion -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 73 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 73 (expresion -> ENTERO .)


state 49

    (74) expresion -> DECIMAL .

    MAS             reduce using rule 74 (expresion -> DECIMAL .)
    MENOS           reduce using rule 74 (expresion -> DECIMAL .)
    POR             reduce using rule 74 (expresion -> DECIMAL .)
    DIV             reduce using rule 74 (expresion -> DECIMAL .)
    POT             reduce using rule 74 (expresion -> DECIMAL .)
    MODULO          reduce using rule 74 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 74 (expresion -> DECIMAL .)
    DIREFENCIACION  reduce using rule 74 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 74 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 74 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 74 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 74 (expresion -> DECIMAL .)
    OR              reduce using rule 74 (expresion -> DECIMAL .)
    AND             reduce using rule 74 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 74 (expresion -> DECIMAL .)
    error           reduce using rule 74 (expresion -> DECIMAL .)
    IDENTIFICADOR   reduce using rule 74 (expresion -> DECIMAL .)
    IF              reduce using rule 74 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 74 (expresion -> DECIMAL .)
    WHILE           reduce using rule 74 (expresion -> DECIMAL .)
    FOR             reduce using rule 74 (expresion -> DECIMAL .)
    FUNC            reduce using rule 74 (expresion -> DECIMAL .)
    PRINT           reduce using rule 74 (expresion -> DECIMAL .)
    BREAK           reduce using rule 74 (expresion -> DECIMAL .)
    MAIN            reduce using rule 74 (expresion -> DECIMAL .)
    VAR             reduce using rule 74 (expresion -> DECIMAL .)
    $end            reduce using rule 74 (expresion -> DECIMAL .)
    LLAVE_CIERRA    reduce using rule 74 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 74 (expresion -> DECIMAL .)
    CASE            reduce using rule 74 (expresion -> DECIMAL .)
    PARENTESIS_CIERRA reduce using rule 74 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 74 (expresion -> DECIMAL .)


state 50

    (75) expresion -> TRUE .

    MAS             reduce using rule 75 (expresion -> TRUE .)
    MENOS           reduce using rule 75 (expresion -> TRUE .)
    POR             reduce using rule 75 (expresion -> TRUE .)
    DIV             reduce using rule 75 (expresion -> TRUE .)
    POT             reduce using rule 75 (expresion -> TRUE .)
    MODULO          reduce using rule 75 (expresion -> TRUE .)
    IGUALACION      reduce using rule 75 (expresion -> TRUE .)
    DIREFENCIACION  reduce using rule 75 (expresion -> TRUE .)
    MAYORQ          reduce using rule 75 (expresion -> TRUE .)
    MENORQ          reduce using rule 75 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 75 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 75 (expresion -> TRUE .)
    OR              reduce using rule 75 (expresion -> TRUE .)
    AND             reduce using rule 75 (expresion -> TRUE .)
    PTCOMA          reduce using rule 75 (expresion -> TRUE .)
    error           reduce using rule 75 (expresion -> TRUE .)
    IDENTIFICADOR   reduce using rule 75 (expresion -> TRUE .)
    IF              reduce using rule 75 (expresion -> TRUE .)
    SWITCH          reduce using rule 75 (expresion -> TRUE .)
    WHILE           reduce using rule 75 (expresion -> TRUE .)
    FOR             reduce using rule 75 (expresion -> TRUE .)
    FUNC            reduce using rule 75 (expresion -> TRUE .)
    PRINT           reduce using rule 75 (expresion -> TRUE .)
    BREAK           reduce using rule 75 (expresion -> TRUE .)
    MAIN            reduce using rule 75 (expresion -> TRUE .)
    VAR             reduce using rule 75 (expresion -> TRUE .)
    $end            reduce using rule 75 (expresion -> TRUE .)
    LLAVE_CIERRA    reduce using rule 75 (expresion -> TRUE .)
    DEFAULT         reduce using rule 75 (expresion -> TRUE .)
    CASE            reduce using rule 75 (expresion -> TRUE .)
    PARENTESIS_CIERRA reduce using rule 75 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 75 (expresion -> TRUE .)


state 51

    (76) expresion -> FALSE .

    MAS             reduce using rule 76 (expresion -> FALSE .)
    MENOS           reduce using rule 76 (expresion -> FALSE .)
    POR             reduce using rule 76 (expresion -> FALSE .)
    DIV             reduce using rule 76 (expresion -> FALSE .)
    POT             reduce using rule 76 (expresion -> FALSE .)
    MODULO          reduce using rule 76 (expresion -> FALSE .)
    IGUALACION      reduce using rule 76 (expresion -> FALSE .)
    DIREFENCIACION  reduce using rule 76 (expresion -> FALSE .)
    MAYORQ          reduce using rule 76 (expresion -> FALSE .)
    MENORQ          reduce using rule 76 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 76 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 76 (expresion -> FALSE .)
    OR              reduce using rule 76 (expresion -> FALSE .)
    AND             reduce using rule 76 (expresion -> FALSE .)
    PTCOMA          reduce using rule 76 (expresion -> FALSE .)
    error           reduce using rule 76 (expresion -> FALSE .)
    IDENTIFICADOR   reduce using rule 76 (expresion -> FALSE .)
    IF              reduce using rule 76 (expresion -> FALSE .)
    SWITCH          reduce using rule 76 (expresion -> FALSE .)
    WHILE           reduce using rule 76 (expresion -> FALSE .)
    FOR             reduce using rule 76 (expresion -> FALSE .)
    FUNC            reduce using rule 76 (expresion -> FALSE .)
    PRINT           reduce using rule 76 (expresion -> FALSE .)
    BREAK           reduce using rule 76 (expresion -> FALSE .)
    MAIN            reduce using rule 76 (expresion -> FALSE .)
    VAR             reduce using rule 76 (expresion -> FALSE .)
    $end            reduce using rule 76 (expresion -> FALSE .)
    LLAVE_CIERRA    reduce using rule 76 (expresion -> FALSE .)
    DEFAULT         reduce using rule 76 (expresion -> FALSE .)
    CASE            reduce using rule 76 (expresion -> FALSE .)
    PARENTESIS_CIERRA reduce using rule 76 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 76 (expresion -> FALSE .)


state 52

    (78) expresion -> CADENA .

    MAS             reduce using rule 78 (expresion -> CADENA .)
    MENOS           reduce using rule 78 (expresion -> CADENA .)
    POR             reduce using rule 78 (expresion -> CADENA .)
    DIV             reduce using rule 78 (expresion -> CADENA .)
    POT             reduce using rule 78 (expresion -> CADENA .)
    MODULO          reduce using rule 78 (expresion -> CADENA .)
    IGUALACION      reduce using rule 78 (expresion -> CADENA .)
    DIREFENCIACION  reduce using rule 78 (expresion -> CADENA .)
    MAYORQ          reduce using rule 78 (expresion -> CADENA .)
    MENORQ          reduce using rule 78 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 78 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 78 (expresion -> CADENA .)
    OR              reduce using rule 78 (expresion -> CADENA .)
    AND             reduce using rule 78 (expresion -> CADENA .)
    PTCOMA          reduce using rule 78 (expresion -> CADENA .)
    error           reduce using rule 78 (expresion -> CADENA .)
    IDENTIFICADOR   reduce using rule 78 (expresion -> CADENA .)
    IF              reduce using rule 78 (expresion -> CADENA .)
    SWITCH          reduce using rule 78 (expresion -> CADENA .)
    WHILE           reduce using rule 78 (expresion -> CADENA .)
    FOR             reduce using rule 78 (expresion -> CADENA .)
    FUNC            reduce using rule 78 (expresion -> CADENA .)
    PRINT           reduce using rule 78 (expresion -> CADENA .)
    BREAK           reduce using rule 78 (expresion -> CADENA .)
    MAIN            reduce using rule 78 (expresion -> CADENA .)
    VAR             reduce using rule 78 (expresion -> CADENA .)
    $end            reduce using rule 78 (expresion -> CADENA .)
    LLAVE_CIERRA    reduce using rule 78 (expresion -> CADENA .)
    DEFAULT         reduce using rule 78 (expresion -> CADENA .)
    CASE            reduce using rule 78 (expresion -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 78 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 78 (expresion -> CADENA .)


state 53

    (79) expresion -> CHART .

    MAS             reduce using rule 79 (expresion -> CHART .)
    MENOS           reduce using rule 79 (expresion -> CHART .)
    POR             reduce using rule 79 (expresion -> CHART .)
    DIV             reduce using rule 79 (expresion -> CHART .)
    POT             reduce using rule 79 (expresion -> CHART .)
    MODULO          reduce using rule 79 (expresion -> CHART .)
    IGUALACION      reduce using rule 79 (expresion -> CHART .)
    DIREFENCIACION  reduce using rule 79 (expresion -> CHART .)
    MAYORQ          reduce using rule 79 (expresion -> CHART .)
    MENORQ          reduce using rule 79 (expresion -> CHART .)
    MAYORIGUAL      reduce using rule 79 (expresion -> CHART .)
    MENORIGUAL      reduce using rule 79 (expresion -> CHART .)
    OR              reduce using rule 79 (expresion -> CHART .)
    AND             reduce using rule 79 (expresion -> CHART .)
    PTCOMA          reduce using rule 79 (expresion -> CHART .)
    error           reduce using rule 79 (expresion -> CHART .)
    IDENTIFICADOR   reduce using rule 79 (expresion -> CHART .)
    IF              reduce using rule 79 (expresion -> CHART .)
    SWITCH          reduce using rule 79 (expresion -> CHART .)
    WHILE           reduce using rule 79 (expresion -> CHART .)
    FOR             reduce using rule 79 (expresion -> CHART .)
    FUNC            reduce using rule 79 (expresion -> CHART .)
    PRINT           reduce using rule 79 (expresion -> CHART .)
    BREAK           reduce using rule 79 (expresion -> CHART .)
    MAIN            reduce using rule 79 (expresion -> CHART .)
    VAR             reduce using rule 79 (expresion -> CHART .)
    $end            reduce using rule 79 (expresion -> CHART .)
    LLAVE_CIERRA    reduce using rule 79 (expresion -> CHART .)
    DEFAULT         reduce using rule 79 (expresion -> CHART .)
    CASE            reduce using rule 79 (expresion -> CHART .)
    PARENTESIS_CIERRA reduce using rule 79 (expresion -> CHART .)
    DOSPUNTOS       reduce using rule 79 (expresion -> CHART .)


state 54

    (20) variables -> IDENTIFICADOR INCREMENTO finInstruccion .

    error           reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IF              reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    SWITCH          reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    WHILE           reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FOR             reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FUNC            reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    PRINT           reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BREAK           reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    MAIN            reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    VAR             reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    $end            reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DEFAULT         reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CASE            reduce using rule 20 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)


state 55

    (21) variables -> IDENTIFICADOR DECREMENTO finInstruccion .

    error           reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IF              reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    SWITCH          reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    WHILE           reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FOR             reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FUNC            reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    PRINT           reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BREAK           reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    MAIN            reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    VAR             reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    $end            reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DEFAULT         reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CASE            reduce using rule 21 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)


state 56

    (22) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 89
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 57

    (25) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 90
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 58

    (33) while -> WHILE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 91
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 59

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 92


state 60

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 93


state 61

    (36) declaracionfor1 -> VAR . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 94


state 62

    (37) declaracionfor2 -> IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 95


state 63

    (41) funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE . parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (42) parametrosf -> . STRING IDENTIFICADOR COMA parametrosf
    (43) parametrosf -> . STRING IDENTIFICADOR
    (44) parametrosf -> . INT IDENTIFICADOR COMA parametrosf
    (45) parametrosf -> . INT IDENTIFICADOR
    (46) parametrosf -> . CHAR IDENTIFICADOR COMA parametrosf
    (47) parametrosf -> . CHAR IDENTIFICADOR
    (48) parametrosf -> . DOUBLE IDENTIFICADOR COMA parametrosf
    (49) parametrosf -> . DOUBLE IDENTIFICADOR

    STRING          shift and go to state 97
    INT             shift and go to state 98
    CHAR            shift and go to state 99
    DOUBLE          shift and go to state 100

    parametrosf                    shift and go to state 96

state 64

    (50) print -> PRINT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA finInstruccion
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 101
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 65

    (32) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 102


state 66

    (15) variables -> var IDENTIFICADOR IGUAL expresion . finInstruccion
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84
    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 103

state 67

    (16) variables -> var IDENTIFICADOR IGUAL NULL . finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 104

state 68

    (70) expresion -> IDENTIFICADOR INCREMENTO .

    MAS             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENOS           reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    POR             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIV             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    POT             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MODULO          reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    IGUALACION      reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIREFENCIACION  reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORQ          reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORQ          reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORIGUAL      reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORIGUAL      reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    OR              reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    AND             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    PTCOMA          reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    error           reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    IDENTIFICADOR   reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    IF              reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    SWITCH          reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    WHILE           reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    FOR             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    FUNC            reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    PRINT           reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    BREAK           reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAIN            reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    VAR             reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    $end            reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    LLAVE_CIERRA    reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    DEFAULT         reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    CASE            reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOSPUNTOS       reduce using rule 70 (expresion -> IDENTIFICADOR INCREMENTO .)


state 69

    (71) expresion -> IDENTIFICADOR DECREMENTO .

    MAS             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENOS           reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    POR             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIV             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    POT             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MODULO          reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    IGUALACION      reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIREFENCIACION  reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORQ          reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORQ          reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORIGUAL      reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORIGUAL      reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    OR              reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    AND             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    PTCOMA          reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    error           reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    IDENTIFICADOR   reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    IF              reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    SWITCH          reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    WHILE           reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    FOR             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    FUNC            reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    PRINT           reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    BREAK           reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAIN            reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    VAR             reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    $end            reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    LLAVE_CIERRA    reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    DEFAULT         reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    CASE            reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOSPUNTOS       reduce using rule 71 (expresion -> IDENTIFICADOR DECREMENTO .)


state 70

    (17) variables -> IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 17 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)


state 71

    (54) expresion -> expresion MAS . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 105

state 72

    (55) expresion -> expresion MENOS . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 106

state 73

    (56) expresion -> expresion POR . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 107

state 74

    (57) expresion -> expresion DIV . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 108

state 75

    (58) expresion -> expresion POT . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 109

state 76

    (59) expresion -> expresion MODULO . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 110

state 77

    (60) expresion -> expresion IGUALACION . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 111

state 78

    (61) expresion -> expresion DIREFENCIACION . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 112

state 79

    (62) expresion -> expresion MAYORQ . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 113

state 80

    (63) expresion -> expresion MENORQ . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 114

state 81

    (64) expresion -> expresion MAYORIGUAL . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 115

state 82

    (65) expresion -> expresion MENORIGUAL . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 116

state 83

    (66) expresion -> expresion OR . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 117

state 84

    (67) expresion -> expresion AND . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 118

state 85

    (18) variables -> IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 18 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)


state 86

    (68) expresion -> MENOS expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 68 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 68 (expresion -> MENOS expresion .)
    POR             reduce using rule 68 (expresion -> MENOS expresion .)
    DIV             reduce using rule 68 (expresion -> MENOS expresion .)
    POT             reduce using rule 68 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 68 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 68 (expresion -> MENOS expresion .)
    DIREFENCIACION  reduce using rule 68 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 68 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 68 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 68 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 68 (expresion -> MENOS expresion .)
    OR              reduce using rule 68 (expresion -> MENOS expresion .)
    AND             reduce using rule 68 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 68 (expresion -> MENOS expresion .)
    error           reduce using rule 68 (expresion -> MENOS expresion .)
    IDENTIFICADOR   reduce using rule 68 (expresion -> MENOS expresion .)
    IF              reduce using rule 68 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 68 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 68 (expresion -> MENOS expresion .)
    FOR             reduce using rule 68 (expresion -> MENOS expresion .)
    FUNC            reduce using rule 68 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 68 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 68 (expresion -> MENOS expresion .)
    MAIN            reduce using rule 68 (expresion -> MENOS expresion .)
    VAR             reduce using rule 68 (expresion -> MENOS expresion .)
    $end            reduce using rule 68 (expresion -> MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 68 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 68 (expresion -> MENOS expresion .)
    CASE            reduce using rule 68 (expresion -> MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 68 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 68 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! POT             [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 87

    (69) expresion -> NOT expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    OR              reduce using rule 69 (expresion -> NOT expresion .)
    AND             reduce using rule 69 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 69 (expresion -> NOT expresion .)
    error           reduce using rule 69 (expresion -> NOT expresion .)
    IDENTIFICADOR   reduce using rule 69 (expresion -> NOT expresion .)
    IF              reduce using rule 69 (expresion -> NOT expresion .)
    SWITCH          reduce using rule 69 (expresion -> NOT expresion .)
    WHILE           reduce using rule 69 (expresion -> NOT expresion .)
    FOR             reduce using rule 69 (expresion -> NOT expresion .)
    FUNC            reduce using rule 69 (expresion -> NOT expresion .)
    PRINT           reduce using rule 69 (expresion -> NOT expresion .)
    BREAK           reduce using rule 69 (expresion -> NOT expresion .)
    MAIN            reduce using rule 69 (expresion -> NOT expresion .)
    VAR             reduce using rule 69 (expresion -> NOT expresion .)
    $end            reduce using rule 69 (expresion -> NOT expresion .)
    LLAVE_CIERRA    reduce using rule 69 (expresion -> NOT expresion .)
    DEFAULT         reduce using rule 69 (expresion -> NOT expresion .)
    CASE            reduce using rule 69 (expresion -> NOT expresion .)
    PARENTESIS_CIERRA reduce using rule 69 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 69 (expresion -> NOT expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82

  ! MAS             [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 69 (expresion -> NOT expresion .) ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 88

    (72) expresion -> PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 119
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 89

    (22) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 120


state 90

    (25) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE default LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 121


state 91

    (33) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 122


state 92

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 123

state 93

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 124

state 94

    (36) declaracionfor1 -> VAR IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 125


state 95

    (37) declaracionfor2 -> IDENTIFICADOR IGUAL . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 126

state 96

    (41) funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf . PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 127


state 97

    (42) parametrosf -> STRING . IDENTIFICADOR COMA parametrosf
    (43) parametrosf -> STRING . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 128


state 98

    (44) parametrosf -> INT . IDENTIFICADOR COMA parametrosf
    (45) parametrosf -> INT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 129


state 99

    (46) parametrosf -> CHAR . IDENTIFICADOR COMA parametrosf
    (47) parametrosf -> CHAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 130


state 100

    (48) parametrosf -> DOUBLE . IDENTIFICADOR COMA parametrosf
    (49) parametrosf -> DOUBLE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 131


state 101

    (50) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA . finInstruccion
    (52) finInstruccion -> . PTCOMA
    (53) finInstruccion -> .

    PTCOMA          shift and go to state 38
    error           reduce using rule 53 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 53 (finInstruccion -> .)
    IF              reduce using rule 53 (finInstruccion -> .)
    SWITCH          reduce using rule 53 (finInstruccion -> .)
    WHILE           reduce using rule 53 (finInstruccion -> .)
    FOR             reduce using rule 53 (finInstruccion -> .)
    FUNC            reduce using rule 53 (finInstruccion -> .)
    PRINT           reduce using rule 53 (finInstruccion -> .)
    BREAK           reduce using rule 53 (finInstruccion -> .)
    MAIN            reduce using rule 53 (finInstruccion -> .)
    VAR             reduce using rule 53 (finInstruccion -> .)
    $end            reduce using rule 53 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 53 (finInstruccion -> .)
    DEFAULT         reduce using rule 53 (finInstruccion -> .)
    CASE            reduce using rule 53 (finInstruccion -> .)

    finInstruccion                 shift and go to state 132

state 102

    (32) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 133
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 103

    (15) variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 15 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)


state 104

    (16) variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 16 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)


state 105

    (54) expresion -> expresion MAS expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 54 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 54 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 54 (expresion -> expresion MAS expresion .)
    DIREFENCIACION  reduce using rule 54 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 54 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 54 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 54 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 54 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 54 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 54 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 54 (expresion -> expresion MAS expresion .)
    error           reduce using rule 54 (expresion -> expresion MAS expresion .)
    IDENTIFICADOR   reduce using rule 54 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 54 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 54 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 54 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 54 (expresion -> expresion MAS expresion .)
    FUNC            reduce using rule 54 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 54 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 54 (expresion -> expresion MAS expresion .)
    MAIN            reduce using rule 54 (expresion -> expresion MAS expresion .)
    VAR             reduce using rule 54 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 54 (expresion -> expresion MAS expresion .)
    LLAVE_CIERRA    reduce using rule 54 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 54 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 54 (expresion -> expresion MAS expresion .)
    PARENTESIS_CIERRA reduce using rule 54 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 54 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! POR             [ reduce using rule 54 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 54 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 54 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 54 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 106

    (55) expresion -> expresion MENOS expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 55 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 55 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 55 (expresion -> expresion MENOS expresion .)
    DIREFENCIACION  reduce using rule 55 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 55 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 55 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 55 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 55 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 55 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 55 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 55 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 55 (expresion -> expresion MENOS expresion .)
    IDENTIFICADOR   reduce using rule 55 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 55 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 55 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 55 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 55 (expresion -> expresion MENOS expresion .)
    FUNC            reduce using rule 55 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 55 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 55 (expresion -> expresion MENOS expresion .)
    MAIN            reduce using rule 55 (expresion -> expresion MENOS expresion .)
    VAR             reduce using rule 55 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 55 (expresion -> expresion MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 55 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 55 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 55 (expresion -> expresion MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 55 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 55 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! POR             [ reduce using rule 55 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 55 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 55 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 55 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 107

    (56) expresion -> expresion POR expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 56 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 56 (expresion -> expresion POR expresion .)
    POR             reduce using rule 56 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 56 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 56 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 56 (expresion -> expresion POR expresion .)
    DIREFENCIACION  reduce using rule 56 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 56 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 56 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 56 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 56 (expresion -> expresion POR expresion .)
    OR              reduce using rule 56 (expresion -> expresion POR expresion .)
    AND             reduce using rule 56 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 56 (expresion -> expresion POR expresion .)
    error           reduce using rule 56 (expresion -> expresion POR expresion .)
    IDENTIFICADOR   reduce using rule 56 (expresion -> expresion POR expresion .)
    IF              reduce using rule 56 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 56 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 56 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 56 (expresion -> expresion POR expresion .)
    FUNC            reduce using rule 56 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 56 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 56 (expresion -> expresion POR expresion .)
    MAIN            reduce using rule 56 (expresion -> expresion POR expresion .)
    VAR             reduce using rule 56 (expresion -> expresion POR expresion .)
    $end            reduce using rule 56 (expresion -> expresion POR expresion .)
    LLAVE_CIERRA    reduce using rule 56 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 56 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 56 (expresion -> expresion POR expresion .)
    PARENTESIS_CIERRA reduce using rule 56 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 56 (expresion -> expresion POR expresion .)
    POT             shift and go to state 75

  ! POT             [ reduce using rule 56 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 108

    (57) expresion -> expresion DIV expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 57 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 57 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 57 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 57 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 57 (expresion -> expresion DIV expresion .)
    IGUALACION      reduce using rule 57 (expresion -> expresion DIV expresion .)
    DIREFENCIACION  reduce using rule 57 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 57 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 57 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 57 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 57 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 57 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 57 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 57 (expresion -> expresion DIV expresion .)
    error           reduce using rule 57 (expresion -> expresion DIV expresion .)
    IDENTIFICADOR   reduce using rule 57 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 57 (expresion -> expresion DIV expresion .)
    SWITCH          reduce using rule 57 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 57 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 57 (expresion -> expresion DIV expresion .)
    FUNC            reduce using rule 57 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 57 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 57 (expresion -> expresion DIV expresion .)
    MAIN            reduce using rule 57 (expresion -> expresion DIV expresion .)
    VAR             reduce using rule 57 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 57 (expresion -> expresion DIV expresion .)
    LLAVE_CIERRA    reduce using rule 57 (expresion -> expresion DIV expresion .)
    DEFAULT         reduce using rule 57 (expresion -> expresion DIV expresion .)
    CASE            reduce using rule 57 (expresion -> expresion DIV expresion .)
    PARENTESIS_CIERRA reduce using rule 57 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 57 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 75

  ! POT             [ reduce using rule 57 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 109

    (58) expresion -> expresion POT expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 58 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 58 (expresion -> expresion POT expresion .)
    POR             reduce using rule 58 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 58 (expresion -> expresion POT expresion .)
    POT             reduce using rule 58 (expresion -> expresion POT expresion .)
    MODULO          reduce using rule 58 (expresion -> expresion POT expresion .)
    IGUALACION      reduce using rule 58 (expresion -> expresion POT expresion .)
    DIREFENCIACION  reduce using rule 58 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 58 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 58 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 58 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 58 (expresion -> expresion POT expresion .)
    OR              reduce using rule 58 (expresion -> expresion POT expresion .)
    AND             reduce using rule 58 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 58 (expresion -> expresion POT expresion .)
    error           reduce using rule 58 (expresion -> expresion POT expresion .)
    IDENTIFICADOR   reduce using rule 58 (expresion -> expresion POT expresion .)
    IF              reduce using rule 58 (expresion -> expresion POT expresion .)
    SWITCH          reduce using rule 58 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 58 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 58 (expresion -> expresion POT expresion .)
    FUNC            reduce using rule 58 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 58 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 58 (expresion -> expresion POT expresion .)
    MAIN            reduce using rule 58 (expresion -> expresion POT expresion .)
    VAR             reduce using rule 58 (expresion -> expresion POT expresion .)
    $end            reduce using rule 58 (expresion -> expresion POT expresion .)
    LLAVE_CIERRA    reduce using rule 58 (expresion -> expresion POT expresion .)
    DEFAULT         reduce using rule 58 (expresion -> expresion POT expresion .)
    CASE            reduce using rule 58 (expresion -> expresion POT expresion .)
    PARENTESIS_CIERRA reduce using rule 58 (expresion -> expresion POT expresion .)
    DOSPUNTOS       reduce using rule 58 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! POT             [ shift and go to state 75 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 110

    (59) expresion -> expresion MODULO expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    MAS             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 59 (expresion -> expresion MODULO expresion .)
    DIREFENCIACION  reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MAYORQ          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MENORQ          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 59 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 59 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    IDENTIFICADOR   reduce using rule 59 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 59 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 59 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    FUNC            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 59 (expresion -> expresion MODULO expresion .)
    MAIN            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    VAR             reduce using rule 59 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    LLAVE_CIERRA    reduce using rule 59 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 59 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 59 (expresion -> expresion MODULO expresion .)
    PARENTESIS_CIERRA reduce using rule 59 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 59 (expresion -> expresion MODULO expresion .)
    POT             shift and go to state 75

  ! POT             [ reduce using rule 59 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 71 ]
  ! MENOS           [ shift and go to state 72 ]
  ! POR             [ shift and go to state 73 ]
  ! DIV             [ shift and go to state 74 ]
  ! MODULO          [ shift and go to state 76 ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 111

    (60) expresion -> expresion IGUALACION expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    DIREFENCIACION  reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    MAYORQ          reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    MENORQ          reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    PTCOMA          reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    IDENTIFICADOR   reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    SWITCH          reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    FUNC            reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    PRINT           reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    MAIN            reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    VAR             reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    LLAVE_CIERRA    reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    DEFAULT         reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    CASE            reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    PARENTESIS_CIERRA reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    DOSPUNTOS       reduce using rule 60 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 60 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 60 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 60 (expresion -> expresion IGUALACION expresion .) ]
  ! DIV             [ reduce using rule 60 (expresion -> expresion IGUALACION expresion .) ]
  ! POT             [ reduce using rule 60 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 60 (expresion -> expresion IGUALACION expresion .) ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 112

    (61) expresion -> expresion DIREFENCIACION expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    DIREFENCIACION  reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORQ          reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    MENORQ          reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORIGUAL      reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    MENORIGUAL      reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    OR              reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    AND             reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    PTCOMA          reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    error           reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    IDENTIFICADOR   reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    IF              reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    SWITCH          reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    WHILE           reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    FOR             reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    FUNC            reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    PRINT           reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    BREAK           reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    MAIN            reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    VAR             reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    $end            reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    LLAVE_CIERRA    reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    DEFAULT         reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    CASE            reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    PARENTESIS_CIERRA reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    DOSPUNTOS       reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MENOS           [ reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POR             [ reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! DIV             [ reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POT             [ reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MODULO          [ reduce using rule 61 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 113

    (62) expresion -> expresion MAYORQ expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    DIREFENCIACION  reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    error           reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    IDENTIFICADOR   reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    IF              reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    SWITCH          reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    WHILE           reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    FOR             reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    FUNC            reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    PRINT           reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    BREAK           reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    MAIN            reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    VAR             reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    LLAVE_CIERRA    reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    DEFAULT         reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    CASE            reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    DOSPUNTOS       reduce using rule 62 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 62 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 62 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 62 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 62 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 62 (expresion -> expresion MAYORQ expresion .) ]
  ! MODULO          [ reduce using rule 62 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 114

    (63) expresion -> expresion MENORQ expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    DIREFENCIACION  reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    error           reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    IDENTIFICADOR   reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    IF              reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    SWITCH          reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    WHILE           reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    FOR             reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    FUNC            reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    PRINT           reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    BREAK           reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    MAIN            reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    VAR             reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    LLAVE_CIERRA    reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    DEFAULT         reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    CASE            reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    DOSPUNTOS       reduce using rule 63 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 63 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 63 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 63 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 63 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 63 (expresion -> expresion MENORQ expresion .) ]
  ! MODULO          [ reduce using rule 63 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 115

    (64) expresion -> expresion MAYORIGUAL expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    SWITCH          reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    FUNC            reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    MAIN            reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    VAR             reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    DEFAULT         reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    CASE            reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 64 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 116

    (65) expresion -> expresion MENORIGUAL expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    SWITCH          reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    FUNC            reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    MAIN            reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    VAR             reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    DEFAULT         reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    CASE            reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76

  ! MAS             [ reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 65 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 77 ]
  ! DIREFENCIACION  [ shift and go to state 78 ]
  ! MAYORQ          [ shift and go to state 79 ]
  ! MENORQ          [ shift and go to state 80 ]
  ! MAYORIGUAL      [ shift and go to state 81 ]
  ! MENORIGUAL      [ shift and go to state 82 ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 117

    (66) expresion -> expresion OR expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    OR              reduce using rule 66 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 66 (expresion -> expresion OR expresion .)
    error           reduce using rule 66 (expresion -> expresion OR expresion .)
    IDENTIFICADOR   reduce using rule 66 (expresion -> expresion OR expresion .)
    IF              reduce using rule 66 (expresion -> expresion OR expresion .)
    SWITCH          reduce using rule 66 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 66 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 66 (expresion -> expresion OR expresion .)
    FUNC            reduce using rule 66 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 66 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 66 (expresion -> expresion OR expresion .)
    MAIN            reduce using rule 66 (expresion -> expresion OR expresion .)
    VAR             reduce using rule 66 (expresion -> expresion OR expresion .)
    $end            reduce using rule 66 (expresion -> expresion OR expresion .)
    LLAVE_CIERRA    reduce using rule 66 (expresion -> expresion OR expresion .)
    DEFAULT         reduce using rule 66 (expresion -> expresion OR expresion .)
    CASE            reduce using rule 66 (expresion -> expresion OR expresion .)
    PARENTESIS_CIERRA reduce using rule 66 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 66 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    AND             shift and go to state 84

  ! MAS             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 66 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 83 ]


state 118

    (67) expresion -> expresion AND expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    OR              reduce using rule 67 (expresion -> expresion AND expresion .)
    AND             reduce using rule 67 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 67 (expresion -> expresion AND expresion .)
    error           reduce using rule 67 (expresion -> expresion AND expresion .)
    IDENTIFICADOR   reduce using rule 67 (expresion -> expresion AND expresion .)
    IF              reduce using rule 67 (expresion -> expresion AND expresion .)
    SWITCH          reduce using rule 67 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 67 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 67 (expresion -> expresion AND expresion .)
    FUNC            reduce using rule 67 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 67 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 67 (expresion -> expresion AND expresion .)
    MAIN            reduce using rule 67 (expresion -> expresion AND expresion .)
    VAR             reduce using rule 67 (expresion -> expresion AND expresion .)
    $end            reduce using rule 67 (expresion -> expresion AND expresion .)
    LLAVE_CIERRA    reduce using rule 67 (expresion -> expresion AND expresion .)
    DEFAULT         reduce using rule 67 (expresion -> expresion AND expresion .)
    CASE            reduce using rule 67 (expresion -> expresion AND expresion .)
    PARENTESIS_CIERRA reduce using rule 67 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 67 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82

  ! MAS             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 67 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]


state 119

    (72) expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 72 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 120

    (22) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 134
    if                             shift and go to state 5
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 121

    (25) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases LLAVE_CIERRA
    (26) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases default LLAVE_CIERRA
    (27) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . default LLAVE_CIERRA
    (28) listacases -> . listacases case
    (29) listacases -> . case
    (31) default -> . DEFAULT DOSPUNTOS instrucciones
    (30) case -> . CASE expresion DOSPUNTOS instrucciones

    DEFAULT         shift and go to state 138
    CASE            shift and go to state 139

    listacases                     shift and go to state 135
    default                        shift and go to state 136
    case                           shift and go to state 137

state 122

    (33) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 140
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 123

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 141
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 124

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 142
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 125

    (36) declaracionfor1 -> VAR IDENTIFICADOR IGUAL . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 143

state 126

    (37) declaracionfor2 -> IDENTIFICADOR IGUAL expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 37 (declaracionfor2 -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 127

    (41) funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA . LLAVE_ABRE LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 144


state 128

    (42) parametrosf -> STRING IDENTIFICADOR . COMA parametrosf
    (43) parametrosf -> STRING IDENTIFICADOR .

    COMA            shift and go to state 145
    PARENTESIS_CIERRA reduce using rule 43 (parametrosf -> STRING IDENTIFICADOR .)


state 129

    (44) parametrosf -> INT IDENTIFICADOR . COMA parametrosf
    (45) parametrosf -> INT IDENTIFICADOR .

    COMA            shift and go to state 146
    PARENTESIS_CIERRA reduce using rule 45 (parametrosf -> INT IDENTIFICADOR .)


state 130

    (46) parametrosf -> CHAR IDENTIFICADOR . COMA parametrosf
    (47) parametrosf -> CHAR IDENTIFICADOR .

    COMA            shift and go to state 147
    PARENTESIS_CIERRA reduce using rule 47 (parametrosf -> CHAR IDENTIFICADOR .)


state 131

    (48) parametrosf -> DOUBLE IDENTIFICADOR . COMA parametrosf
    (49) parametrosf -> DOUBLE IDENTIFICADOR .

    COMA            shift and go to state 148
    PARENTESIS_CIERRA reduce using rule 49 (parametrosf -> DOUBLE IDENTIFICADOR .)


state 132

    (50) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .

    error           reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IDENTIFICADOR   reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IF              reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    SWITCH          reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    WHILE           reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FOR             reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FUNC            reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    PRINT           reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BREAK           reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    MAIN            reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    VAR             reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    $end            reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    LLAVE_CIERRA    reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DEFAULT         reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CASE            reduce using rule 50 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)


state 133

    (32) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    shift and go to state 149
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 134

    (22) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    shift and go to state 150
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    if                             shift and go to state 5
    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 135

    (25) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . LLAVE_CIERRA
    (26) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . default LLAVE_CIERRA
    (28) listacases -> listacases . case
    (31) default -> . DEFAULT DOSPUNTOS instrucciones
    (30) case -> . CASE expresion DOSPUNTOS instrucciones

    LLAVE_CIERRA    shift and go to state 151
    DEFAULT         shift and go to state 138
    CASE            shift and go to state 139

    default                        shift and go to state 152
    case                           shift and go to state 153

state 136

    (27) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 154


state 137

    (29) listacases -> case .

    LLAVE_CIERRA    reduce using rule 29 (listacases -> case .)
    DEFAULT         reduce using rule 29 (listacases -> case .)
    CASE            reduce using rule 29 (listacases -> case .)


state 138

    (31) default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 155


state 139

    (30) case -> CASE . expresion DOSPUNTOS instrucciones
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 156

state 140

    (33) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    shift and go to state 157
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 141

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) actualizacion -> . IDENTIFICADOR INCREMENTO
    (39) actualizacion -> . IDENTIFICADOR DECREMENTO
    (40) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 159

    actualizacion                  shift and go to state 158

state 142

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (38) actualizacion -> . IDENTIFICADOR INCREMENTO
    (39) actualizacion -> . IDENTIFICADOR DECREMENTO
    (40) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 159

    actualizacion                  shift and go to state 160

state 143

    (36) declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 36 (declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 144

    (41) funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 161


state 145

    (42) parametrosf -> STRING IDENTIFICADOR COMA . parametrosf
    (42) parametrosf -> . STRING IDENTIFICADOR COMA parametrosf
    (43) parametrosf -> . STRING IDENTIFICADOR
    (44) parametrosf -> . INT IDENTIFICADOR COMA parametrosf
    (45) parametrosf -> . INT IDENTIFICADOR
    (46) parametrosf -> . CHAR IDENTIFICADOR COMA parametrosf
    (47) parametrosf -> . CHAR IDENTIFICADOR
    (48) parametrosf -> . DOUBLE IDENTIFICADOR COMA parametrosf
    (49) parametrosf -> . DOUBLE IDENTIFICADOR

    STRING          shift and go to state 97
    INT             shift and go to state 98
    CHAR            shift and go to state 99
    DOUBLE          shift and go to state 100

    parametrosf                    shift and go to state 162

state 146

    (44) parametrosf -> INT IDENTIFICADOR COMA . parametrosf
    (42) parametrosf -> . STRING IDENTIFICADOR COMA parametrosf
    (43) parametrosf -> . STRING IDENTIFICADOR
    (44) parametrosf -> . INT IDENTIFICADOR COMA parametrosf
    (45) parametrosf -> . INT IDENTIFICADOR
    (46) parametrosf -> . CHAR IDENTIFICADOR COMA parametrosf
    (47) parametrosf -> . CHAR IDENTIFICADOR
    (48) parametrosf -> . DOUBLE IDENTIFICADOR COMA parametrosf
    (49) parametrosf -> . DOUBLE IDENTIFICADOR

    STRING          shift and go to state 97
    INT             shift and go to state 98
    CHAR            shift and go to state 99
    DOUBLE          shift and go to state 100

    parametrosf                    shift and go to state 163

state 147

    (46) parametrosf -> CHAR IDENTIFICADOR COMA . parametrosf
    (42) parametrosf -> . STRING IDENTIFICADOR COMA parametrosf
    (43) parametrosf -> . STRING IDENTIFICADOR
    (44) parametrosf -> . INT IDENTIFICADOR COMA parametrosf
    (45) parametrosf -> . INT IDENTIFICADOR
    (46) parametrosf -> . CHAR IDENTIFICADOR COMA parametrosf
    (47) parametrosf -> . CHAR IDENTIFICADOR
    (48) parametrosf -> . DOUBLE IDENTIFICADOR COMA parametrosf
    (49) parametrosf -> . DOUBLE IDENTIFICADOR

    STRING          shift and go to state 97
    INT             shift and go to state 98
    CHAR            shift and go to state 99
    DOUBLE          shift and go to state 100

    parametrosf                    shift and go to state 164

state 148

    (48) parametrosf -> DOUBLE IDENTIFICADOR COMA . parametrosf
    (42) parametrosf -> . STRING IDENTIFICADOR COMA parametrosf
    (43) parametrosf -> . STRING IDENTIFICADOR
    (44) parametrosf -> . INT IDENTIFICADOR COMA parametrosf
    (45) parametrosf -> . INT IDENTIFICADOR
    (46) parametrosf -> . CHAR IDENTIFICADOR COMA parametrosf
    (47) parametrosf -> . CHAR IDENTIFICADOR
    (48) parametrosf -> . DOUBLE IDENTIFICADOR COMA parametrosf
    (49) parametrosf -> . DOUBLE IDENTIFICADOR

    STRING          shift and go to state 97
    INT             shift and go to state 98
    CHAR            shift and go to state 99
    DOUBLE          shift and go to state 100

    parametrosf                    shift and go to state 165

state 149

    (32) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 32 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 150

    (22) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .
    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE if

    error           reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 22 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ELSE            shift and go to state 166


state 151

    (25) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .

    error           reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IF              reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    SWITCH          reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    WHILE           reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FOR             reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FUNC            reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    PRINT           reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BREAK           reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    MAIN            reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    VAR             reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    $end            reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DEFAULT         reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CASE            reduce using rule 25 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)


state 152

    (26) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 167


state 153

    (28) listacases -> listacases case .

    LLAVE_CIERRA    reduce using rule 28 (listacases -> listacases case .)
    DEFAULT         reduce using rule 28 (listacases -> listacases case .)
    CASE            reduce using rule 28 (listacases -> listacases case .)


state 154

    (27) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .

    error           reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IF              reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    SWITCH          reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    WHILE           reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FOR             reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FUNC            reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    PRINT           reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BREAK           reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    MAIN            reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    VAR             reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    $end            reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CASE            reduce using rule 27 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)


state 155

    (31) default -> DEFAULT DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 168
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 156

    (30) case -> CASE expresion . DOSPUNTOS instrucciones
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    DOSPUNTOS       shift and go to state 169
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 157

    (33) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 33 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 158

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 170


state 159

    (38) actualizacion -> IDENTIFICADOR . INCREMENTO
    (39) actualizacion -> IDENTIFICADOR . DECREMENTO
    (40) actualizacion -> IDENTIFICADOR . IGUAL expresion

    INCREMENTO      shift and go to state 171
    DECREMENTO      shift and go to state 172
    IGUAL           shift and go to state 173


state 160

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 174


state 161

    (41) funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .

    error           reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    IF              reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    SWITCH          reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    WHILE           reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    FOR             reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    FUNC            reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    PRINT           reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    BREAK           reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    MAIN            reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    VAR             reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    $end            reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    DEFAULT         reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)
    CASE            reduce using rule 41 (funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA .)


state 162

    (42) parametrosf -> STRING IDENTIFICADOR COMA parametrosf .

    PARENTESIS_CIERRA reduce using rule 42 (parametrosf -> STRING IDENTIFICADOR COMA parametrosf .)


state 163

    (44) parametrosf -> INT IDENTIFICADOR COMA parametrosf .

    PARENTESIS_CIERRA reduce using rule 44 (parametrosf -> INT IDENTIFICADOR COMA parametrosf .)


state 164

    (46) parametrosf -> CHAR IDENTIFICADOR COMA parametrosf .

    PARENTESIS_CIERRA reduce using rule 46 (parametrosf -> CHAR IDENTIFICADOR COMA parametrosf .)


state 165

    (48) parametrosf -> DOUBLE IDENTIFICADOR COMA parametrosf .

    PARENTESIS_CIERRA reduce using rule 48 (parametrosf -> DOUBLE IDENTIFICADOR COMA parametrosf .)


state 166

    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . if
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 175
    IF              shift and go to state 16

    if                             shift and go to state 176

state 167

    (26) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .

    error           reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IF              reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    SWITCH          reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    WHILE           reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FOR             reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FUNC            reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    PRINT           reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BREAK           reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    MAIN            reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    VAR             reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    $end            reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CASE            reduce using rule 26 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)


state 168

    (31) default -> DEFAULT DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    reduce using rule 31 (default -> DEFAULT DOSPUNTOS instrucciones .)
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 169

    (30) case -> CASE expresion DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 177
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 170

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 178


state 171

    (38) actualizacion -> IDENTIFICADOR INCREMENTO .

    PARENTESIS_CIERRA reduce using rule 38 (actualizacion -> IDENTIFICADOR INCREMENTO .)


state 172

    (39) actualizacion -> IDENTIFICADOR DECREMENTO .

    PARENTESIS_CIERRA reduce using rule 39 (actualizacion -> IDENTIFICADOR DECREMENTO .)


state 173

    (40) actualizacion -> IDENTIFICADOR IGUAL . expresion
    (54) expresion -> . expresion MAS expresion
    (55) expresion -> . expresion MENOS expresion
    (56) expresion -> . expresion POR expresion
    (57) expresion -> . expresion DIV expresion
    (58) expresion -> . expresion POT expresion
    (59) expresion -> . expresion MODULO expresion
    (60) expresion -> . expresion IGUALACION expresion
    (61) expresion -> . expresion DIREFENCIACION expresion
    (62) expresion -> . expresion MAYORQ expresion
    (63) expresion -> . expresion MENORQ expresion
    (64) expresion -> . expresion MAYORIGUAL expresion
    (65) expresion -> . expresion MENORIGUAL expresion
    (66) expresion -> . expresion OR expresion
    (67) expresion -> . expresion AND expresion
    (68) expresion -> . MENOS expresion
    (69) expresion -> . NOT expresion
    (70) expresion -> . IDENTIFICADOR INCREMENTO
    (71) expresion -> . IDENTIFICADOR DECREMENTO
    (72) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (73) expresion -> . ENTERO
    (74) expresion -> . DECIMAL
    (75) expresion -> . TRUE
    (76) expresion -> . FALSE
    (77) expresion -> . IDENTIFICADOR
    (78) expresion -> . CADENA
    (79) expresion -> . CHART

    MENOS           shift and go to state 45
    NOT             shift and go to state 46
    IDENTIFICADOR   shift and go to state 42
    PARENTESIS_ABRE shift and go to state 47
    ENTERO          shift and go to state 48
    DECIMAL         shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 52
    CHART           shift and go to state 53

    expresion                      shift and go to state 179

state 174

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 180


state 175

    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 181
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 176

    (24) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .

    error           reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IDENTIFICADOR   reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IF              reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    SWITCH          reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    WHILE           reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FOR             reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FUNC            reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    PRINT           reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BREAK           reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    MAIN            reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    VAR             reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    $end            reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    LLAVE_CIERRA    reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DEFAULT         reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CASE            reduce using rule 24 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)


state 177

    (30) case -> CASE expresion DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    reduce using rule 30 (case -> CASE expresion DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 30 (case -> CASE expresion DOSPUNTOS instrucciones .)
    CASE            reduce using rule 30 (case -> CASE expresion DOSPUNTOS instrucciones .)
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 178

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 182
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 179

    (40) actualizacion -> IDENTIFICADOR IGUAL expresion .
    (54) expresion -> expresion . MAS expresion
    (55) expresion -> expresion . MENOS expresion
    (56) expresion -> expresion . POR expresion
    (57) expresion -> expresion . DIV expresion
    (58) expresion -> expresion . POT expresion
    (59) expresion -> expresion . MODULO expresion
    (60) expresion -> expresion . IGUALACION expresion
    (61) expresion -> expresion . DIREFENCIACION expresion
    (62) expresion -> expresion . MAYORQ expresion
    (63) expresion -> expresion . MENORQ expresion
    (64) expresion -> expresion . MAYORIGUAL expresion
    (65) expresion -> expresion . MENORIGUAL expresion
    (66) expresion -> expresion . OR expresion
    (67) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 40 (actualizacion -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 71
    MENOS           shift and go to state 72
    POR             shift and go to state 73
    DIV             shift and go to state 74
    POT             shift and go to state 75
    MODULO          shift and go to state 76
    IGUALACION      shift and go to state 77
    DIREFENCIACION  shift and go to state 78
    MAYORQ          shift and go to state 79
    MENORQ          shift and go to state 80
    MAYORIGUAL      shift and go to state 81
    MENORIGUAL      shift and go to state 82
    OR              shift and go to state 83
    AND             shift and go to state 84


state 180

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instrucciones                  shift and go to state 183
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 181

    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    shift and go to state 184
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 182

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    shift and go to state 185
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 183

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . funciones
    (10) instruccion -> . print
    (11) instruccion -> . break
    (12) instruccion -> . main
    (13) instruccion -> . error PTCOMA
    (14) variables -> . var IDENTIFICADOR finInstruccion
    (15) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (16) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (17) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (18) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (20) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (21) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (22) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (23) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (24) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (25) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (26) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (27) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (33) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (34) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (35) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) funciones -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA
    (50) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (51) break -> . BREAK finInstruccion
    (32) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (19) var -> . VAR

    LLAVE_CIERRA    shift and go to state 186
    error           shift and go to state 13
    IDENTIFICADOR   shift and go to state 15
    IF              shift and go to state 16
    SWITCH          shift and go to state 17
    WHILE           shift and go to state 18
    FOR             shift and go to state 19
    FUNC            shift and go to state 20
    PRINT           shift and go to state 21
    BREAK           shift and go to state 22
    MAIN            shift and go to state 23
    VAR             shift and go to state 24

    instruccion                    shift and go to state 25
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    funciones                      shift and go to state 9
    print                          shift and go to state 10
    break                          shift and go to state 11
    main                           shift and go to state 12
    var                            shift and go to state 14

state 184

    (23) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 23 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 185

    (34) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 34 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 186

    (35) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 35 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)

