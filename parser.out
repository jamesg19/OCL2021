Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ESPBARRAINVERTIVA
    ESPLINEA

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> variables
Rule 5     instruccion -> if
Rule 6     instruccion -> switch
Rule 7     instruccion -> while
Rule 8     instruccion -> for
Rule 9     instruccion -> print
Rule 10    instruccion -> break
Rule 11    instruccion -> continue
Rule 12    instruccion -> returnn finInstruccion
Rule 13    instruccion -> main
Rule 14    instruccion -> funcion_void
Rule 15    instruccion -> llamada_fvoid finInstruccion
Rule 16    instruccion -> declArr_instr finInstruccion
Rule 17    instruccion -> modArr_instr finInstruccion
Rule 18    instruccion -> declArr_instr2 finInstruccion
Rule 19    instruccion -> error PTCOMA
Rule 20    variables -> var IDENTIFICADOR finInstruccion
Rule 21    variables -> var IDENTIFICADOR IGUAL expresion finInstruccion
Rule 22    variables -> var IDENTIFICADOR IGUAL NULL finInstruccion
Rule 23    variables -> IDENTIFICADOR IGUAL expresion finInstruccion
Rule 24    variables -> IDENTIFICADOR IGUAL NULL finInstruccion
Rule 25    var -> VAR
Rule 26    variables -> IDENTIFICADOR INCREMENTO finInstruccion
Rule 27    variables -> IDENTIFICADOR DECREMENTO finInstruccion
Rule 28    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 29    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 30    if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
Rule 31    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
Rule 32    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
Rule 33    switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
Rule 34    listacases -> listacases case
Rule 35    listacases -> case
Rule 36    case -> CASE expresion DOSPUNTOS instrucciones
Rule 37    default -> DEFAULT DOSPUNTOS instrucciones
Rule 38    main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 39    while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 40    for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 41    for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 42    declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion
Rule 43    declaracionfor2 -> IDENTIFICADOR IGUAL expresion
Rule 44    actualizacion -> IDENTIFICADOR INCREMENTO
Rule 45    actualizacion -> IDENTIFICADOR DECREMENTO
Rule 46    actualizacion -> IDENTIFICADOR IGUAL expresion
Rule 47    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
Rule 48    llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
Rule 49    declArr_instr -> tipo1
Rule 50    tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
Rule 51    lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA
Rule 52    lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA
Rule 53    lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
Rule 54    lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA
Rule 55    tip -> STRING
Rule 56    tip -> INT
Rule 57    tip -> DOUBLE
Rule 58    tip -> CHAR
Rule 59    tip -> BOOLEAN
Rule 60    modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion
Rule 61    declArr_instr2 -> tipo2
Rule 62    tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
Rule 63    list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA
Rule 64    list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA
Rule 65    valores -> list_expresenes2
Rule 66    valores -> sub_expresion
Rule 67    sub_expresion -> sub_expresion COMA expresion
Rule 68    sub_expresion -> expresion
Rule 69    returnn -> RETURN expresion
Rule 70    parametros_llamada -> parametros_llamada COMA parametro_llamada
Rule 71    parametros_llamada -> parametro_llamada
Rule 72    parametro_llamada -> expresion
Rule 73    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 74    funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
Rule 75    parametros -> parametros COMA parametro
Rule 76    parametros -> parametro
Rule 77    parametro -> INT IDENTIFICADOR
Rule 78    parametro -> STRING IDENTIFICADOR
Rule 79    parametro -> DOUBLE IDENTIFICADOR
Rule 80    parametro -> BOOLEAN IDENTIFICADOR
Rule 81    parametro -> CHAR IDENTIFICADOR
Rule 82    print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
Rule 83    break -> BREAK finInstruccion
Rule 84    continue -> CONTINUE finInstruccion
Rule 85    finInstruccion -> PTCOMA
Rule 86    finInstruccion -> <empty>
Rule 87    expresion -> expresion MAS expresion
Rule 88    expresion -> expresion MENOS expresion
Rule 89    expresion -> expresion POR expresion
Rule 90    expresion -> expresion DIV expresion
Rule 91    expresion -> expresion POT expresion
Rule 92    expresion -> expresion MODULO expresion
Rule 93    expresion -> expresion IGUALACION expresion
Rule 94    expresion -> expresion DIREFENCIACION expresion
Rule 95    expresion -> expresion MAYORQ expresion
Rule 96    expresion -> expresion MENORQ expresion
Rule 97    expresion -> expresion MAYORIGUAL expresion
Rule 98    expresion -> expresion MENORIGUAL expresion
Rule 99    expresion -> expresion OR expresion
Rule 100   expresion -> expresion AND expresion
Rule 101   expresion -> MENOS expresion
Rule 102   expresion -> NOT expresion
Rule 103   expresion -> IDENTIFICADOR INCREMENTO
Rule 104   expresion -> IDENTIFICADOR DECREMENTO
Rule 105   expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 106   expresion -> ENTERO
Rule 107   expresion -> DECIMAL
Rule 108   expresion -> TRUE
Rule 109   expresion -> FALSE
Rule 110   expresion -> IDENTIFICADOR
Rule 111   expresion -> CADENA
Rule 112   expresion -> CHART
Rule 113   expresion -> llamada_fvoid
Rule 114   expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 115   expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 116   expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 117   expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 118   expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 119   expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
Rule 120   expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
Rule 121   expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
Rule 122   expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
Rule 123   expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
Rule 124   expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
Rule 125   expresion -> IDENTIFICADOR lista_expresiones
Rule 126   expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA

Terminals, with rules where they appear

AND                  : 100
BOOLEAN              : 59 80 123
BREAK                : 83
CADENA               : 111
CASE                 : 36
CHAR                 : 58 81 124
CHART                : 112
COMA                 : 63 67 70 75
CONTINUE             : 84
CORCHETE_ABRE        : 51 52 53 54
CORCHETE_CIERRA      : 51 52 53 54
DECIMAL              : 107
DECREMENTO           : 27 45 104
DEFAULT              : 37
DIREFENCIACION       : 94
DIV                  : 90
DOSPUNTOS            : 36 37
DOUBLE               : 57 79 121
ELSE                 : 29 30
ENTERO               : 106
ESPBARRAINVERTIVA    : 
ESPLINEA             : 
FALSE                : 109
FOR                  : 40 41
FUNC                 : 73 74
IDENTIFICADOR        : 20 21 22 23 24 26 27 42 43 44 45 46 47 48 50 60 62 73 74 77 78 79 80 81 103 104 110 125
IF                   : 28 29 30
IGUAL                : 21 22 23 24 42 43 46 50 60 62
IGUALACION           : 93
INCREMENTO           : 26 44 103
INT                  : 56 77 120
LENGHT               : 119
LLAVE_ABRE           : 28 29 29 30 31 32 33 38 39 40 41 63 64 73 74
LLAVE_CIERRA         : 28 29 29 30 31 32 33 38 39 40 41 63 64 73 74
MAIN                 : 38
MAS                  : 87
MAYORIGUAL           : 97
MAYORQ               : 95
MENORIGUAL           : 98
MENORQ               : 96
MENOS                : 88 101
MODULO               : 92
NEW                  : 50
NOT                  : 102
NULL                 : 22 24
OR                   : 99
PARENTESIS_ABRE      : 28 29 30 31 32 33 38 39 40 41 47 48 73 74 82 105 114 115 116 117 118 119 120 121 122 123 124 126
PARENTESIS_CIERRA    : 28 29 30 31 32 33 38 39 40 41 47 48 73 74 82 105 114 115 116 117 118 119 120 121 122 123 124 126
POR                  : 89
POT                  : 91
PRINT                : 82
PTCOMA               : 19 40 40 41 41 85
READ                 : 126
RETURN               : 69
ROUND                : 117
STRING               : 55 78 122
SWITCH               : 31 32 33
TOLOWER              : 115
TOUPPER              : 114
TRUE                 : 108
TRUNCATE             : 116
TYPEOF               : 118
VAR                  : 25 42
WHILE                : 39
error                : 19

Nonterminals, with rules where they appear

actualizacion        : 40 41
break                : 10
case                 : 34 35
continue             : 11
declArr_instr        : 16
declArr_instr2       : 18
declaracionfor1      : 40
declaracionfor2      : 41
default              : 32 33
expresion            : 21 23 28 29 30 31 32 33 36 39 40 41 42 43 46 53 54 60 67 68 69 72 82 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 102 105 114 115 116 117 118 119 120 121 122 123 124
finInstruccion       : 12 15 16 17 18 20 21 22 23 24 26 27 82 83 84
for                  : 8
funcion_void         : 14
if                   : 5 30
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 28 29 29 30 36 37 38 39 40 41 73 74
list_expresenes2     : 62 63 65
lista_Dimension      : 50 51 62
lista_expresiones    : 50 53 60 125
listacases           : 31 32 34
llamada_fvoid        : 15 113
main                 : 13
modArr_instr         : 17
parametro            : 75 76
parametro_llamada    : 70 71
parametros           : 74 75
parametros_llamada   : 48 70
print                : 9
returnn              : 12
sub_expresion        : 66 67
switch               : 6
tip                  : 50 50 62
tipo1                : 49
tipo2                : 61
valores              : 63 64
var                  : 20 21 22
variables            : 4
while                : 7

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    $end            reduce using rule 1 (init -> instrucciones .)
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 3

    (3) instrucciones -> instruccion .

    error           reduce using rule 3 (instrucciones -> instruccion .)
    IDENTIFICADOR   reduce using rule 3 (instrucciones -> instruccion .)
    IF              reduce using rule 3 (instrucciones -> instruccion .)
    SWITCH          reduce using rule 3 (instrucciones -> instruccion .)
    WHILE           reduce using rule 3 (instrucciones -> instruccion .)
    FOR             reduce using rule 3 (instrucciones -> instruccion .)
    PRINT           reduce using rule 3 (instrucciones -> instruccion .)
    BREAK           reduce using rule 3 (instrucciones -> instruccion .)
    CONTINUE        reduce using rule 3 (instrucciones -> instruccion .)
    RETURN          reduce using rule 3 (instrucciones -> instruccion .)
    MAIN            reduce using rule 3 (instrucciones -> instruccion .)
    FUNC            reduce using rule 3 (instrucciones -> instruccion .)
    VAR             reduce using rule 3 (instrucciones -> instruccion .)
    STRING          reduce using rule 3 (instrucciones -> instruccion .)
    INT             reduce using rule 3 (instrucciones -> instruccion .)
    DOUBLE          reduce using rule 3 (instrucciones -> instruccion .)
    CHAR            reduce using rule 3 (instrucciones -> instruccion .)
    BOOLEAN         reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVE_CIERRA    reduce using rule 3 (instrucciones -> instruccion .)
    DEFAULT         reduce using rule 3 (instrucciones -> instruccion .)
    CASE            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> variables .

    error           reduce using rule 4 (instruccion -> variables .)
    IDENTIFICADOR   reduce using rule 4 (instruccion -> variables .)
    IF              reduce using rule 4 (instruccion -> variables .)
    SWITCH          reduce using rule 4 (instruccion -> variables .)
    WHILE           reduce using rule 4 (instruccion -> variables .)
    FOR             reduce using rule 4 (instruccion -> variables .)
    PRINT           reduce using rule 4 (instruccion -> variables .)
    BREAK           reduce using rule 4 (instruccion -> variables .)
    CONTINUE        reduce using rule 4 (instruccion -> variables .)
    RETURN          reduce using rule 4 (instruccion -> variables .)
    MAIN            reduce using rule 4 (instruccion -> variables .)
    FUNC            reduce using rule 4 (instruccion -> variables .)
    VAR             reduce using rule 4 (instruccion -> variables .)
    STRING          reduce using rule 4 (instruccion -> variables .)
    INT             reduce using rule 4 (instruccion -> variables .)
    DOUBLE          reduce using rule 4 (instruccion -> variables .)
    CHAR            reduce using rule 4 (instruccion -> variables .)
    BOOLEAN         reduce using rule 4 (instruccion -> variables .)
    $end            reduce using rule 4 (instruccion -> variables .)
    LLAVE_CIERRA    reduce using rule 4 (instruccion -> variables .)
    DEFAULT         reduce using rule 4 (instruccion -> variables .)
    CASE            reduce using rule 4 (instruccion -> variables .)


state 5

    (5) instruccion -> if .

    error           reduce using rule 5 (instruccion -> if .)
    IDENTIFICADOR   reduce using rule 5 (instruccion -> if .)
    IF              reduce using rule 5 (instruccion -> if .)
    SWITCH          reduce using rule 5 (instruccion -> if .)
    WHILE           reduce using rule 5 (instruccion -> if .)
    FOR             reduce using rule 5 (instruccion -> if .)
    PRINT           reduce using rule 5 (instruccion -> if .)
    BREAK           reduce using rule 5 (instruccion -> if .)
    CONTINUE        reduce using rule 5 (instruccion -> if .)
    RETURN          reduce using rule 5 (instruccion -> if .)
    MAIN            reduce using rule 5 (instruccion -> if .)
    FUNC            reduce using rule 5 (instruccion -> if .)
    VAR             reduce using rule 5 (instruccion -> if .)
    STRING          reduce using rule 5 (instruccion -> if .)
    INT             reduce using rule 5 (instruccion -> if .)
    DOUBLE          reduce using rule 5 (instruccion -> if .)
    CHAR            reduce using rule 5 (instruccion -> if .)
    BOOLEAN         reduce using rule 5 (instruccion -> if .)
    $end            reduce using rule 5 (instruccion -> if .)
    LLAVE_CIERRA    reduce using rule 5 (instruccion -> if .)
    DEFAULT         reduce using rule 5 (instruccion -> if .)
    CASE            reduce using rule 5 (instruccion -> if .)


state 6

    (6) instruccion -> switch .

    error           reduce using rule 6 (instruccion -> switch .)
    IDENTIFICADOR   reduce using rule 6 (instruccion -> switch .)
    IF              reduce using rule 6 (instruccion -> switch .)
    SWITCH          reduce using rule 6 (instruccion -> switch .)
    WHILE           reduce using rule 6 (instruccion -> switch .)
    FOR             reduce using rule 6 (instruccion -> switch .)
    PRINT           reduce using rule 6 (instruccion -> switch .)
    BREAK           reduce using rule 6 (instruccion -> switch .)
    CONTINUE        reduce using rule 6 (instruccion -> switch .)
    RETURN          reduce using rule 6 (instruccion -> switch .)
    MAIN            reduce using rule 6 (instruccion -> switch .)
    FUNC            reduce using rule 6 (instruccion -> switch .)
    VAR             reduce using rule 6 (instruccion -> switch .)
    STRING          reduce using rule 6 (instruccion -> switch .)
    INT             reduce using rule 6 (instruccion -> switch .)
    DOUBLE          reduce using rule 6 (instruccion -> switch .)
    CHAR            reduce using rule 6 (instruccion -> switch .)
    BOOLEAN         reduce using rule 6 (instruccion -> switch .)
    $end            reduce using rule 6 (instruccion -> switch .)
    LLAVE_CIERRA    reduce using rule 6 (instruccion -> switch .)
    DEFAULT         reduce using rule 6 (instruccion -> switch .)
    CASE            reduce using rule 6 (instruccion -> switch .)


state 7

    (7) instruccion -> while .

    error           reduce using rule 7 (instruccion -> while .)
    IDENTIFICADOR   reduce using rule 7 (instruccion -> while .)
    IF              reduce using rule 7 (instruccion -> while .)
    SWITCH          reduce using rule 7 (instruccion -> while .)
    WHILE           reduce using rule 7 (instruccion -> while .)
    FOR             reduce using rule 7 (instruccion -> while .)
    PRINT           reduce using rule 7 (instruccion -> while .)
    BREAK           reduce using rule 7 (instruccion -> while .)
    CONTINUE        reduce using rule 7 (instruccion -> while .)
    RETURN          reduce using rule 7 (instruccion -> while .)
    MAIN            reduce using rule 7 (instruccion -> while .)
    FUNC            reduce using rule 7 (instruccion -> while .)
    VAR             reduce using rule 7 (instruccion -> while .)
    STRING          reduce using rule 7 (instruccion -> while .)
    INT             reduce using rule 7 (instruccion -> while .)
    DOUBLE          reduce using rule 7 (instruccion -> while .)
    CHAR            reduce using rule 7 (instruccion -> while .)
    BOOLEAN         reduce using rule 7 (instruccion -> while .)
    $end            reduce using rule 7 (instruccion -> while .)
    LLAVE_CIERRA    reduce using rule 7 (instruccion -> while .)
    DEFAULT         reduce using rule 7 (instruccion -> while .)
    CASE            reduce using rule 7 (instruccion -> while .)


state 8

    (8) instruccion -> for .

    error           reduce using rule 8 (instruccion -> for .)
    IDENTIFICADOR   reduce using rule 8 (instruccion -> for .)
    IF              reduce using rule 8 (instruccion -> for .)
    SWITCH          reduce using rule 8 (instruccion -> for .)
    WHILE           reduce using rule 8 (instruccion -> for .)
    FOR             reduce using rule 8 (instruccion -> for .)
    PRINT           reduce using rule 8 (instruccion -> for .)
    BREAK           reduce using rule 8 (instruccion -> for .)
    CONTINUE        reduce using rule 8 (instruccion -> for .)
    RETURN          reduce using rule 8 (instruccion -> for .)
    MAIN            reduce using rule 8 (instruccion -> for .)
    FUNC            reduce using rule 8 (instruccion -> for .)
    VAR             reduce using rule 8 (instruccion -> for .)
    STRING          reduce using rule 8 (instruccion -> for .)
    INT             reduce using rule 8 (instruccion -> for .)
    DOUBLE          reduce using rule 8 (instruccion -> for .)
    CHAR            reduce using rule 8 (instruccion -> for .)
    BOOLEAN         reduce using rule 8 (instruccion -> for .)
    $end            reduce using rule 8 (instruccion -> for .)
    LLAVE_CIERRA    reduce using rule 8 (instruccion -> for .)
    DEFAULT         reduce using rule 8 (instruccion -> for .)
    CASE            reduce using rule 8 (instruccion -> for .)


state 9

    (9) instruccion -> print .

    error           reduce using rule 9 (instruccion -> print .)
    IDENTIFICADOR   reduce using rule 9 (instruccion -> print .)
    IF              reduce using rule 9 (instruccion -> print .)
    SWITCH          reduce using rule 9 (instruccion -> print .)
    WHILE           reduce using rule 9 (instruccion -> print .)
    FOR             reduce using rule 9 (instruccion -> print .)
    PRINT           reduce using rule 9 (instruccion -> print .)
    BREAK           reduce using rule 9 (instruccion -> print .)
    CONTINUE        reduce using rule 9 (instruccion -> print .)
    RETURN          reduce using rule 9 (instruccion -> print .)
    MAIN            reduce using rule 9 (instruccion -> print .)
    FUNC            reduce using rule 9 (instruccion -> print .)
    VAR             reduce using rule 9 (instruccion -> print .)
    STRING          reduce using rule 9 (instruccion -> print .)
    INT             reduce using rule 9 (instruccion -> print .)
    DOUBLE          reduce using rule 9 (instruccion -> print .)
    CHAR            reduce using rule 9 (instruccion -> print .)
    BOOLEAN         reduce using rule 9 (instruccion -> print .)
    $end            reduce using rule 9 (instruccion -> print .)
    LLAVE_CIERRA    reduce using rule 9 (instruccion -> print .)
    DEFAULT         reduce using rule 9 (instruccion -> print .)
    CASE            reduce using rule 9 (instruccion -> print .)


state 10

    (10) instruccion -> break .

    error           reduce using rule 10 (instruccion -> break .)
    IDENTIFICADOR   reduce using rule 10 (instruccion -> break .)
    IF              reduce using rule 10 (instruccion -> break .)
    SWITCH          reduce using rule 10 (instruccion -> break .)
    WHILE           reduce using rule 10 (instruccion -> break .)
    FOR             reduce using rule 10 (instruccion -> break .)
    PRINT           reduce using rule 10 (instruccion -> break .)
    BREAK           reduce using rule 10 (instruccion -> break .)
    CONTINUE        reduce using rule 10 (instruccion -> break .)
    RETURN          reduce using rule 10 (instruccion -> break .)
    MAIN            reduce using rule 10 (instruccion -> break .)
    FUNC            reduce using rule 10 (instruccion -> break .)
    VAR             reduce using rule 10 (instruccion -> break .)
    STRING          reduce using rule 10 (instruccion -> break .)
    INT             reduce using rule 10 (instruccion -> break .)
    DOUBLE          reduce using rule 10 (instruccion -> break .)
    CHAR            reduce using rule 10 (instruccion -> break .)
    BOOLEAN         reduce using rule 10 (instruccion -> break .)
    $end            reduce using rule 10 (instruccion -> break .)
    LLAVE_CIERRA    reduce using rule 10 (instruccion -> break .)
    DEFAULT         reduce using rule 10 (instruccion -> break .)
    CASE            reduce using rule 10 (instruccion -> break .)


state 11

    (11) instruccion -> continue .

    error           reduce using rule 11 (instruccion -> continue .)
    IDENTIFICADOR   reduce using rule 11 (instruccion -> continue .)
    IF              reduce using rule 11 (instruccion -> continue .)
    SWITCH          reduce using rule 11 (instruccion -> continue .)
    WHILE           reduce using rule 11 (instruccion -> continue .)
    FOR             reduce using rule 11 (instruccion -> continue .)
    PRINT           reduce using rule 11 (instruccion -> continue .)
    BREAK           reduce using rule 11 (instruccion -> continue .)
    CONTINUE        reduce using rule 11 (instruccion -> continue .)
    RETURN          reduce using rule 11 (instruccion -> continue .)
    MAIN            reduce using rule 11 (instruccion -> continue .)
    FUNC            reduce using rule 11 (instruccion -> continue .)
    VAR             reduce using rule 11 (instruccion -> continue .)
    STRING          reduce using rule 11 (instruccion -> continue .)
    INT             reduce using rule 11 (instruccion -> continue .)
    DOUBLE          reduce using rule 11 (instruccion -> continue .)
    CHAR            reduce using rule 11 (instruccion -> continue .)
    BOOLEAN         reduce using rule 11 (instruccion -> continue .)
    $end            reduce using rule 11 (instruccion -> continue .)
    LLAVE_CIERRA    reduce using rule 11 (instruccion -> continue .)
    DEFAULT         reduce using rule 11 (instruccion -> continue .)
    CASE            reduce using rule 11 (instruccion -> continue .)


state 12

    (12) instruccion -> returnn . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 42

state 13

    (13) instruccion -> main .

    error           reduce using rule 13 (instruccion -> main .)
    IDENTIFICADOR   reduce using rule 13 (instruccion -> main .)
    IF              reduce using rule 13 (instruccion -> main .)
    SWITCH          reduce using rule 13 (instruccion -> main .)
    WHILE           reduce using rule 13 (instruccion -> main .)
    FOR             reduce using rule 13 (instruccion -> main .)
    PRINT           reduce using rule 13 (instruccion -> main .)
    BREAK           reduce using rule 13 (instruccion -> main .)
    CONTINUE        reduce using rule 13 (instruccion -> main .)
    RETURN          reduce using rule 13 (instruccion -> main .)
    MAIN            reduce using rule 13 (instruccion -> main .)
    FUNC            reduce using rule 13 (instruccion -> main .)
    VAR             reduce using rule 13 (instruccion -> main .)
    STRING          reduce using rule 13 (instruccion -> main .)
    INT             reduce using rule 13 (instruccion -> main .)
    DOUBLE          reduce using rule 13 (instruccion -> main .)
    CHAR            reduce using rule 13 (instruccion -> main .)
    BOOLEAN         reduce using rule 13 (instruccion -> main .)
    $end            reduce using rule 13 (instruccion -> main .)
    LLAVE_CIERRA    reduce using rule 13 (instruccion -> main .)
    DEFAULT         reduce using rule 13 (instruccion -> main .)
    CASE            reduce using rule 13 (instruccion -> main .)


state 14

    (14) instruccion -> funcion_void .

    error           reduce using rule 14 (instruccion -> funcion_void .)
    IDENTIFICADOR   reduce using rule 14 (instruccion -> funcion_void .)
    IF              reduce using rule 14 (instruccion -> funcion_void .)
    SWITCH          reduce using rule 14 (instruccion -> funcion_void .)
    WHILE           reduce using rule 14 (instruccion -> funcion_void .)
    FOR             reduce using rule 14 (instruccion -> funcion_void .)
    PRINT           reduce using rule 14 (instruccion -> funcion_void .)
    BREAK           reduce using rule 14 (instruccion -> funcion_void .)
    CONTINUE        reduce using rule 14 (instruccion -> funcion_void .)
    RETURN          reduce using rule 14 (instruccion -> funcion_void .)
    MAIN            reduce using rule 14 (instruccion -> funcion_void .)
    FUNC            reduce using rule 14 (instruccion -> funcion_void .)
    VAR             reduce using rule 14 (instruccion -> funcion_void .)
    STRING          reduce using rule 14 (instruccion -> funcion_void .)
    INT             reduce using rule 14 (instruccion -> funcion_void .)
    DOUBLE          reduce using rule 14 (instruccion -> funcion_void .)
    CHAR            reduce using rule 14 (instruccion -> funcion_void .)
    BOOLEAN         reduce using rule 14 (instruccion -> funcion_void .)
    $end            reduce using rule 14 (instruccion -> funcion_void .)
    LLAVE_CIERRA    reduce using rule 14 (instruccion -> funcion_void .)
    DEFAULT         reduce using rule 14 (instruccion -> funcion_void .)
    CASE            reduce using rule 14 (instruccion -> funcion_void .)


state 15

    (15) instruccion -> llamada_fvoid . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 44

state 16

    (16) instruccion -> declArr_instr . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 45

state 17

    (17) instruccion -> modArr_instr . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 46

state 18

    (18) instruccion -> declArr_instr2 . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 47

state 19

    (19) instruccion -> error . PTCOMA

    PTCOMA          shift and go to state 48


state 20

    (20) variables -> var . IDENTIFICADOR finInstruccion
    (21) variables -> var . IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> var . IDENTIFICADOR IGUAL NULL finInstruccion

    IDENTIFICADOR   shift and go to state 49


state 21

    (23) variables -> IDENTIFICADOR . IGUAL expresion finInstruccion
    (24) variables -> IDENTIFICADOR . IGUAL NULL finInstruccion
    (26) variables -> IDENTIFICADOR . INCREMENTO finInstruccion
    (27) variables -> IDENTIFICADOR . DECREMENTO finInstruccion
    (47) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (60) modArr_instr -> IDENTIFICADOR . lista_expresiones IGUAL expresion
    (53) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (54) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    IGUAL           shift and go to state 50
    INCREMENTO      shift and go to state 51
    DECREMENTO      shift and go to state 52
    PARENTESIS_ABRE shift and go to state 53
    CORCHETE_ABRE   shift and go to state 55

    lista_expresiones              shift and go to state 54

state 22

    (28) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    PARENTESIS_ABRE shift and go to state 56


state 23

    (31) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> SWITCH . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 57


state 24

    (39) while -> WHILE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 58


state 25

    (40) for -> FOR . PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> FOR . PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 59


state 26

    (82) print -> PRINT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion

    PARENTESIS_ABRE shift and go to state 60


state 27

    (83) break -> BREAK . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 61

state 28

    (84) continue -> CONTINUE . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 62

state 29

    (69) returnn -> RETURN . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 63
    llamada_fvoid                  shift and go to state 74

state 30

    (38) main -> MAIN . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 82


state 31

    (73) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> FUNC . IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    IDENTIFICADOR   shift and go to state 83


state 32

    (49) declArr_instr -> tipo1 .

    PTCOMA          reduce using rule 49 (declArr_instr -> tipo1 .)
    error           reduce using rule 49 (declArr_instr -> tipo1 .)
    IDENTIFICADOR   reduce using rule 49 (declArr_instr -> tipo1 .)
    IF              reduce using rule 49 (declArr_instr -> tipo1 .)
    SWITCH          reduce using rule 49 (declArr_instr -> tipo1 .)
    WHILE           reduce using rule 49 (declArr_instr -> tipo1 .)
    FOR             reduce using rule 49 (declArr_instr -> tipo1 .)
    PRINT           reduce using rule 49 (declArr_instr -> tipo1 .)
    BREAK           reduce using rule 49 (declArr_instr -> tipo1 .)
    CONTINUE        reduce using rule 49 (declArr_instr -> tipo1 .)
    RETURN          reduce using rule 49 (declArr_instr -> tipo1 .)
    MAIN            reduce using rule 49 (declArr_instr -> tipo1 .)
    FUNC            reduce using rule 49 (declArr_instr -> tipo1 .)
    VAR             reduce using rule 49 (declArr_instr -> tipo1 .)
    STRING          reduce using rule 49 (declArr_instr -> tipo1 .)
    INT             reduce using rule 49 (declArr_instr -> tipo1 .)
    DOUBLE          reduce using rule 49 (declArr_instr -> tipo1 .)
    CHAR            reduce using rule 49 (declArr_instr -> tipo1 .)
    BOOLEAN         reduce using rule 49 (declArr_instr -> tipo1 .)
    $end            reduce using rule 49 (declArr_instr -> tipo1 .)
    LLAVE_CIERRA    reduce using rule 49 (declArr_instr -> tipo1 .)
    DEFAULT         reduce using rule 49 (declArr_instr -> tipo1 .)
    CASE            reduce using rule 49 (declArr_instr -> tipo1 .)


state 33

    (61) declArr_instr2 -> tipo2 .

    PTCOMA          reduce using rule 61 (declArr_instr2 -> tipo2 .)
    error           reduce using rule 61 (declArr_instr2 -> tipo2 .)
    IDENTIFICADOR   reduce using rule 61 (declArr_instr2 -> tipo2 .)
    IF              reduce using rule 61 (declArr_instr2 -> tipo2 .)
    SWITCH          reduce using rule 61 (declArr_instr2 -> tipo2 .)
    WHILE           reduce using rule 61 (declArr_instr2 -> tipo2 .)
    FOR             reduce using rule 61 (declArr_instr2 -> tipo2 .)
    PRINT           reduce using rule 61 (declArr_instr2 -> tipo2 .)
    BREAK           reduce using rule 61 (declArr_instr2 -> tipo2 .)
    CONTINUE        reduce using rule 61 (declArr_instr2 -> tipo2 .)
    RETURN          reduce using rule 61 (declArr_instr2 -> tipo2 .)
    MAIN            reduce using rule 61 (declArr_instr2 -> tipo2 .)
    FUNC            reduce using rule 61 (declArr_instr2 -> tipo2 .)
    VAR             reduce using rule 61 (declArr_instr2 -> tipo2 .)
    STRING          reduce using rule 61 (declArr_instr2 -> tipo2 .)
    INT             reduce using rule 61 (declArr_instr2 -> tipo2 .)
    DOUBLE          reduce using rule 61 (declArr_instr2 -> tipo2 .)
    CHAR            reduce using rule 61 (declArr_instr2 -> tipo2 .)
    BOOLEAN         reduce using rule 61 (declArr_instr2 -> tipo2 .)
    $end            reduce using rule 61 (declArr_instr2 -> tipo2 .)
    LLAVE_CIERRA    reduce using rule 61 (declArr_instr2 -> tipo2 .)
    DEFAULT         reduce using rule 61 (declArr_instr2 -> tipo2 .)
    CASE            reduce using rule 61 (declArr_instr2 -> tipo2 .)


state 34

    (25) var -> VAR .

    IDENTIFICADOR   reduce using rule 25 (var -> VAR .)


state 35

    (50) tipo1 -> tip . lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> tip . lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (51) lista_Dimension -> . lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA
    (52) lista_Dimension -> . CORCHETE_ABRE CORCHETE_CIERRA

    CORCHETE_ABRE   shift and go to state 85

    lista_Dimension                shift and go to state 84

state 36

    (55) tip -> STRING .

    CORCHETE_ABRE   reduce using rule 55 (tip -> STRING .)


state 37

    (56) tip -> INT .

    CORCHETE_ABRE   reduce using rule 56 (tip -> INT .)


state 38

    (57) tip -> DOUBLE .

    CORCHETE_ABRE   reduce using rule 57 (tip -> DOUBLE .)


state 39

    (58) tip -> CHAR .

    CORCHETE_ABRE   reduce using rule 58 (tip -> CHAR .)


state 40

    (59) tip -> BOOLEAN .

    CORCHETE_ABRE   reduce using rule 59 (tip -> BOOLEAN .)


state 41

    (2) instrucciones -> instrucciones instruccion .

    error           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IDENTIFICADOR   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    IF              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SWITCH          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    WHILE           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FOR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PRINT           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BREAK           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONTINUE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RETURN          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    MAIN            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    FUNC            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    VAR             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    STRING          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INT             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DOUBLE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CHAR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    BOOLEAN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVE_CIERRA    reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DEFAULT         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CASE            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 42

    (12) instruccion -> returnn finInstruccion .

    error           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IDENTIFICADOR   reduce using rule 12 (instruccion -> returnn finInstruccion .)
    IF              reduce using rule 12 (instruccion -> returnn finInstruccion .)
    SWITCH          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    WHILE           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FOR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    PRINT           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BREAK           reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CONTINUE        reduce using rule 12 (instruccion -> returnn finInstruccion .)
    RETURN          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    MAIN            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    FUNC            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    VAR             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    STRING          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    INT             reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DOUBLE          reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CHAR            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    BOOLEAN         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    $end            reduce using rule 12 (instruccion -> returnn finInstruccion .)
    LLAVE_CIERRA    reduce using rule 12 (instruccion -> returnn finInstruccion .)
    DEFAULT         reduce using rule 12 (instruccion -> returnn finInstruccion .)
    CASE            reduce using rule 12 (instruccion -> returnn finInstruccion .)


state 43

    (85) finInstruccion -> PTCOMA .

    error           reduce using rule 85 (finInstruccion -> PTCOMA .)
    IDENTIFICADOR   reduce using rule 85 (finInstruccion -> PTCOMA .)
    IF              reduce using rule 85 (finInstruccion -> PTCOMA .)
    SWITCH          reduce using rule 85 (finInstruccion -> PTCOMA .)
    WHILE           reduce using rule 85 (finInstruccion -> PTCOMA .)
    FOR             reduce using rule 85 (finInstruccion -> PTCOMA .)
    PRINT           reduce using rule 85 (finInstruccion -> PTCOMA .)
    BREAK           reduce using rule 85 (finInstruccion -> PTCOMA .)
    CONTINUE        reduce using rule 85 (finInstruccion -> PTCOMA .)
    RETURN          reduce using rule 85 (finInstruccion -> PTCOMA .)
    MAIN            reduce using rule 85 (finInstruccion -> PTCOMA .)
    FUNC            reduce using rule 85 (finInstruccion -> PTCOMA .)
    VAR             reduce using rule 85 (finInstruccion -> PTCOMA .)
    STRING          reduce using rule 85 (finInstruccion -> PTCOMA .)
    INT             reduce using rule 85 (finInstruccion -> PTCOMA .)
    DOUBLE          reduce using rule 85 (finInstruccion -> PTCOMA .)
    CHAR            reduce using rule 85 (finInstruccion -> PTCOMA .)
    BOOLEAN         reduce using rule 85 (finInstruccion -> PTCOMA .)
    $end            reduce using rule 85 (finInstruccion -> PTCOMA .)
    LLAVE_CIERRA    reduce using rule 85 (finInstruccion -> PTCOMA .)
    DEFAULT         reduce using rule 85 (finInstruccion -> PTCOMA .)
    CASE            reduce using rule 85 (finInstruccion -> PTCOMA .)


state 44

    (15) instruccion -> llamada_fvoid finInstruccion .

    error           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IDENTIFICADOR   reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    IF              reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    SWITCH          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    WHILE           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FOR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    PRINT           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BREAK           reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CONTINUE        reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    RETURN          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    MAIN            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    FUNC            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    VAR             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    STRING          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    INT             reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DOUBLE          reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CHAR            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    BOOLEAN         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    $end            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    LLAVE_CIERRA    reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    DEFAULT         reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)
    CASE            reduce using rule 15 (instruccion -> llamada_fvoid finInstruccion .)


state 45

    (16) instruccion -> declArr_instr finInstruccion .

    error           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    IDENTIFICADOR   reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    IF              reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    SWITCH          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    WHILE           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    FOR             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    PRINT           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    BREAK           reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CONTINUE        reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    RETURN          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    MAIN            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    FUNC            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    VAR             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    STRING          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    INT             reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    DOUBLE          reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CHAR            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    BOOLEAN         reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    $end            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    LLAVE_CIERRA    reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    DEFAULT         reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)
    CASE            reduce using rule 16 (instruccion -> declArr_instr finInstruccion .)


state 46

    (17) instruccion -> modArr_instr finInstruccion .

    error           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    IDENTIFICADOR   reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    IF              reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    SWITCH          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    WHILE           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    FOR             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    PRINT           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    BREAK           reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CONTINUE        reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    RETURN          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    MAIN            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    FUNC            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    VAR             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    STRING          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    INT             reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    DOUBLE          reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CHAR            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    BOOLEAN         reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    $end            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    LLAVE_CIERRA    reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    DEFAULT         reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)
    CASE            reduce using rule 17 (instruccion -> modArr_instr finInstruccion .)


state 47

    (18) instruccion -> declArr_instr2 finInstruccion .

    error           reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    IDENTIFICADOR   reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    IF              reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    SWITCH          reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    WHILE           reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    FOR             reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    PRINT           reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    BREAK           reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    CONTINUE        reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    RETURN          reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    MAIN            reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    FUNC            reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    VAR             reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    STRING          reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    INT             reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    DOUBLE          reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    CHAR            reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    BOOLEAN         reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    $end            reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    LLAVE_CIERRA    reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    DEFAULT         reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)
    CASE            reduce using rule 18 (instruccion -> declArr_instr2 finInstruccion .)


state 48

    (19) instruccion -> error PTCOMA .

    error           reduce using rule 19 (instruccion -> error PTCOMA .)
    IDENTIFICADOR   reduce using rule 19 (instruccion -> error PTCOMA .)
    IF              reduce using rule 19 (instruccion -> error PTCOMA .)
    SWITCH          reduce using rule 19 (instruccion -> error PTCOMA .)
    WHILE           reduce using rule 19 (instruccion -> error PTCOMA .)
    FOR             reduce using rule 19 (instruccion -> error PTCOMA .)
    PRINT           reduce using rule 19 (instruccion -> error PTCOMA .)
    BREAK           reduce using rule 19 (instruccion -> error PTCOMA .)
    CONTINUE        reduce using rule 19 (instruccion -> error PTCOMA .)
    RETURN          reduce using rule 19 (instruccion -> error PTCOMA .)
    MAIN            reduce using rule 19 (instruccion -> error PTCOMA .)
    FUNC            reduce using rule 19 (instruccion -> error PTCOMA .)
    VAR             reduce using rule 19 (instruccion -> error PTCOMA .)
    STRING          reduce using rule 19 (instruccion -> error PTCOMA .)
    INT             reduce using rule 19 (instruccion -> error PTCOMA .)
    DOUBLE          reduce using rule 19 (instruccion -> error PTCOMA .)
    CHAR            reduce using rule 19 (instruccion -> error PTCOMA .)
    BOOLEAN         reduce using rule 19 (instruccion -> error PTCOMA .)
    $end            reduce using rule 19 (instruccion -> error PTCOMA .)
    LLAVE_CIERRA    reduce using rule 19 (instruccion -> error PTCOMA .)
    DEFAULT         reduce using rule 19 (instruccion -> error PTCOMA .)
    CASE            reduce using rule 19 (instruccion -> error PTCOMA .)


state 49

    (20) variables -> var IDENTIFICADOR . finInstruccion
    (21) variables -> var IDENTIFICADOR . IGUAL expresion finInstruccion
    (22) variables -> var IDENTIFICADOR . IGUAL NULL finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    IGUAL           shift and go to state 87
    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 86

state 50

    (23) variables -> IDENTIFICADOR IGUAL . expresion finInstruccion
    (24) variables -> IDENTIFICADOR IGUAL . NULL finInstruccion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 89
    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 88
    llamada_fvoid                  shift and go to state 74

state 51

    (26) variables -> IDENTIFICADOR INCREMENTO . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 90

state 52

    (27) variables -> IDENTIFICADOR DECREMENTO . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 91

state 53

    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA
    (48) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE . parametros_llamada PARENTESIS_CIERRA
    (70) parametros_llamada -> . parametros_llamada COMA parametro_llamada
    (71) parametros_llamada -> . parametro_llamada
    (72) parametro_llamada -> . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 92
    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    parametros_llamada             shift and go to state 93
    parametro_llamada              shift and go to state 94
    expresion                      shift and go to state 95
    llamada_fvoid                  shift and go to state 74

state 54

    (60) modArr_instr -> IDENTIFICADOR lista_expresiones . IGUAL expresion
    (53) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    IGUAL           shift and go to state 96
    CORCHETE_ABRE   shift and go to state 97


state 55

    (54) lista_expresiones -> CORCHETE_ABRE . expresion CORCHETE_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 98
    llamada_fvoid                  shift and go to state 74

state 56

    (28) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 99
    llamada_fvoid                  shift and go to state 74

state 57

    (31) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> SWITCH PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 100
    llamada_fvoid                  shift and go to state 74

state 58

    (39) while -> WHILE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 101
    llamada_fvoid                  shift and go to state 74

state 59

    (40) for -> FOR PARENTESIS_ABRE . declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> FOR PARENTESIS_ABRE . declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (42) declaracionfor1 -> . VAR IDENTIFICADOR IGUAL expresion
    (43) declaracionfor2 -> . IDENTIFICADOR IGUAL expresion

    VAR             shift and go to state 104
    IDENTIFICADOR   shift and go to state 105

    declaracionfor1                shift and go to state 102
    declaracionfor2                shift and go to state 103

state 60

    (82) print -> PRINT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA finInstruccion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 106
    llamada_fvoid                  shift and go to state 74

state 61

    (83) break -> BREAK finInstruccion .

    error           reduce using rule 83 (break -> BREAK finInstruccion .)
    IDENTIFICADOR   reduce using rule 83 (break -> BREAK finInstruccion .)
    IF              reduce using rule 83 (break -> BREAK finInstruccion .)
    SWITCH          reduce using rule 83 (break -> BREAK finInstruccion .)
    WHILE           reduce using rule 83 (break -> BREAK finInstruccion .)
    FOR             reduce using rule 83 (break -> BREAK finInstruccion .)
    PRINT           reduce using rule 83 (break -> BREAK finInstruccion .)
    BREAK           reduce using rule 83 (break -> BREAK finInstruccion .)
    CONTINUE        reduce using rule 83 (break -> BREAK finInstruccion .)
    RETURN          reduce using rule 83 (break -> BREAK finInstruccion .)
    MAIN            reduce using rule 83 (break -> BREAK finInstruccion .)
    FUNC            reduce using rule 83 (break -> BREAK finInstruccion .)
    VAR             reduce using rule 83 (break -> BREAK finInstruccion .)
    STRING          reduce using rule 83 (break -> BREAK finInstruccion .)
    INT             reduce using rule 83 (break -> BREAK finInstruccion .)
    DOUBLE          reduce using rule 83 (break -> BREAK finInstruccion .)
    CHAR            reduce using rule 83 (break -> BREAK finInstruccion .)
    BOOLEAN         reduce using rule 83 (break -> BREAK finInstruccion .)
    $end            reduce using rule 83 (break -> BREAK finInstruccion .)
    LLAVE_CIERRA    reduce using rule 83 (break -> BREAK finInstruccion .)
    DEFAULT         reduce using rule 83 (break -> BREAK finInstruccion .)
    CASE            reduce using rule 83 (break -> BREAK finInstruccion .)


state 62

    (84) continue -> CONTINUE finInstruccion .

    error           reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    IDENTIFICADOR   reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    IF              reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    SWITCH          reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    WHILE           reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    FOR             reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    PRINT           reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    BREAK           reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    CONTINUE        reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    RETURN          reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    MAIN            reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    FUNC            reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    VAR             reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    STRING          reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    INT             reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    DOUBLE          reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    CHAR            reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    BOOLEAN         reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    $end            reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    LLAVE_CIERRA    reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    DEFAULT         reduce using rule 84 (continue -> CONTINUE finInstruccion .)
    CASE            reduce using rule 84 (continue -> CONTINUE finInstruccion .)


state 63

    (69) returnn -> RETURN expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 69 (returnn -> RETURN expresion .)
    error           reduce using rule 69 (returnn -> RETURN expresion .)
    IDENTIFICADOR   reduce using rule 69 (returnn -> RETURN expresion .)
    IF              reduce using rule 69 (returnn -> RETURN expresion .)
    SWITCH          reduce using rule 69 (returnn -> RETURN expresion .)
    WHILE           reduce using rule 69 (returnn -> RETURN expresion .)
    FOR             reduce using rule 69 (returnn -> RETURN expresion .)
    PRINT           reduce using rule 69 (returnn -> RETURN expresion .)
    BREAK           reduce using rule 69 (returnn -> RETURN expresion .)
    CONTINUE        reduce using rule 69 (returnn -> RETURN expresion .)
    RETURN          reduce using rule 69 (returnn -> RETURN expresion .)
    MAIN            reduce using rule 69 (returnn -> RETURN expresion .)
    FUNC            reduce using rule 69 (returnn -> RETURN expresion .)
    VAR             reduce using rule 69 (returnn -> RETURN expresion .)
    STRING          reduce using rule 69 (returnn -> RETURN expresion .)
    INT             reduce using rule 69 (returnn -> RETURN expresion .)
    DOUBLE          reduce using rule 69 (returnn -> RETURN expresion .)
    CHAR            reduce using rule 69 (returnn -> RETURN expresion .)
    BOOLEAN         reduce using rule 69 (returnn -> RETURN expresion .)
    $end            reduce using rule 69 (returnn -> RETURN expresion .)
    LLAVE_CIERRA    reduce using rule 69 (returnn -> RETURN expresion .)
    DEFAULT         reduce using rule 69 (returnn -> RETURN expresion .)
    CASE            reduce using rule 69 (returnn -> RETURN expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 64

    (101) expresion -> MENOS . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 121
    llamada_fvoid                  shift and go to state 74

state 65

    (102) expresion -> NOT . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 122
    llamada_fvoid                  shift and go to state 74

state 66

    (103) expresion -> IDENTIFICADOR . INCREMENTO
    (104) expresion -> IDENTIFICADOR . DECREMENTO
    (110) expresion -> IDENTIFICADOR .
    (125) expresion -> IDENTIFICADOR . lista_expresiones
    (47) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> IDENTIFICADOR . PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (53) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (54) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    INCREMENTO      shift and go to state 123
    DECREMENTO      shift and go to state 124
    MAS             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MENOS           reduce using rule 110 (expresion -> IDENTIFICADOR .)
    POR             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    DIV             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    POT             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MODULO          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    IGUALACION      reduce using rule 110 (expresion -> IDENTIFICADOR .)
    DIREFENCIACION  reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MAYORQ          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MENORQ          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MAYORIGUAL      reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MENORIGUAL      reduce using rule 110 (expresion -> IDENTIFICADOR .)
    OR              reduce using rule 110 (expresion -> IDENTIFICADOR .)
    AND             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    PTCOMA          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    error           reduce using rule 110 (expresion -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 110 (expresion -> IDENTIFICADOR .)
    IF              reduce using rule 110 (expresion -> IDENTIFICADOR .)
    SWITCH          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    WHILE           reduce using rule 110 (expresion -> IDENTIFICADOR .)
    FOR             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    PRINT           reduce using rule 110 (expresion -> IDENTIFICADOR .)
    BREAK           reduce using rule 110 (expresion -> IDENTIFICADOR .)
    CONTINUE        reduce using rule 110 (expresion -> IDENTIFICADOR .)
    RETURN          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    MAIN            reduce using rule 110 (expresion -> IDENTIFICADOR .)
    FUNC            reduce using rule 110 (expresion -> IDENTIFICADOR .)
    VAR             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    STRING          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    INT             reduce using rule 110 (expresion -> IDENTIFICADOR .)
    DOUBLE          reduce using rule 110 (expresion -> IDENTIFICADOR .)
    CHAR            reduce using rule 110 (expresion -> IDENTIFICADOR .)
    BOOLEAN         reduce using rule 110 (expresion -> IDENTIFICADOR .)
    $end            reduce using rule 110 (expresion -> IDENTIFICADOR .)
    LLAVE_CIERRA    reduce using rule 110 (expresion -> IDENTIFICADOR .)
    DEFAULT         reduce using rule 110 (expresion -> IDENTIFICADOR .)
    CASE            reduce using rule 110 (expresion -> IDENTIFICADOR .)
    PARENTESIS_CIERRA reduce using rule 110 (expresion -> IDENTIFICADOR .)
    COMA            reduce using rule 110 (expresion -> IDENTIFICADOR .)
    CORCHETE_CIERRA reduce using rule 110 (expresion -> IDENTIFICADOR .)
    DOSPUNTOS       reduce using rule 110 (expresion -> IDENTIFICADOR .)
    PARENTESIS_ABRE shift and go to state 53
    CORCHETE_ABRE   shift and go to state 55

    lista_expresiones              shift and go to state 125

state 67

    (105) expresion -> PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (120) expresion -> PARENTESIS_ABRE . INT PARENTESIS_CIERRA expresion
    (121) expresion -> PARENTESIS_ABRE . DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> PARENTESIS_ABRE . STRING PARENTESIS_CIERRA expresion
    (123) expresion -> PARENTESIS_ABRE . BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> PARENTESIS_ABRE . CHAR PARENTESIS_CIERRA expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    INT             shift and go to state 127
    DOUBLE          shift and go to state 128
    STRING          shift and go to state 129
    BOOLEAN         shift and go to state 130
    CHAR            shift and go to state 131
    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 126
    llamada_fvoid                  shift and go to state 74

state 68

    (106) expresion -> ENTERO .

    MAS             reduce using rule 106 (expresion -> ENTERO .)
    MENOS           reduce using rule 106 (expresion -> ENTERO .)
    POR             reduce using rule 106 (expresion -> ENTERO .)
    DIV             reduce using rule 106 (expresion -> ENTERO .)
    POT             reduce using rule 106 (expresion -> ENTERO .)
    MODULO          reduce using rule 106 (expresion -> ENTERO .)
    IGUALACION      reduce using rule 106 (expresion -> ENTERO .)
    DIREFENCIACION  reduce using rule 106 (expresion -> ENTERO .)
    MAYORQ          reduce using rule 106 (expresion -> ENTERO .)
    MENORQ          reduce using rule 106 (expresion -> ENTERO .)
    MAYORIGUAL      reduce using rule 106 (expresion -> ENTERO .)
    MENORIGUAL      reduce using rule 106 (expresion -> ENTERO .)
    OR              reduce using rule 106 (expresion -> ENTERO .)
    AND             reduce using rule 106 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 106 (expresion -> ENTERO .)
    error           reduce using rule 106 (expresion -> ENTERO .)
    IDENTIFICADOR   reduce using rule 106 (expresion -> ENTERO .)
    IF              reduce using rule 106 (expresion -> ENTERO .)
    SWITCH          reduce using rule 106 (expresion -> ENTERO .)
    WHILE           reduce using rule 106 (expresion -> ENTERO .)
    FOR             reduce using rule 106 (expresion -> ENTERO .)
    PRINT           reduce using rule 106 (expresion -> ENTERO .)
    BREAK           reduce using rule 106 (expresion -> ENTERO .)
    CONTINUE        reduce using rule 106 (expresion -> ENTERO .)
    RETURN          reduce using rule 106 (expresion -> ENTERO .)
    MAIN            reduce using rule 106 (expresion -> ENTERO .)
    FUNC            reduce using rule 106 (expresion -> ENTERO .)
    VAR             reduce using rule 106 (expresion -> ENTERO .)
    STRING          reduce using rule 106 (expresion -> ENTERO .)
    INT             reduce using rule 106 (expresion -> ENTERO .)
    DOUBLE          reduce using rule 106 (expresion -> ENTERO .)
    CHAR            reduce using rule 106 (expresion -> ENTERO .)
    BOOLEAN         reduce using rule 106 (expresion -> ENTERO .)
    $end            reduce using rule 106 (expresion -> ENTERO .)
    LLAVE_CIERRA    reduce using rule 106 (expresion -> ENTERO .)
    DEFAULT         reduce using rule 106 (expresion -> ENTERO .)
    CASE            reduce using rule 106 (expresion -> ENTERO .)
    PARENTESIS_CIERRA reduce using rule 106 (expresion -> ENTERO .)
    COMA            reduce using rule 106 (expresion -> ENTERO .)
    CORCHETE_CIERRA reduce using rule 106 (expresion -> ENTERO .)
    DOSPUNTOS       reduce using rule 106 (expresion -> ENTERO .)


state 69

    (107) expresion -> DECIMAL .

    MAS             reduce using rule 107 (expresion -> DECIMAL .)
    MENOS           reduce using rule 107 (expresion -> DECIMAL .)
    POR             reduce using rule 107 (expresion -> DECIMAL .)
    DIV             reduce using rule 107 (expresion -> DECIMAL .)
    POT             reduce using rule 107 (expresion -> DECIMAL .)
    MODULO          reduce using rule 107 (expresion -> DECIMAL .)
    IGUALACION      reduce using rule 107 (expresion -> DECIMAL .)
    DIREFENCIACION  reduce using rule 107 (expresion -> DECIMAL .)
    MAYORQ          reduce using rule 107 (expresion -> DECIMAL .)
    MENORQ          reduce using rule 107 (expresion -> DECIMAL .)
    MAYORIGUAL      reduce using rule 107 (expresion -> DECIMAL .)
    MENORIGUAL      reduce using rule 107 (expresion -> DECIMAL .)
    OR              reduce using rule 107 (expresion -> DECIMAL .)
    AND             reduce using rule 107 (expresion -> DECIMAL .)
    PTCOMA          reduce using rule 107 (expresion -> DECIMAL .)
    error           reduce using rule 107 (expresion -> DECIMAL .)
    IDENTIFICADOR   reduce using rule 107 (expresion -> DECIMAL .)
    IF              reduce using rule 107 (expresion -> DECIMAL .)
    SWITCH          reduce using rule 107 (expresion -> DECIMAL .)
    WHILE           reduce using rule 107 (expresion -> DECIMAL .)
    FOR             reduce using rule 107 (expresion -> DECIMAL .)
    PRINT           reduce using rule 107 (expresion -> DECIMAL .)
    BREAK           reduce using rule 107 (expresion -> DECIMAL .)
    CONTINUE        reduce using rule 107 (expresion -> DECIMAL .)
    RETURN          reduce using rule 107 (expresion -> DECIMAL .)
    MAIN            reduce using rule 107 (expresion -> DECIMAL .)
    FUNC            reduce using rule 107 (expresion -> DECIMAL .)
    VAR             reduce using rule 107 (expresion -> DECIMAL .)
    STRING          reduce using rule 107 (expresion -> DECIMAL .)
    INT             reduce using rule 107 (expresion -> DECIMAL .)
    DOUBLE          reduce using rule 107 (expresion -> DECIMAL .)
    CHAR            reduce using rule 107 (expresion -> DECIMAL .)
    BOOLEAN         reduce using rule 107 (expresion -> DECIMAL .)
    $end            reduce using rule 107 (expresion -> DECIMAL .)
    LLAVE_CIERRA    reduce using rule 107 (expresion -> DECIMAL .)
    DEFAULT         reduce using rule 107 (expresion -> DECIMAL .)
    CASE            reduce using rule 107 (expresion -> DECIMAL .)
    PARENTESIS_CIERRA reduce using rule 107 (expresion -> DECIMAL .)
    COMA            reduce using rule 107 (expresion -> DECIMAL .)
    CORCHETE_CIERRA reduce using rule 107 (expresion -> DECIMAL .)
    DOSPUNTOS       reduce using rule 107 (expresion -> DECIMAL .)


state 70

    (108) expresion -> TRUE .

    MAS             reduce using rule 108 (expresion -> TRUE .)
    MENOS           reduce using rule 108 (expresion -> TRUE .)
    POR             reduce using rule 108 (expresion -> TRUE .)
    DIV             reduce using rule 108 (expresion -> TRUE .)
    POT             reduce using rule 108 (expresion -> TRUE .)
    MODULO          reduce using rule 108 (expresion -> TRUE .)
    IGUALACION      reduce using rule 108 (expresion -> TRUE .)
    DIREFENCIACION  reduce using rule 108 (expresion -> TRUE .)
    MAYORQ          reduce using rule 108 (expresion -> TRUE .)
    MENORQ          reduce using rule 108 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 108 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 108 (expresion -> TRUE .)
    OR              reduce using rule 108 (expresion -> TRUE .)
    AND             reduce using rule 108 (expresion -> TRUE .)
    PTCOMA          reduce using rule 108 (expresion -> TRUE .)
    error           reduce using rule 108 (expresion -> TRUE .)
    IDENTIFICADOR   reduce using rule 108 (expresion -> TRUE .)
    IF              reduce using rule 108 (expresion -> TRUE .)
    SWITCH          reduce using rule 108 (expresion -> TRUE .)
    WHILE           reduce using rule 108 (expresion -> TRUE .)
    FOR             reduce using rule 108 (expresion -> TRUE .)
    PRINT           reduce using rule 108 (expresion -> TRUE .)
    BREAK           reduce using rule 108 (expresion -> TRUE .)
    CONTINUE        reduce using rule 108 (expresion -> TRUE .)
    RETURN          reduce using rule 108 (expresion -> TRUE .)
    MAIN            reduce using rule 108 (expresion -> TRUE .)
    FUNC            reduce using rule 108 (expresion -> TRUE .)
    VAR             reduce using rule 108 (expresion -> TRUE .)
    STRING          reduce using rule 108 (expresion -> TRUE .)
    INT             reduce using rule 108 (expresion -> TRUE .)
    DOUBLE          reduce using rule 108 (expresion -> TRUE .)
    CHAR            reduce using rule 108 (expresion -> TRUE .)
    BOOLEAN         reduce using rule 108 (expresion -> TRUE .)
    $end            reduce using rule 108 (expresion -> TRUE .)
    LLAVE_CIERRA    reduce using rule 108 (expresion -> TRUE .)
    DEFAULT         reduce using rule 108 (expresion -> TRUE .)
    CASE            reduce using rule 108 (expresion -> TRUE .)
    PARENTESIS_CIERRA reduce using rule 108 (expresion -> TRUE .)
    COMA            reduce using rule 108 (expresion -> TRUE .)
    CORCHETE_CIERRA reduce using rule 108 (expresion -> TRUE .)
    DOSPUNTOS       reduce using rule 108 (expresion -> TRUE .)


state 71

    (109) expresion -> FALSE .

    MAS             reduce using rule 109 (expresion -> FALSE .)
    MENOS           reduce using rule 109 (expresion -> FALSE .)
    POR             reduce using rule 109 (expresion -> FALSE .)
    DIV             reduce using rule 109 (expresion -> FALSE .)
    POT             reduce using rule 109 (expresion -> FALSE .)
    MODULO          reduce using rule 109 (expresion -> FALSE .)
    IGUALACION      reduce using rule 109 (expresion -> FALSE .)
    DIREFENCIACION  reduce using rule 109 (expresion -> FALSE .)
    MAYORQ          reduce using rule 109 (expresion -> FALSE .)
    MENORQ          reduce using rule 109 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 109 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 109 (expresion -> FALSE .)
    OR              reduce using rule 109 (expresion -> FALSE .)
    AND             reduce using rule 109 (expresion -> FALSE .)
    PTCOMA          reduce using rule 109 (expresion -> FALSE .)
    error           reduce using rule 109 (expresion -> FALSE .)
    IDENTIFICADOR   reduce using rule 109 (expresion -> FALSE .)
    IF              reduce using rule 109 (expresion -> FALSE .)
    SWITCH          reduce using rule 109 (expresion -> FALSE .)
    WHILE           reduce using rule 109 (expresion -> FALSE .)
    FOR             reduce using rule 109 (expresion -> FALSE .)
    PRINT           reduce using rule 109 (expresion -> FALSE .)
    BREAK           reduce using rule 109 (expresion -> FALSE .)
    CONTINUE        reduce using rule 109 (expresion -> FALSE .)
    RETURN          reduce using rule 109 (expresion -> FALSE .)
    MAIN            reduce using rule 109 (expresion -> FALSE .)
    FUNC            reduce using rule 109 (expresion -> FALSE .)
    VAR             reduce using rule 109 (expresion -> FALSE .)
    STRING          reduce using rule 109 (expresion -> FALSE .)
    INT             reduce using rule 109 (expresion -> FALSE .)
    DOUBLE          reduce using rule 109 (expresion -> FALSE .)
    CHAR            reduce using rule 109 (expresion -> FALSE .)
    BOOLEAN         reduce using rule 109 (expresion -> FALSE .)
    $end            reduce using rule 109 (expresion -> FALSE .)
    LLAVE_CIERRA    reduce using rule 109 (expresion -> FALSE .)
    DEFAULT         reduce using rule 109 (expresion -> FALSE .)
    CASE            reduce using rule 109 (expresion -> FALSE .)
    PARENTESIS_CIERRA reduce using rule 109 (expresion -> FALSE .)
    COMA            reduce using rule 109 (expresion -> FALSE .)
    CORCHETE_CIERRA reduce using rule 109 (expresion -> FALSE .)
    DOSPUNTOS       reduce using rule 109 (expresion -> FALSE .)


state 72

    (111) expresion -> CADENA .

    MAS             reduce using rule 111 (expresion -> CADENA .)
    MENOS           reduce using rule 111 (expresion -> CADENA .)
    POR             reduce using rule 111 (expresion -> CADENA .)
    DIV             reduce using rule 111 (expresion -> CADENA .)
    POT             reduce using rule 111 (expresion -> CADENA .)
    MODULO          reduce using rule 111 (expresion -> CADENA .)
    IGUALACION      reduce using rule 111 (expresion -> CADENA .)
    DIREFENCIACION  reduce using rule 111 (expresion -> CADENA .)
    MAYORQ          reduce using rule 111 (expresion -> CADENA .)
    MENORQ          reduce using rule 111 (expresion -> CADENA .)
    MAYORIGUAL      reduce using rule 111 (expresion -> CADENA .)
    MENORIGUAL      reduce using rule 111 (expresion -> CADENA .)
    OR              reduce using rule 111 (expresion -> CADENA .)
    AND             reduce using rule 111 (expresion -> CADENA .)
    PTCOMA          reduce using rule 111 (expresion -> CADENA .)
    error           reduce using rule 111 (expresion -> CADENA .)
    IDENTIFICADOR   reduce using rule 111 (expresion -> CADENA .)
    IF              reduce using rule 111 (expresion -> CADENA .)
    SWITCH          reduce using rule 111 (expresion -> CADENA .)
    WHILE           reduce using rule 111 (expresion -> CADENA .)
    FOR             reduce using rule 111 (expresion -> CADENA .)
    PRINT           reduce using rule 111 (expresion -> CADENA .)
    BREAK           reduce using rule 111 (expresion -> CADENA .)
    CONTINUE        reduce using rule 111 (expresion -> CADENA .)
    RETURN          reduce using rule 111 (expresion -> CADENA .)
    MAIN            reduce using rule 111 (expresion -> CADENA .)
    FUNC            reduce using rule 111 (expresion -> CADENA .)
    VAR             reduce using rule 111 (expresion -> CADENA .)
    STRING          reduce using rule 111 (expresion -> CADENA .)
    INT             reduce using rule 111 (expresion -> CADENA .)
    DOUBLE          reduce using rule 111 (expresion -> CADENA .)
    CHAR            reduce using rule 111 (expresion -> CADENA .)
    BOOLEAN         reduce using rule 111 (expresion -> CADENA .)
    $end            reduce using rule 111 (expresion -> CADENA .)
    LLAVE_CIERRA    reduce using rule 111 (expresion -> CADENA .)
    DEFAULT         reduce using rule 111 (expresion -> CADENA .)
    CASE            reduce using rule 111 (expresion -> CADENA .)
    PARENTESIS_CIERRA reduce using rule 111 (expresion -> CADENA .)
    COMA            reduce using rule 111 (expresion -> CADENA .)
    CORCHETE_CIERRA reduce using rule 111 (expresion -> CADENA .)
    DOSPUNTOS       reduce using rule 111 (expresion -> CADENA .)


state 73

    (112) expresion -> CHART .

    MAS             reduce using rule 112 (expresion -> CHART .)
    MENOS           reduce using rule 112 (expresion -> CHART .)
    POR             reduce using rule 112 (expresion -> CHART .)
    DIV             reduce using rule 112 (expresion -> CHART .)
    POT             reduce using rule 112 (expresion -> CHART .)
    MODULO          reduce using rule 112 (expresion -> CHART .)
    IGUALACION      reduce using rule 112 (expresion -> CHART .)
    DIREFENCIACION  reduce using rule 112 (expresion -> CHART .)
    MAYORQ          reduce using rule 112 (expresion -> CHART .)
    MENORQ          reduce using rule 112 (expresion -> CHART .)
    MAYORIGUAL      reduce using rule 112 (expresion -> CHART .)
    MENORIGUAL      reduce using rule 112 (expresion -> CHART .)
    OR              reduce using rule 112 (expresion -> CHART .)
    AND             reduce using rule 112 (expresion -> CHART .)
    PTCOMA          reduce using rule 112 (expresion -> CHART .)
    error           reduce using rule 112 (expresion -> CHART .)
    IDENTIFICADOR   reduce using rule 112 (expresion -> CHART .)
    IF              reduce using rule 112 (expresion -> CHART .)
    SWITCH          reduce using rule 112 (expresion -> CHART .)
    WHILE           reduce using rule 112 (expresion -> CHART .)
    FOR             reduce using rule 112 (expresion -> CHART .)
    PRINT           reduce using rule 112 (expresion -> CHART .)
    BREAK           reduce using rule 112 (expresion -> CHART .)
    CONTINUE        reduce using rule 112 (expresion -> CHART .)
    RETURN          reduce using rule 112 (expresion -> CHART .)
    MAIN            reduce using rule 112 (expresion -> CHART .)
    FUNC            reduce using rule 112 (expresion -> CHART .)
    VAR             reduce using rule 112 (expresion -> CHART .)
    STRING          reduce using rule 112 (expresion -> CHART .)
    INT             reduce using rule 112 (expresion -> CHART .)
    DOUBLE          reduce using rule 112 (expresion -> CHART .)
    CHAR            reduce using rule 112 (expresion -> CHART .)
    BOOLEAN         reduce using rule 112 (expresion -> CHART .)
    $end            reduce using rule 112 (expresion -> CHART .)
    LLAVE_CIERRA    reduce using rule 112 (expresion -> CHART .)
    DEFAULT         reduce using rule 112 (expresion -> CHART .)
    CASE            reduce using rule 112 (expresion -> CHART .)
    PARENTESIS_CIERRA reduce using rule 112 (expresion -> CHART .)
    COMA            reduce using rule 112 (expresion -> CHART .)
    CORCHETE_CIERRA reduce using rule 112 (expresion -> CHART .)
    DOSPUNTOS       reduce using rule 112 (expresion -> CHART .)


state 74

    (113) expresion -> llamada_fvoid .

    MAS             reduce using rule 113 (expresion -> llamada_fvoid .)
    MENOS           reduce using rule 113 (expresion -> llamada_fvoid .)
    POR             reduce using rule 113 (expresion -> llamada_fvoid .)
    DIV             reduce using rule 113 (expresion -> llamada_fvoid .)
    POT             reduce using rule 113 (expresion -> llamada_fvoid .)
    MODULO          reduce using rule 113 (expresion -> llamada_fvoid .)
    IGUALACION      reduce using rule 113 (expresion -> llamada_fvoid .)
    DIREFENCIACION  reduce using rule 113 (expresion -> llamada_fvoid .)
    MAYORQ          reduce using rule 113 (expresion -> llamada_fvoid .)
    MENORQ          reduce using rule 113 (expresion -> llamada_fvoid .)
    MAYORIGUAL      reduce using rule 113 (expresion -> llamada_fvoid .)
    MENORIGUAL      reduce using rule 113 (expresion -> llamada_fvoid .)
    OR              reduce using rule 113 (expresion -> llamada_fvoid .)
    AND             reduce using rule 113 (expresion -> llamada_fvoid .)
    PTCOMA          reduce using rule 113 (expresion -> llamada_fvoid .)
    error           reduce using rule 113 (expresion -> llamada_fvoid .)
    IDENTIFICADOR   reduce using rule 113 (expresion -> llamada_fvoid .)
    IF              reduce using rule 113 (expresion -> llamada_fvoid .)
    SWITCH          reduce using rule 113 (expresion -> llamada_fvoid .)
    WHILE           reduce using rule 113 (expresion -> llamada_fvoid .)
    FOR             reduce using rule 113 (expresion -> llamada_fvoid .)
    PRINT           reduce using rule 113 (expresion -> llamada_fvoid .)
    BREAK           reduce using rule 113 (expresion -> llamada_fvoid .)
    CONTINUE        reduce using rule 113 (expresion -> llamada_fvoid .)
    RETURN          reduce using rule 113 (expresion -> llamada_fvoid .)
    MAIN            reduce using rule 113 (expresion -> llamada_fvoid .)
    FUNC            reduce using rule 113 (expresion -> llamada_fvoid .)
    VAR             reduce using rule 113 (expresion -> llamada_fvoid .)
    STRING          reduce using rule 113 (expresion -> llamada_fvoid .)
    INT             reduce using rule 113 (expresion -> llamada_fvoid .)
    DOUBLE          reduce using rule 113 (expresion -> llamada_fvoid .)
    CHAR            reduce using rule 113 (expresion -> llamada_fvoid .)
    BOOLEAN         reduce using rule 113 (expresion -> llamada_fvoid .)
    $end            reduce using rule 113 (expresion -> llamada_fvoid .)
    LLAVE_CIERRA    reduce using rule 113 (expresion -> llamada_fvoid .)
    DEFAULT         reduce using rule 113 (expresion -> llamada_fvoid .)
    CASE            reduce using rule 113 (expresion -> llamada_fvoid .)
    PARENTESIS_CIERRA reduce using rule 113 (expresion -> llamada_fvoid .)
    COMA            reduce using rule 113 (expresion -> llamada_fvoid .)
    CORCHETE_CIERRA reduce using rule 113 (expresion -> llamada_fvoid .)
    DOSPUNTOS       reduce using rule 113 (expresion -> llamada_fvoid .)


state 75

    (114) expresion -> TOUPPER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 132


state 76

    (115) expresion -> TOLOWER . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 133


state 77

    (116) expresion -> TRUNCATE . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 134


state 78

    (117) expresion -> ROUND . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 135


state 79

    (118) expresion -> TYPEOF . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 136


state 80

    (119) expresion -> LENGHT . PARENTESIS_ABRE expresion PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 137


state 81

    (126) expresion -> READ . PARENTESIS_ABRE PARENTESIS_CIERRA

    PARENTESIS_ABRE shift and go to state 138


state 82

    (38) main -> MAIN PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 139


state 83

    (73) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> FUNC IDENTIFICADOR . PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_ABRE shift and go to state 140


state 84

    (50) tipo1 -> tip lista_Dimension . IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> tip lista_Dimension . IDENTIFICADOR IGUAL list_expresenes2
    (51) lista_Dimension -> lista_Dimension . CORCHETE_ABRE CORCHETE_CIERRA

    IDENTIFICADOR   shift and go to state 141
    CORCHETE_ABRE   shift and go to state 142


state 85

    (52) lista_Dimension -> CORCHETE_ABRE . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 143


state 86

    (20) variables -> var IDENTIFICADOR finInstruccion .

    error           reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    IDENTIFICADOR   reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    IF              reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    SWITCH          reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    WHILE           reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    FOR             reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    PRINT           reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    BREAK           reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    CONTINUE        reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    RETURN          reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    MAIN            reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    FUNC            reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    VAR             reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    STRING          reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    INT             reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    DOUBLE          reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    CHAR            reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    BOOLEAN         reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    $end            reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    LLAVE_CIERRA    reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    DEFAULT         reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)
    CASE            reduce using rule 20 (variables -> var IDENTIFICADOR finInstruccion .)


state 87

    (21) variables -> var IDENTIFICADOR IGUAL . expresion finInstruccion
    (22) variables -> var IDENTIFICADOR IGUAL . NULL finInstruccion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    NULL            shift and go to state 145
    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 144
    llamada_fvoid                  shift and go to state 74

state 88

    (23) variables -> IDENTIFICADOR IGUAL expresion . finInstruccion
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 146

state 89

    (24) variables -> IDENTIFICADOR IGUAL NULL . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 147

state 90

    (26) variables -> IDENTIFICADOR INCREMENTO finInstruccion .

    error           reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    IF              reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    SWITCH          reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    WHILE           reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FOR             reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    PRINT           reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BREAK           reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CONTINUE        reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    RETURN          reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    MAIN            reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    FUNC            reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    VAR             reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    STRING          reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    INT             reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DOUBLE          reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CHAR            reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    BOOLEAN         reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    $end            reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    DEFAULT         reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)
    CASE            reduce using rule 26 (variables -> IDENTIFICADOR INCREMENTO finInstruccion .)


state 91

    (27) variables -> IDENTIFICADOR DECREMENTO finInstruccion .

    error           reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IDENTIFICADOR   reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    IF              reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    SWITCH          reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    WHILE           reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FOR             reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    PRINT           reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BREAK           reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CONTINUE        reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    RETURN          reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    MAIN            reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    FUNC            reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    VAR             reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    STRING          reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    INT             reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DOUBLE          reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CHAR            reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    BOOLEAN         reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    $end            reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    LLAVE_CIERRA    reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    DEFAULT         reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)
    CASE            reduce using rule 27 (variables -> IDENTIFICADOR DECREMENTO finInstruccion .)


state 92

    (47) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    STRING          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    INT             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CHAR            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAS             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 47 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 93

    (48) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada . PARENTESIS_CIERRA
    (70) parametros_llamada -> parametros_llamada . COMA parametro_llamada

    PARENTESIS_CIERRA shift and go to state 148
    COMA            shift and go to state 149


state 94

    (71) parametros_llamada -> parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 71 (parametros_llamada -> parametro_llamada .)
    COMA            reduce using rule 71 (parametros_llamada -> parametro_llamada .)


state 95

    (72) parametro_llamada -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 72 (parametro_llamada -> expresion .)
    COMA            reduce using rule 72 (parametro_llamada -> expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 96

    (60) modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 150
    llamada_fvoid                  shift and go to state 74

state 97

    (53) lista_expresiones -> lista_expresiones CORCHETE_ABRE . expresion CORCHETE_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 151
    llamada_fvoid                  shift and go to state 74

state 98

    (54) lista_expresiones -> CORCHETE_ABRE expresion . CORCHETE_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    CORCHETE_CIERRA shift and go to state 152
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 99

    (28) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 153
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 100

    (31) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> SWITCH PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 154
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 101

    (39) while -> WHILE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 155
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 102

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 156


state 103

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 . PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PTCOMA          shift and go to state 157


state 104

    (42) declaracionfor1 -> VAR . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 158


state 105

    (43) declaracionfor2 -> IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 159


state 106

    (82) print -> PRINT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA finInstruccion
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 160
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 107

    (87) expresion -> expresion MAS . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 161
    llamada_fvoid                  shift and go to state 74

state 108

    (88) expresion -> expresion MENOS . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 162
    llamada_fvoid                  shift and go to state 74

state 109

    (89) expresion -> expresion POR . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 163
    llamada_fvoid                  shift and go to state 74

state 110

    (90) expresion -> expresion DIV . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 164
    llamada_fvoid                  shift and go to state 74

state 111

    (91) expresion -> expresion POT . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 165
    llamada_fvoid                  shift and go to state 74

state 112

    (92) expresion -> expresion MODULO . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 166
    llamada_fvoid                  shift and go to state 74

state 113

    (93) expresion -> expresion IGUALACION . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 167
    llamada_fvoid                  shift and go to state 74

state 114

    (94) expresion -> expresion DIREFENCIACION . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 168
    llamada_fvoid                  shift and go to state 74

state 115

    (95) expresion -> expresion MAYORQ . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 169
    llamada_fvoid                  shift and go to state 74

state 116

    (96) expresion -> expresion MENORQ . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 170
    llamada_fvoid                  shift and go to state 74

state 117

    (97) expresion -> expresion MAYORIGUAL . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 171
    llamada_fvoid                  shift and go to state 74

state 118

    (98) expresion -> expresion MENORIGUAL . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 172
    llamada_fvoid                  shift and go to state 74

state 119

    (99) expresion -> expresion OR . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 173
    llamada_fvoid                  shift and go to state 74

state 120

    (100) expresion -> expresion AND . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 174
    llamada_fvoid                  shift and go to state 74

state 121

    (101) expresion -> MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 101 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 101 (expresion -> MENOS expresion .)
    POR             reduce using rule 101 (expresion -> MENOS expresion .)
    DIV             reduce using rule 101 (expresion -> MENOS expresion .)
    POT             reduce using rule 101 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 101 (expresion -> MENOS expresion .)
    IGUALACION      reduce using rule 101 (expresion -> MENOS expresion .)
    DIREFENCIACION  reduce using rule 101 (expresion -> MENOS expresion .)
    MAYORQ          reduce using rule 101 (expresion -> MENOS expresion .)
    MENORQ          reduce using rule 101 (expresion -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 101 (expresion -> MENOS expresion .)
    MENORIGUAL      reduce using rule 101 (expresion -> MENOS expresion .)
    OR              reduce using rule 101 (expresion -> MENOS expresion .)
    AND             reduce using rule 101 (expresion -> MENOS expresion .)
    PTCOMA          reduce using rule 101 (expresion -> MENOS expresion .)
    error           reduce using rule 101 (expresion -> MENOS expresion .)
    IDENTIFICADOR   reduce using rule 101 (expresion -> MENOS expresion .)
    IF              reduce using rule 101 (expresion -> MENOS expresion .)
    SWITCH          reduce using rule 101 (expresion -> MENOS expresion .)
    WHILE           reduce using rule 101 (expresion -> MENOS expresion .)
    FOR             reduce using rule 101 (expresion -> MENOS expresion .)
    PRINT           reduce using rule 101 (expresion -> MENOS expresion .)
    BREAK           reduce using rule 101 (expresion -> MENOS expresion .)
    CONTINUE        reduce using rule 101 (expresion -> MENOS expresion .)
    RETURN          reduce using rule 101 (expresion -> MENOS expresion .)
    MAIN            reduce using rule 101 (expresion -> MENOS expresion .)
    FUNC            reduce using rule 101 (expresion -> MENOS expresion .)
    VAR             reduce using rule 101 (expresion -> MENOS expresion .)
    STRING          reduce using rule 101 (expresion -> MENOS expresion .)
    INT             reduce using rule 101 (expresion -> MENOS expresion .)
    DOUBLE          reduce using rule 101 (expresion -> MENOS expresion .)
    CHAR            reduce using rule 101 (expresion -> MENOS expresion .)
    BOOLEAN         reduce using rule 101 (expresion -> MENOS expresion .)
    $end            reduce using rule 101 (expresion -> MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 101 (expresion -> MENOS expresion .)
    DEFAULT         reduce using rule 101 (expresion -> MENOS expresion .)
    CASE            reduce using rule 101 (expresion -> MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 101 (expresion -> MENOS expresion .)
    COMA            reduce using rule 101 (expresion -> MENOS expresion .)
    CORCHETE_CIERRA reduce using rule 101 (expresion -> MENOS expresion .)
    DOSPUNTOS       reduce using rule 101 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! POR             [ shift and go to state 109 ]
  ! DIV             [ shift and go to state 110 ]
  ! POT             [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 122

    (102) expresion -> NOT expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    OR              reduce using rule 102 (expresion -> NOT expresion .)
    AND             reduce using rule 102 (expresion -> NOT expresion .)
    PTCOMA          reduce using rule 102 (expresion -> NOT expresion .)
    error           reduce using rule 102 (expresion -> NOT expresion .)
    IDENTIFICADOR   reduce using rule 102 (expresion -> NOT expresion .)
    IF              reduce using rule 102 (expresion -> NOT expresion .)
    SWITCH          reduce using rule 102 (expresion -> NOT expresion .)
    WHILE           reduce using rule 102 (expresion -> NOT expresion .)
    FOR             reduce using rule 102 (expresion -> NOT expresion .)
    PRINT           reduce using rule 102 (expresion -> NOT expresion .)
    BREAK           reduce using rule 102 (expresion -> NOT expresion .)
    CONTINUE        reduce using rule 102 (expresion -> NOT expresion .)
    RETURN          reduce using rule 102 (expresion -> NOT expresion .)
    MAIN            reduce using rule 102 (expresion -> NOT expresion .)
    FUNC            reduce using rule 102 (expresion -> NOT expresion .)
    VAR             reduce using rule 102 (expresion -> NOT expresion .)
    STRING          reduce using rule 102 (expresion -> NOT expresion .)
    INT             reduce using rule 102 (expresion -> NOT expresion .)
    DOUBLE          reduce using rule 102 (expresion -> NOT expresion .)
    CHAR            reduce using rule 102 (expresion -> NOT expresion .)
    BOOLEAN         reduce using rule 102 (expresion -> NOT expresion .)
    $end            reduce using rule 102 (expresion -> NOT expresion .)
    LLAVE_CIERRA    reduce using rule 102 (expresion -> NOT expresion .)
    DEFAULT         reduce using rule 102 (expresion -> NOT expresion .)
    CASE            reduce using rule 102 (expresion -> NOT expresion .)
    PARENTESIS_CIERRA reduce using rule 102 (expresion -> NOT expresion .)
    COMA            reduce using rule 102 (expresion -> NOT expresion .)
    CORCHETE_CIERRA reduce using rule 102 (expresion -> NOT expresion .)
    DOSPUNTOS       reduce using rule 102 (expresion -> NOT expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118

  ! MAS             [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! MENOS           [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! POR             [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! DIV             [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! POT             [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! MODULO          [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! IGUALACION      [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! MAYORQ          [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! MENORQ          [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! MENORIGUAL      [ reduce using rule 102 (expresion -> NOT expresion .) ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 123

    (103) expresion -> IDENTIFICADOR INCREMENTO .

    MAS             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENOS           reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    POR             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIV             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    POT             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MODULO          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    IGUALACION      reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    DIREFENCIACION  reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORQ          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORQ          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAYORIGUAL      reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MENORIGUAL      reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    OR              reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    AND             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    PTCOMA          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    error           reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    IDENTIFICADOR   reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    IF              reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    SWITCH          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    WHILE           reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    FOR             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    PRINT           reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    BREAK           reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    CONTINUE        reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    RETURN          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    MAIN            reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    FUNC            reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    VAR             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    STRING          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    INT             reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOUBLE          reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    CHAR            reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    BOOLEAN         reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    $end            reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    LLAVE_CIERRA    reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    DEFAULT         reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    CASE            reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    PARENTESIS_CIERRA reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    COMA            reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    CORCHETE_CIERRA reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)
    DOSPUNTOS       reduce using rule 103 (expresion -> IDENTIFICADOR INCREMENTO .)


state 124

    (104) expresion -> IDENTIFICADOR DECREMENTO .

    MAS             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENOS           reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    POR             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIV             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    POT             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MODULO          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    IGUALACION      reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    DIREFENCIACION  reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORQ          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORQ          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAYORIGUAL      reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MENORIGUAL      reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    OR              reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    AND             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    PTCOMA          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    error           reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    IDENTIFICADOR   reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    IF              reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    SWITCH          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    WHILE           reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    FOR             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    PRINT           reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    BREAK           reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    CONTINUE        reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    RETURN          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    MAIN            reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    FUNC            reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    VAR             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    STRING          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    INT             reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOUBLE          reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    CHAR            reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    BOOLEAN         reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    $end            reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    LLAVE_CIERRA    reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    DEFAULT         reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    CASE            reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    PARENTESIS_CIERRA reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    COMA            reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    CORCHETE_CIERRA reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)
    DOSPUNTOS       reduce using rule 104 (expresion -> IDENTIFICADOR DECREMENTO .)


state 125

    (125) expresion -> IDENTIFICADOR lista_expresiones .
    (53) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    MAS             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENOS           reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    POR             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    DIV             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    POT             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MODULO          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    IGUALACION      reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    DIREFENCIACION  reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAYORQ          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENORQ          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAYORIGUAL      reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MENORIGUAL      reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    OR              reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    AND             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    PTCOMA          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    error           reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    IDENTIFICADOR   reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    IF              reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    SWITCH          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    WHILE           reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    FOR             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    PRINT           reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    BREAK           reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    CONTINUE        reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    RETURN          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    MAIN            reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    FUNC            reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    VAR             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    STRING          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    INT             reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    DOUBLE          reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    CHAR            reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    BOOLEAN         reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    $end            reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    LLAVE_CIERRA    reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    DEFAULT         reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    CASE            reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    PARENTESIS_CIERRA reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    COMA            reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    CORCHETE_CIERRA reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    DOSPUNTOS       reduce using rule 125 (expresion -> IDENTIFICADOR lista_expresiones .)
    CORCHETE_ABRE   shift and go to state 97


state 126

    (105) expresion -> PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 175
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 127

    (120) expresion -> PARENTESIS_ABRE INT . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 176


state 128

    (121) expresion -> PARENTESIS_ABRE DOUBLE . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 177


state 129

    (122) expresion -> PARENTESIS_ABRE STRING . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 178


state 130

    (123) expresion -> PARENTESIS_ABRE BOOLEAN . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 179


state 131

    (124) expresion -> PARENTESIS_ABRE CHAR . PARENTESIS_CIERRA expresion

    PARENTESIS_CIERRA shift and go to state 180


state 132

    (114) expresion -> TOUPPER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 181
    llamada_fvoid                  shift and go to state 74

state 133

    (115) expresion -> TOLOWER PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 182
    llamada_fvoid                  shift and go to state 74

state 134

    (116) expresion -> TRUNCATE PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 183
    llamada_fvoid                  shift and go to state 74

state 135

    (117) expresion -> ROUND PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 184
    llamada_fvoid                  shift and go to state 74

state 136

    (118) expresion -> TYPEOF PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 185
    llamada_fvoid                  shift and go to state 74

state 137

    (119) expresion -> LENGHT PARENTESIS_ABRE . expresion PARENTESIS_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 186
    llamada_fvoid                  shift and go to state 74

state 138

    (126) expresion -> READ PARENTESIS_ABRE . PARENTESIS_CIERRA

    PARENTESIS_CIERRA shift and go to state 187


state 139

    (38) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 188


state 140

    (73) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE . parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (75) parametros -> . parametros COMA parametro
    (76) parametros -> . parametro
    (77) parametro -> . INT IDENTIFICADOR
    (78) parametro -> . STRING IDENTIFICADOR
    (79) parametro -> . DOUBLE IDENTIFICADOR
    (80) parametro -> . BOOLEAN IDENTIFICADOR
    (81) parametro -> . CHAR IDENTIFICADOR

    PARENTESIS_CIERRA shift and go to state 189
    INT             shift and go to state 192
    STRING          shift and go to state 193
    DOUBLE          shift and go to state 194
    BOOLEAN         shift and go to state 195
    CHAR            shift and go to state 196

    parametros                     shift and go to state 190
    parametro                      shift and go to state 191

state 141

    (50) tipo1 -> tip lista_Dimension IDENTIFICADOR . IGUAL NEW tip lista_expresiones
    (62) tipo2 -> tip lista_Dimension IDENTIFICADOR . IGUAL list_expresenes2

    IGUAL           shift and go to state 197


state 142

    (51) lista_Dimension -> lista_Dimension CORCHETE_ABRE . CORCHETE_CIERRA

    CORCHETE_CIERRA shift and go to state 198


state 143

    (52) lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .

    IDENTIFICADOR   reduce using rule 52 (lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 52 (lista_Dimension -> CORCHETE_ABRE CORCHETE_CIERRA .)


state 144

    (21) variables -> var IDENTIFICADOR IGUAL expresion . finInstruccion
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120
    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 199

state 145

    (22) variables -> var IDENTIFICADOR IGUAL NULL . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 200

state 146

    (23) variables -> IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    STRING          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    INT             reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DOUBLE          reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CHAR            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    BOOLEAN         reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 23 (variables -> IDENTIFICADOR IGUAL expresion finInstruccion .)


state 147

    (24) variables -> IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    STRING          reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    INT             reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DOUBLE          reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CHAR            reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    BOOLEAN         reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 24 (variables -> IDENTIFICADOR IGUAL NULL finInstruccion .)


state 148

    (48) llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .

    PTCOMA          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    error           reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IF              reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    WHILE           reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FOR             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PRINT           reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BREAK           reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    RETURN          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAIN            reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    FUNC            reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    VAR             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    STRING          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    INT             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CHAR            reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    $end            reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAS             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENOS           reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POR             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIV             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    POT             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MODULO          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    OR              reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    AND             reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CASE            reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    COMA            reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 48 (llamada_fvoid -> IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA .)


state 149

    (70) parametros_llamada -> parametros_llamada COMA . parametro_llamada
    (72) parametro_llamada -> . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    parametro_llamada              shift and go to state 201
    expresion                      shift and go to state 95
    llamada_fvoid                  shift and go to state 74

state 150

    (60) modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    error           reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    IDENTIFICADOR   reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    IF              reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    SWITCH          reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    WHILE           reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    FOR             reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    PRINT           reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    BREAK           reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CONTINUE        reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    RETURN          reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    MAIN            reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    FUNC            reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    VAR             reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    STRING          reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    INT             reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    DOUBLE          reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CHAR            reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    BOOLEAN         reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    $end            reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    DEFAULT         reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    CASE            reduce using rule 60 (modArr_instr -> IDENTIFICADOR lista_expresiones IGUAL expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 151

    (53) lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion . CORCHETE_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    CORCHETE_CIERRA shift and go to state 202
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 152

    (54) lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .

    IGUAL           reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAS             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENOS           reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POR             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIV             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POT             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MODULO          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IGUALACION      reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIREFENCIACION  reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORQ          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORQ          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORIGUAL      reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORIGUAL      reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    OR              reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    AND             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PTCOMA          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    error           reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IDENTIFICADOR   reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IF              reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    SWITCH          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    WHILE           reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FOR             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PRINT           reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BREAK           reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CONTINUE        reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    RETURN          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAIN            reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FUNC            reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    VAR             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    STRING          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    INT             reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOUBLE          reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CHAR            reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BOOLEAN         reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    $end            reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DEFAULT         reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CASE            reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    COMA            reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_CIERRA reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOSPUNTOS       reduce using rule 54 (lista_expresiones -> CORCHETE_ABRE expresion CORCHETE_CIERRA .)


state 153

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 203


state 154

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE default LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 204


state 155

    (39) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 205


state 156

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 206
    llamada_fvoid                  shift and go to state 74

state 157

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA . expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 207
    llamada_fvoid                  shift and go to state 74

state 158

    (42) declaracionfor1 -> VAR IDENTIFICADOR . IGUAL expresion

    IGUAL           shift and go to state 208


state 159

    (43) declaracionfor2 -> IDENTIFICADOR IGUAL . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 209
    llamada_fvoid                  shift and go to state 74

state 160

    (82) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA . finInstruccion
    (85) finInstruccion -> . PTCOMA
    (86) finInstruccion -> .

    PTCOMA          shift and go to state 43
    error           reduce using rule 86 (finInstruccion -> .)
    IDENTIFICADOR   reduce using rule 86 (finInstruccion -> .)
    IF              reduce using rule 86 (finInstruccion -> .)
    SWITCH          reduce using rule 86 (finInstruccion -> .)
    WHILE           reduce using rule 86 (finInstruccion -> .)
    FOR             reduce using rule 86 (finInstruccion -> .)
    PRINT           reduce using rule 86 (finInstruccion -> .)
    BREAK           reduce using rule 86 (finInstruccion -> .)
    CONTINUE        reduce using rule 86 (finInstruccion -> .)
    RETURN          reduce using rule 86 (finInstruccion -> .)
    MAIN            reduce using rule 86 (finInstruccion -> .)
    FUNC            reduce using rule 86 (finInstruccion -> .)
    VAR             reduce using rule 86 (finInstruccion -> .)
    STRING          reduce using rule 86 (finInstruccion -> .)
    INT             reduce using rule 86 (finInstruccion -> .)
    DOUBLE          reduce using rule 86 (finInstruccion -> .)
    CHAR            reduce using rule 86 (finInstruccion -> .)
    BOOLEAN         reduce using rule 86 (finInstruccion -> .)
    $end            reduce using rule 86 (finInstruccion -> .)
    LLAVE_CIERRA    reduce using rule 86 (finInstruccion -> .)
    DEFAULT         reduce using rule 86 (finInstruccion -> .)
    CASE            reduce using rule 86 (finInstruccion -> .)

    finInstruccion                 shift and go to state 210

state 161

    (87) expresion -> expresion MAS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion MAS expresion .)
    IGUALACION      reduce using rule 87 (expresion -> expresion MAS expresion .)
    DIREFENCIACION  reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYORQ          reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENORQ          reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 87 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 87 (expresion -> expresion MAS expresion .)
    PTCOMA          reduce using rule 87 (expresion -> expresion MAS expresion .)
    error           reduce using rule 87 (expresion -> expresion MAS expresion .)
    IDENTIFICADOR   reduce using rule 87 (expresion -> expresion MAS expresion .)
    IF              reduce using rule 87 (expresion -> expresion MAS expresion .)
    SWITCH          reduce using rule 87 (expresion -> expresion MAS expresion .)
    WHILE           reduce using rule 87 (expresion -> expresion MAS expresion .)
    FOR             reduce using rule 87 (expresion -> expresion MAS expresion .)
    PRINT           reduce using rule 87 (expresion -> expresion MAS expresion .)
    BREAK           reduce using rule 87 (expresion -> expresion MAS expresion .)
    CONTINUE        reduce using rule 87 (expresion -> expresion MAS expresion .)
    RETURN          reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAIN            reduce using rule 87 (expresion -> expresion MAS expresion .)
    FUNC            reduce using rule 87 (expresion -> expresion MAS expresion .)
    VAR             reduce using rule 87 (expresion -> expresion MAS expresion .)
    STRING          reduce using rule 87 (expresion -> expresion MAS expresion .)
    INT             reduce using rule 87 (expresion -> expresion MAS expresion .)
    DOUBLE          reduce using rule 87 (expresion -> expresion MAS expresion .)
    CHAR            reduce using rule 87 (expresion -> expresion MAS expresion .)
    BOOLEAN         reduce using rule 87 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 87 (expresion -> expresion MAS expresion .)
    LLAVE_CIERRA    reduce using rule 87 (expresion -> expresion MAS expresion .)
    DEFAULT         reduce using rule 87 (expresion -> expresion MAS expresion .)
    CASE            reduce using rule 87 (expresion -> expresion MAS expresion .)
    PARENTESIS_CIERRA reduce using rule 87 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MAS expresion .)
    CORCHETE_CIERRA reduce using rule 87 (expresion -> expresion MAS expresion .)
    DOSPUNTOS       reduce using rule 87 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! POR             [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! POT             [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 162

    (88) expresion -> expresion MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IGUALACION      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    DIREFENCIACION  reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYORQ          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENORQ          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 88 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PTCOMA          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    error           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IDENTIFICADOR   reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IF              reduce using rule 88 (expresion -> expresion MENOS expresion .)
    SWITCH          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    WHILE           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    FOR             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PRINT           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    BREAK           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    CONTINUE        reduce using rule 88 (expresion -> expresion MENOS expresion .)
    RETURN          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAIN            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    FUNC            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    VAR             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    STRING          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    INT             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    DOUBLE          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    CHAR            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    BOOLEAN         reduce using rule 88 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    LLAVE_CIERRA    reduce using rule 88 (expresion -> expresion MENOS expresion .)
    DEFAULT         reduce using rule 88 (expresion -> expresion MENOS expresion .)
    CASE            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PARENTESIS_CIERRA reduce using rule 88 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    CORCHETE_CIERRA reduce using rule 88 (expresion -> expresion MENOS expresion .)
    DOSPUNTOS       reduce using rule 88 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! POR             [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! POT             [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 163

    (89) expresion -> expresion POR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 89 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion POR expresion .)
    POR             reduce using rule 89 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 89 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 89 (expresion -> expresion POR expresion .)
    IGUALACION      reduce using rule 89 (expresion -> expresion POR expresion .)
    DIREFENCIACION  reduce using rule 89 (expresion -> expresion POR expresion .)
    MAYORQ          reduce using rule 89 (expresion -> expresion POR expresion .)
    MENORQ          reduce using rule 89 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion POR expresion .)
    OR              reduce using rule 89 (expresion -> expresion POR expresion .)
    AND             reduce using rule 89 (expresion -> expresion POR expresion .)
    PTCOMA          reduce using rule 89 (expresion -> expresion POR expresion .)
    error           reduce using rule 89 (expresion -> expresion POR expresion .)
    IDENTIFICADOR   reduce using rule 89 (expresion -> expresion POR expresion .)
    IF              reduce using rule 89 (expresion -> expresion POR expresion .)
    SWITCH          reduce using rule 89 (expresion -> expresion POR expresion .)
    WHILE           reduce using rule 89 (expresion -> expresion POR expresion .)
    FOR             reduce using rule 89 (expresion -> expresion POR expresion .)
    PRINT           reduce using rule 89 (expresion -> expresion POR expresion .)
    BREAK           reduce using rule 89 (expresion -> expresion POR expresion .)
    CONTINUE        reduce using rule 89 (expresion -> expresion POR expresion .)
    RETURN          reduce using rule 89 (expresion -> expresion POR expresion .)
    MAIN            reduce using rule 89 (expresion -> expresion POR expresion .)
    FUNC            reduce using rule 89 (expresion -> expresion POR expresion .)
    VAR             reduce using rule 89 (expresion -> expresion POR expresion .)
    STRING          reduce using rule 89 (expresion -> expresion POR expresion .)
    INT             reduce using rule 89 (expresion -> expresion POR expresion .)
    DOUBLE          reduce using rule 89 (expresion -> expresion POR expresion .)
    CHAR            reduce using rule 89 (expresion -> expresion POR expresion .)
    BOOLEAN         reduce using rule 89 (expresion -> expresion POR expresion .)
    $end            reduce using rule 89 (expresion -> expresion POR expresion .)
    LLAVE_CIERRA    reduce using rule 89 (expresion -> expresion POR expresion .)
    DEFAULT         reduce using rule 89 (expresion -> expresion POR expresion .)
    CASE            reduce using rule 89 (expresion -> expresion POR expresion .)
    PARENTESIS_CIERRA reduce using rule 89 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 89 (expresion -> expresion POR expresion .)
    CORCHETE_CIERRA reduce using rule 89 (expresion -> expresion POR expresion .)
    DOSPUNTOS       reduce using rule 89 (expresion -> expresion POR expresion .)
    POT             shift and go to state 111

  ! POT             [ reduce using rule 89 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! POR             [ shift and go to state 109 ]
  ! DIV             [ shift and go to state 110 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 164

    (90) expresion -> expresion DIV expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 90 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 90 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 90 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 90 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 90 (expresion -> expresion DIV expresion .)
    IGUALACION      reduce using rule 90 (expresion -> expresion DIV expresion .)
    DIREFENCIACION  reduce using rule 90 (expresion -> expresion DIV expresion .)
    MAYORQ          reduce using rule 90 (expresion -> expresion DIV expresion .)
    MENORQ          reduce using rule 90 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 90 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 90 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 90 (expresion -> expresion DIV expresion .)
    PTCOMA          reduce using rule 90 (expresion -> expresion DIV expresion .)
    error           reduce using rule 90 (expresion -> expresion DIV expresion .)
    IDENTIFICADOR   reduce using rule 90 (expresion -> expresion DIV expresion .)
    IF              reduce using rule 90 (expresion -> expresion DIV expresion .)
    SWITCH          reduce using rule 90 (expresion -> expresion DIV expresion .)
    WHILE           reduce using rule 90 (expresion -> expresion DIV expresion .)
    FOR             reduce using rule 90 (expresion -> expresion DIV expresion .)
    PRINT           reduce using rule 90 (expresion -> expresion DIV expresion .)
    BREAK           reduce using rule 90 (expresion -> expresion DIV expresion .)
    CONTINUE        reduce using rule 90 (expresion -> expresion DIV expresion .)
    RETURN          reduce using rule 90 (expresion -> expresion DIV expresion .)
    MAIN            reduce using rule 90 (expresion -> expresion DIV expresion .)
    FUNC            reduce using rule 90 (expresion -> expresion DIV expresion .)
    VAR             reduce using rule 90 (expresion -> expresion DIV expresion .)
    STRING          reduce using rule 90 (expresion -> expresion DIV expresion .)
    INT             reduce using rule 90 (expresion -> expresion DIV expresion .)
    DOUBLE          reduce using rule 90 (expresion -> expresion DIV expresion .)
    CHAR            reduce using rule 90 (expresion -> expresion DIV expresion .)
    BOOLEAN         reduce using rule 90 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 90 (expresion -> expresion DIV expresion .)
    LLAVE_CIERRA    reduce using rule 90 (expresion -> expresion DIV expresion .)
    DEFAULT         reduce using rule 90 (expresion -> expresion DIV expresion .)
    CASE            reduce using rule 90 (expresion -> expresion DIV expresion .)
    PARENTESIS_CIERRA reduce using rule 90 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 90 (expresion -> expresion DIV expresion .)
    CORCHETE_CIERRA reduce using rule 90 (expresion -> expresion DIV expresion .)
    DOSPUNTOS       reduce using rule 90 (expresion -> expresion DIV expresion .)
    POT             shift and go to state 111

  ! POT             [ reduce using rule 90 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! POR             [ shift and go to state 109 ]
  ! DIV             [ shift and go to state 110 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 165

    (91) expresion -> expresion POT expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 91 (expresion -> expresion POT expresion .)
    MENOS           reduce using rule 91 (expresion -> expresion POT expresion .)
    POR             reduce using rule 91 (expresion -> expresion POT expresion .)
    DIV             reduce using rule 91 (expresion -> expresion POT expresion .)
    POT             reduce using rule 91 (expresion -> expresion POT expresion .)
    MODULO          reduce using rule 91 (expresion -> expresion POT expresion .)
    IGUALACION      reduce using rule 91 (expresion -> expresion POT expresion .)
    DIREFENCIACION  reduce using rule 91 (expresion -> expresion POT expresion .)
    MAYORQ          reduce using rule 91 (expresion -> expresion POT expresion .)
    MENORQ          reduce using rule 91 (expresion -> expresion POT expresion .)
    MAYORIGUAL      reduce using rule 91 (expresion -> expresion POT expresion .)
    MENORIGUAL      reduce using rule 91 (expresion -> expresion POT expresion .)
    OR              reduce using rule 91 (expresion -> expresion POT expresion .)
    AND             reduce using rule 91 (expresion -> expresion POT expresion .)
    PTCOMA          reduce using rule 91 (expresion -> expresion POT expresion .)
    error           reduce using rule 91 (expresion -> expresion POT expresion .)
    IDENTIFICADOR   reduce using rule 91 (expresion -> expresion POT expresion .)
    IF              reduce using rule 91 (expresion -> expresion POT expresion .)
    SWITCH          reduce using rule 91 (expresion -> expresion POT expresion .)
    WHILE           reduce using rule 91 (expresion -> expresion POT expresion .)
    FOR             reduce using rule 91 (expresion -> expresion POT expresion .)
    PRINT           reduce using rule 91 (expresion -> expresion POT expresion .)
    BREAK           reduce using rule 91 (expresion -> expresion POT expresion .)
    CONTINUE        reduce using rule 91 (expresion -> expresion POT expresion .)
    RETURN          reduce using rule 91 (expresion -> expresion POT expresion .)
    MAIN            reduce using rule 91 (expresion -> expresion POT expresion .)
    FUNC            reduce using rule 91 (expresion -> expresion POT expresion .)
    VAR             reduce using rule 91 (expresion -> expresion POT expresion .)
    STRING          reduce using rule 91 (expresion -> expresion POT expresion .)
    INT             reduce using rule 91 (expresion -> expresion POT expresion .)
    DOUBLE          reduce using rule 91 (expresion -> expresion POT expresion .)
    CHAR            reduce using rule 91 (expresion -> expresion POT expresion .)
    BOOLEAN         reduce using rule 91 (expresion -> expresion POT expresion .)
    $end            reduce using rule 91 (expresion -> expresion POT expresion .)
    LLAVE_CIERRA    reduce using rule 91 (expresion -> expresion POT expresion .)
    DEFAULT         reduce using rule 91 (expresion -> expresion POT expresion .)
    CASE            reduce using rule 91 (expresion -> expresion POT expresion .)
    PARENTESIS_CIERRA reduce using rule 91 (expresion -> expresion POT expresion .)
    COMA            reduce using rule 91 (expresion -> expresion POT expresion .)
    CORCHETE_CIERRA reduce using rule 91 (expresion -> expresion POT expresion .)
    DOSPUNTOS       reduce using rule 91 (expresion -> expresion POT expresion .)

  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! POR             [ shift and go to state 109 ]
  ! DIV             [ shift and go to state 110 ]
  ! POT             [ shift and go to state 111 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 166

    (92) expresion -> expresion MODULO expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    MAS             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    IGUALACION      reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DIREFENCIACION  reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MAYORQ          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MENORQ          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 92 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 92 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    PTCOMA          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    error           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    IDENTIFICADOR   reduce using rule 92 (expresion -> expresion MODULO expresion .)
    IF              reduce using rule 92 (expresion -> expresion MODULO expresion .)
    SWITCH          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    WHILE           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    FOR             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    PRINT           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    BREAK           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    CONTINUE        reduce using rule 92 (expresion -> expresion MODULO expresion .)
    RETURN          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MAIN            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    FUNC            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    VAR             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    STRING          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    INT             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DOUBLE          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    CHAR            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    BOOLEAN         reduce using rule 92 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    LLAVE_CIERRA    reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DEFAULT         reduce using rule 92 (expresion -> expresion MODULO expresion .)
    CASE            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    PARENTESIS_CIERRA reduce using rule 92 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    CORCHETE_CIERRA reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DOSPUNTOS       reduce using rule 92 (expresion -> expresion MODULO expresion .)
    POT             shift and go to state 111

  ! POT             [ reduce using rule 92 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 107 ]
  ! MENOS           [ shift and go to state 108 ]
  ! POR             [ shift and go to state 109 ]
  ! DIV             [ shift and go to state 110 ]
  ! MODULO          [ shift and go to state 112 ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 167

    (93) expresion -> expresion IGUALACION expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    DIREFENCIACION  reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    MAYORQ          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    MENORQ          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    MAYORIGUAL      reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    MENORIGUAL      reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    OR              reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    AND             reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    PTCOMA          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    error           reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    IDENTIFICADOR   reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    IF              reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    SWITCH          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    WHILE           reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    FOR             reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    PRINT           reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    BREAK           reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    CONTINUE        reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    RETURN          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    MAIN            reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    FUNC            reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    VAR             reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    STRING          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    INT             reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    DOUBLE          reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    CHAR            reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    BOOLEAN         reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    $end            reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    LLAVE_CIERRA    reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    DEFAULT         reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    CASE            reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    PARENTESIS_CIERRA reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    COMA            reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    CORCHETE_CIERRA reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    DOSPUNTOS       reduce using rule 93 (expresion -> expresion IGUALACION expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 93 (expresion -> expresion IGUALACION expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion IGUALACION expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion IGUALACION expresion .) ]
  ! DIV             [ reduce using rule 93 (expresion -> expresion IGUALACION expresion .) ]
  ! POT             [ reduce using rule 93 (expresion -> expresion IGUALACION expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion IGUALACION expresion .) ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 168

    (94) expresion -> expresion DIREFENCIACION expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    DIREFENCIACION  reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORQ          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    MENORQ          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    MAYORIGUAL      reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    MENORIGUAL      reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    OR              reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    AND             reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    PTCOMA          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    error           reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    IDENTIFICADOR   reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    IF              reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    SWITCH          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    WHILE           reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    FOR             reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    PRINT           reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    BREAK           reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    CONTINUE        reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    RETURN          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    MAIN            reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    FUNC            reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    VAR             reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    STRING          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    INT             reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    DOUBLE          reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    CHAR            reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    BOOLEAN         reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    $end            reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    LLAVE_CIERRA    reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    DEFAULT         reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    CASE            reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    PARENTESIS_CIERRA reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    COMA            reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    CORCHETE_CIERRA reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    DOSPUNTOS       reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! DIV             [ reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! POT             [ reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion DIREFENCIACION expresion .) ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 169

    (95) expresion -> expresion MAYORQ expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    DIREFENCIACION  reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    MAYORQ          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    MENORQ          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    MENORIGUAL      reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    OR              reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    AND             reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    PTCOMA          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    error           reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    IDENTIFICADOR   reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    IF              reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    SWITCH          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    WHILE           reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    FOR             reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    PRINT           reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    BREAK           reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    CONTINUE        reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    RETURN          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    MAIN            reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    FUNC            reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    VAR             reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    STRING          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    INT             reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    DOUBLE          reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    CHAR            reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    BOOLEAN         reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    $end            reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    LLAVE_CIERRA    reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    DEFAULT         reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    CASE            reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    CORCHETE_CIERRA reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    DOSPUNTOS       reduce using rule 95 (expresion -> expresion MAYORQ expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 95 (expresion -> expresion MAYORQ expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion MAYORQ expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion MAYORQ expresion .) ]
  ! DIV             [ reduce using rule 95 (expresion -> expresion MAYORQ expresion .) ]
  ! POT             [ reduce using rule 95 (expresion -> expresion MAYORQ expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion MAYORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 170

    (96) expresion -> expresion MENORQ expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    DIREFENCIACION  reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    MAYORQ          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    MENORQ          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    MAYORIGUAL      reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    MENORIGUAL      reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    OR              reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    AND             reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    PTCOMA          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    error           reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    IDENTIFICADOR   reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    IF              reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    SWITCH          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    WHILE           reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    FOR             reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    PRINT           reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    BREAK           reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    CONTINUE        reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    RETURN          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    MAIN            reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    FUNC            reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    VAR             reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    STRING          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    INT             reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    DOUBLE          reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    CHAR            reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    BOOLEAN         reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    $end            reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    LLAVE_CIERRA    reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    DEFAULT         reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    CASE            reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    PARENTESIS_CIERRA reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    CORCHETE_CIERRA reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    DOSPUNTOS       reduce using rule 96 (expresion -> expresion MENORQ expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 96 (expresion -> expresion MENORQ expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion MENORQ expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> expresion MENORQ expresion .) ]
  ! DIV             [ reduce using rule 96 (expresion -> expresion MENORQ expresion .) ]
  ! POT             [ reduce using rule 96 (expresion -> expresion MENORQ expresion .) ]
  ! MODULO          [ reduce using rule 96 (expresion -> expresion MENORQ expresion .) ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 171

    (97) expresion -> expresion MAYORIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORQ          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MENORQ          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PTCOMA          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    error           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    IF              reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    SWITCH          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    WHILE           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    FOR             reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PRINT           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    BREAK           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    CONTINUE        reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    RETURN          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAIN            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    FUNC            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    VAR             reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    STRING          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    INT             reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    DOUBLE          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    CHAR            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    BOOLEAN         reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    $end            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    DEFAULT         reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    CASE            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    CORCHETE_CIERRA reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POT             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 172

    (98) expresion -> expresion MENORIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    IGUALACION      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    DIREFENCIACION  reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAYORQ          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MENORQ          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PTCOMA          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    error           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    IDENTIFICADOR   reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    IF              reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    SWITCH          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    WHILE           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    FOR             reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PRINT           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    BREAK           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    CONTINUE        reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    RETURN          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAIN            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    FUNC            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    VAR             reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    STRING          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    INT             reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    DOUBLE          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    CHAR            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    BOOLEAN         reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    $end            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    LLAVE_CIERRA    reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    DEFAULT         reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    CASE            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PARENTESIS_CIERRA reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    CORCHETE_CIERRA reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    DOSPUNTOS       reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112

  ! MAS             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIV             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POT             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALACION      [ shift and go to state 113 ]
  ! DIREFENCIACION  [ shift and go to state 114 ]
  ! MAYORQ          [ shift and go to state 115 ]
  ! MENORQ          [ shift and go to state 116 ]
  ! MAYORIGUAL      [ shift and go to state 117 ]
  ! MENORIGUAL      [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 173

    (99) expresion -> expresion OR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    OR              reduce using rule 99 (expresion -> expresion OR expresion .)
    PTCOMA          reduce using rule 99 (expresion -> expresion OR expresion .)
    error           reduce using rule 99 (expresion -> expresion OR expresion .)
    IDENTIFICADOR   reduce using rule 99 (expresion -> expresion OR expresion .)
    IF              reduce using rule 99 (expresion -> expresion OR expresion .)
    SWITCH          reduce using rule 99 (expresion -> expresion OR expresion .)
    WHILE           reduce using rule 99 (expresion -> expresion OR expresion .)
    FOR             reduce using rule 99 (expresion -> expresion OR expresion .)
    PRINT           reduce using rule 99 (expresion -> expresion OR expresion .)
    BREAK           reduce using rule 99 (expresion -> expresion OR expresion .)
    CONTINUE        reduce using rule 99 (expresion -> expresion OR expresion .)
    RETURN          reduce using rule 99 (expresion -> expresion OR expresion .)
    MAIN            reduce using rule 99 (expresion -> expresion OR expresion .)
    FUNC            reduce using rule 99 (expresion -> expresion OR expresion .)
    VAR             reduce using rule 99 (expresion -> expresion OR expresion .)
    STRING          reduce using rule 99 (expresion -> expresion OR expresion .)
    INT             reduce using rule 99 (expresion -> expresion OR expresion .)
    DOUBLE          reduce using rule 99 (expresion -> expresion OR expresion .)
    CHAR            reduce using rule 99 (expresion -> expresion OR expresion .)
    BOOLEAN         reduce using rule 99 (expresion -> expresion OR expresion .)
    $end            reduce using rule 99 (expresion -> expresion OR expresion .)
    LLAVE_CIERRA    reduce using rule 99 (expresion -> expresion OR expresion .)
    DEFAULT         reduce using rule 99 (expresion -> expresion OR expresion .)
    CASE            reduce using rule 99 (expresion -> expresion OR expresion .)
    PARENTESIS_CIERRA reduce using rule 99 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 99 (expresion -> expresion OR expresion .)
    CORCHETE_CIERRA reduce using rule 99 (expresion -> expresion OR expresion .)
    DOSPUNTOS       reduce using rule 99 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! POT             [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! IGUALACION      [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! MAYORQ          [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! MENORQ          [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 99 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 119 ]


state 174

    (100) expresion -> expresion AND expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    OR              reduce using rule 100 (expresion -> expresion AND expresion .)
    AND             reduce using rule 100 (expresion -> expresion AND expresion .)
    PTCOMA          reduce using rule 100 (expresion -> expresion AND expresion .)
    error           reduce using rule 100 (expresion -> expresion AND expresion .)
    IDENTIFICADOR   reduce using rule 100 (expresion -> expresion AND expresion .)
    IF              reduce using rule 100 (expresion -> expresion AND expresion .)
    SWITCH          reduce using rule 100 (expresion -> expresion AND expresion .)
    WHILE           reduce using rule 100 (expresion -> expresion AND expresion .)
    FOR             reduce using rule 100 (expresion -> expresion AND expresion .)
    PRINT           reduce using rule 100 (expresion -> expresion AND expresion .)
    BREAK           reduce using rule 100 (expresion -> expresion AND expresion .)
    CONTINUE        reduce using rule 100 (expresion -> expresion AND expresion .)
    RETURN          reduce using rule 100 (expresion -> expresion AND expresion .)
    MAIN            reduce using rule 100 (expresion -> expresion AND expresion .)
    FUNC            reduce using rule 100 (expresion -> expresion AND expresion .)
    VAR             reduce using rule 100 (expresion -> expresion AND expresion .)
    STRING          reduce using rule 100 (expresion -> expresion AND expresion .)
    INT             reduce using rule 100 (expresion -> expresion AND expresion .)
    DOUBLE          reduce using rule 100 (expresion -> expresion AND expresion .)
    CHAR            reduce using rule 100 (expresion -> expresion AND expresion .)
    BOOLEAN         reduce using rule 100 (expresion -> expresion AND expresion .)
    $end            reduce using rule 100 (expresion -> expresion AND expresion .)
    LLAVE_CIERRA    reduce using rule 100 (expresion -> expresion AND expresion .)
    DEFAULT         reduce using rule 100 (expresion -> expresion AND expresion .)
    CASE            reduce using rule 100 (expresion -> expresion AND expresion .)
    PARENTESIS_CIERRA reduce using rule 100 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 100 (expresion -> expresion AND expresion .)
    CORCHETE_CIERRA reduce using rule 100 (expresion -> expresion AND expresion .)
    DOSPUNTOS       reduce using rule 100 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118

  ! MAS             [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! POT             [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! IGUALACION      [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! MAYORQ          [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! MENORQ          [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 100 (expresion -> expresion AND expresion .) ]
  ! OR              [ shift and go to state 119 ]
  ! AND             [ shift and go to state 120 ]


state 175

    (105) expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 105 (expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 176

    (120) expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 211
    llamada_fvoid                  shift and go to state 74

state 177

    (121) expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 212
    llamada_fvoid                  shift and go to state 74

state 178

    (122) expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 213
    llamada_fvoid                  shift and go to state 74

state 179

    (123) expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 214
    llamada_fvoid                  shift and go to state 74

state 180

    (124) expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 215
    llamada_fvoid                  shift and go to state 74

state 181

    (114) expresion -> TOUPPER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 216
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 182

    (115) expresion -> TOLOWER PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 217
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 183

    (116) expresion -> TRUNCATE PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 218
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 184

    (117) expresion -> ROUND PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 219
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 185

    (118) expresion -> TYPEOF PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 220
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 186

    (119) expresion -> LENGHT PARENTESIS_ABRE expresion . PARENTESIS_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA shift and go to state 221
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 187

    (126) expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .

    MAS             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENOS           reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POR             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIV             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    POT             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MODULO          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    OR              reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    AND             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    error           reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    IF              reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    WHILE           reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FOR             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PRINT           reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BREAK           reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    RETURN          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    MAIN            reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    FUNC            reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    VAR             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    STRING          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    INT             reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CHAR            reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    $end            reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CASE            reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    COMA            reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 126 (expresion -> READ PARENTESIS_ABRE PARENTESIS_CIERRA .)


state 188

    (38) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 222
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 189

    (73) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 223


state 190

    (74) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (75) parametros -> parametros . COMA parametro

    PARENTESIS_CIERRA shift and go to state 224
    COMA            shift and go to state 225


state 191

    (76) parametros -> parametro .

    PARENTESIS_CIERRA reduce using rule 76 (parametros -> parametro .)
    COMA            reduce using rule 76 (parametros -> parametro .)


state 192

    (77) parametro -> INT . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 226


state 193

    (78) parametro -> STRING . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 227


state 194

    (79) parametro -> DOUBLE . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 228


state 195

    (80) parametro -> BOOLEAN . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 229


state 196

    (81) parametro -> CHAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 230


state 197

    (50) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL . NEW tip lista_expresiones
    (62) tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL . list_expresenes2
    (63) list_expresenes2 -> . list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA
    (64) list_expresenes2 -> . LLAVE_ABRE valores LLAVE_CIERRA

    NEW             shift and go to state 231
    LLAVE_ABRE      shift and go to state 233

    list_expresenes2               shift and go to state 232

state 198

    (51) lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .

    IDENTIFICADOR   reduce using rule 51 (lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 51 (lista_Dimension -> lista_Dimension CORCHETE_ABRE CORCHETE_CIERRA .)


state 199

    (21) variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .

    error           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IDENTIFICADOR   reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    IF              reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    SWITCH          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    WHILE           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FOR             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    PRINT           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BREAK           reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CONTINUE        reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    RETURN          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    MAIN            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    FUNC            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    VAR             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    STRING          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    INT             reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DOUBLE          reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CHAR            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    BOOLEAN         reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    $end            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    LLAVE_CIERRA    reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    DEFAULT         reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)
    CASE            reduce using rule 21 (variables -> var IDENTIFICADOR IGUAL expresion finInstruccion .)


state 200

    (22) variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .

    error           reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IDENTIFICADOR   reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    IF              reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    SWITCH          reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    WHILE           reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FOR             reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    PRINT           reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BREAK           reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CONTINUE        reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    RETURN          reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    MAIN            reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    FUNC            reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    VAR             reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    STRING          reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    INT             reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DOUBLE          reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CHAR            reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    BOOLEAN         reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    $end            reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    LLAVE_CIERRA    reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    DEFAULT         reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)
    CASE            reduce using rule 22 (variables -> var IDENTIFICADOR IGUAL NULL finInstruccion .)


state 201

    (70) parametros_llamada -> parametros_llamada COMA parametro_llamada .

    PARENTESIS_CIERRA reduce using rule 70 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)
    COMA            reduce using rule 70 (parametros_llamada -> parametros_llamada COMA parametro_llamada .)


state 202

    (53) lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .

    IGUAL           reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_ABRE   reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAS             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENOS           reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POR             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIV             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    POT             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MODULO          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IGUALACION      reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DIREFENCIACION  reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORQ          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORQ          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAYORIGUAL      reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MENORIGUAL      reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    OR              reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    AND             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PTCOMA          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    error           reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IDENTIFICADOR   reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    IF              reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    SWITCH          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    WHILE           reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FOR             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PRINT           reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BREAK           reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CONTINUE        reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    RETURN          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    MAIN            reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    FUNC            reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    VAR             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    STRING          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    INT             reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOUBLE          reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CHAR            reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    BOOLEAN         reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    $end            reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DEFAULT         reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CASE            reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    COMA            reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    CORCHETE_CIERRA reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)
    DOSPUNTOS       reduce using rule 53 (lista_expresiones -> lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA .)


state 203

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA ELSE if
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 234
    if                             shift and go to state 5
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 204

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . listacases default LLAVE_CIERRA
    (33) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . default LLAVE_CIERRA
    (34) listacases -> . listacases case
    (35) listacases -> . case
    (37) default -> . DEFAULT DOSPUNTOS instrucciones
    (36) case -> . CASE expresion DOSPUNTOS instrucciones

    DEFAULT         shift and go to state 238
    CASE            shift and go to state 239

    listacases                     shift and go to state 235
    default                        shift and go to state 236
    case                           shift and go to state 237

state 205

    (39) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 240
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 206

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 241
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 207

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion . PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PTCOMA          shift and go to state 242
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 208

    (42) declaracionfor1 -> VAR IDENTIFICADOR IGUAL . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 243
    llamada_fvoid                  shift and go to state 74

state 209

    (43) declaracionfor2 -> IDENTIFICADOR IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 43 (declaracionfor2 -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 210

    (82) print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .

    error           reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IDENTIFICADOR   reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    IF              reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    SWITCH          reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    WHILE           reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FOR             reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    PRINT           reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BREAK           reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CONTINUE        reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    RETURN          reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    MAIN            reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    FUNC            reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    VAR             reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    STRING          reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    INT             reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DOUBLE          reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CHAR            reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    BOOLEAN         reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    $end            reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    LLAVE_CIERRA    reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    DEFAULT         reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)
    CASE            reduce using rule 82 (print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion .)


state 211

    (120) expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    error           reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 120 (expresion -> PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion .) ]


state 212

    (121) expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    error           reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 121 (expresion -> PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion .) ]


state 213

    (122) expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    error           reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 122 (expresion -> PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion .) ]


state 214

    (123) expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    error           reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 123 (expresion -> PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion .) ]


state 215

    (124) expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POT resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for IGUALACION resolved as shift
  ! shift/reduce conflict for DIREFENCIACION resolved as shift
  ! shift/reduce conflict for MAYORQ resolved as shift
  ! shift/reduce conflict for MENORQ resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    PTCOMA          reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    error           reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    IDENTIFICADOR   reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    IF              reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    SWITCH          reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    WHILE           reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    FOR             reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    PRINT           reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    BREAK           reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CONTINUE        reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    RETURN          reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    MAIN            reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    FUNC            reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    VAR             reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    STRING          reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    INT             reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DOUBLE          reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CHAR            reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    BOOLEAN         reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    $end            reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    LLAVE_CIERRA    reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DEFAULT         reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CASE            reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    PARENTESIS_CIERRA reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    COMA            reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    CORCHETE_CIERRA reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    DOSPUNTOS       reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120

  ! MAS             [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENOS           [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! POR             [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! DIV             [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! POT             [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MODULO          [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! IGUALACION      [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! DIREFENCIACION  [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MAYORQ          [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENORQ          [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! MENORIGUAL      [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! OR              [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]
  ! AND             [ reduce using rule 124 (expresion -> PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion .) ]


state 216

    (114) expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 114 (expresion -> TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 217

    (115) expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 115 (expresion -> TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 218

    (116) expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 116 (expresion -> TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 219

    (117) expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 117 (expresion -> ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 220

    (118) expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 118 (expresion -> TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 221

    (119) expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .

    MAS             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENOS           reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POR             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIV             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    POT             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MODULO          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IGUALACION      reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DIREFENCIACION  reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORQ          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORQ          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAYORIGUAL      reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MENORIGUAL      reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    OR              reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    AND             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PTCOMA          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    error           reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IDENTIFICADOR   reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    IF              reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    SWITCH          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    WHILE           reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FOR             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PRINT           reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BREAK           reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CONTINUE        reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    RETURN          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    MAIN            reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    FUNC            reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    VAR             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    STRING          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    INT             reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOUBLE          reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CHAR            reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    BOOLEAN         reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    $end            reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    LLAVE_CIERRA    reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DEFAULT         reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CASE            reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    PARENTESIS_CIERRA reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    COMA            reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    CORCHETE_CIERRA reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)
    DOSPUNTOS       reduce using rule 119 (expresion -> LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA .)


state 222

    (38) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 244
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 223

    (73) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 245
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 224

    (74) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 246


state 225

    (75) parametros -> parametros COMA . parametro
    (77) parametro -> . INT IDENTIFICADOR
    (78) parametro -> . STRING IDENTIFICADOR
    (79) parametro -> . DOUBLE IDENTIFICADOR
    (80) parametro -> . BOOLEAN IDENTIFICADOR
    (81) parametro -> . CHAR IDENTIFICADOR

    INT             shift and go to state 192
    STRING          shift and go to state 193
    DOUBLE          shift and go to state 194
    BOOLEAN         shift and go to state 195
    CHAR            shift and go to state 196

    parametro                      shift and go to state 247

state 226

    (77) parametro -> INT IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 77 (parametro -> INT IDENTIFICADOR .)
    COMA            reduce using rule 77 (parametro -> INT IDENTIFICADOR .)


state 227

    (78) parametro -> STRING IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 78 (parametro -> STRING IDENTIFICADOR .)
    COMA            reduce using rule 78 (parametro -> STRING IDENTIFICADOR .)


state 228

    (79) parametro -> DOUBLE IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 79 (parametro -> DOUBLE IDENTIFICADOR .)
    COMA            reduce using rule 79 (parametro -> DOUBLE IDENTIFICADOR .)


state 229

    (80) parametro -> BOOLEAN IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 80 (parametro -> BOOLEAN IDENTIFICADOR .)
    COMA            reduce using rule 80 (parametro -> BOOLEAN IDENTIFICADOR .)


state 230

    (81) parametro -> CHAR IDENTIFICADOR .

    PARENTESIS_CIERRA reduce using rule 81 (parametro -> CHAR IDENTIFICADOR .)
    COMA            reduce using rule 81 (parametro -> CHAR IDENTIFICADOR .)


state 231

    (50) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW . tip lista_expresiones
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    tip                            shift and go to state 248

state 232

    (62) tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .
    (63) list_expresenes2 -> list_expresenes2 . COMA LLAVE_ABRE valores LLAVE_CIERRA

    PTCOMA          reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    error           reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    IDENTIFICADOR   reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    IF              reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    SWITCH          reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    WHILE           reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    FOR             reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    PRINT           reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    BREAK           reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    CONTINUE        reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    RETURN          reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    MAIN            reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    FUNC            reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    VAR             reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    STRING          reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    INT             reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    DOUBLE          reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    CHAR            reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    BOOLEAN         reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    $end            reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    LLAVE_CIERRA    reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    DEFAULT         reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    CASE            reduce using rule 62 (tipo2 -> tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2 .)
    COMA            shift and go to state 249


state 233

    (64) list_expresenes2 -> LLAVE_ABRE . valores LLAVE_CIERRA
    (65) valores -> . list_expresenes2
    (66) valores -> . sub_expresion
    (63) list_expresenes2 -> . list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA
    (64) list_expresenes2 -> . LLAVE_ABRE valores LLAVE_CIERRA
    (67) sub_expresion -> . sub_expresion COMA expresion
    (68) sub_expresion -> . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    LLAVE_ABRE      shift and go to state 233
    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    valores                        shift and go to state 250
    list_expresenes2               shift and go to state 251
    sub_expresion                  shift and go to state 252
    expresion                      shift and go to state 253
    llamada_fvoid                  shift and go to state 74

state 234

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA ELSE if
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 254
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    if                             shift and go to state 5
    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 235

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . LLAVE_CIERRA
    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases . default LLAVE_CIERRA
    (34) listacases -> listacases . case
    (37) default -> . DEFAULT DOSPUNTOS instrucciones
    (36) case -> . CASE expresion DOSPUNTOS instrucciones

    LLAVE_CIERRA    shift and go to state 255
    DEFAULT         shift and go to state 238
    CASE            shift and go to state 239

    default                        shift and go to state 256
    case                           shift and go to state 257

state 236

    (33) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 258


state 237

    (35) listacases -> case .

    LLAVE_CIERRA    reduce using rule 35 (listacases -> case .)
    DEFAULT         reduce using rule 35 (listacases -> case .)
    CASE            reduce using rule 35 (listacases -> case .)


state 238

    (37) default -> DEFAULT . DOSPUNTOS instrucciones

    DOSPUNTOS       shift and go to state 259


state 239

    (36) case -> CASE . expresion DOSPUNTOS instrucciones
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 260
    llamada_fvoid                  shift and go to state 74

state 240

    (39) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 261
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 241

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) actualizacion -> . IDENTIFICADOR INCREMENTO
    (45) actualizacion -> . IDENTIFICADOR DECREMENTO
    (46) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 263

    actualizacion                  shift and go to state 262

state 242

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA . actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (44) actualizacion -> . IDENTIFICADOR INCREMENTO
    (45) actualizacion -> . IDENTIFICADOR DECREMENTO
    (46) actualizacion -> . IDENTIFICADOR IGUAL expresion

    IDENTIFICADOR   shift and go to state 263

    actualizacion                  shift and go to state 264

state 243

    (42) declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PTCOMA          reduce using rule 42 (declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 244

    (38) main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 38 (main -> MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 245

    (73) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 265
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 246

    (74) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 266
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 247

    (75) parametros -> parametros COMA parametro .

    PARENTESIS_CIERRA reduce using rule 75 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 75 (parametros -> parametros COMA parametro .)


state 248

    (50) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip . lista_expresiones
    (53) lista_expresiones -> . lista_expresiones CORCHETE_ABRE expresion CORCHETE_CIERRA
    (54) lista_expresiones -> . CORCHETE_ABRE expresion CORCHETE_CIERRA

    CORCHETE_ABRE   shift and go to state 55

    lista_expresiones              shift and go to state 267

state 249

    (63) list_expresenes2 -> list_expresenes2 COMA . LLAVE_ABRE valores LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 268


state 250

    (64) list_expresenes2 -> LLAVE_ABRE valores . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 269


state 251

    (65) valores -> list_expresenes2 .
    (63) list_expresenes2 -> list_expresenes2 . COMA LLAVE_ABRE valores LLAVE_CIERRA

    LLAVE_CIERRA    reduce using rule 65 (valores -> list_expresenes2 .)
    COMA            shift and go to state 249


state 252

    (66) valores -> sub_expresion .
    (67) sub_expresion -> sub_expresion . COMA expresion

    LLAVE_CIERRA    reduce using rule 66 (valores -> sub_expresion .)
    COMA            shift and go to state 270


state 253

    (68) sub_expresion -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    COMA            reduce using rule 68 (sub_expresion -> expresion .)
    LLAVE_CIERRA    reduce using rule 68 (sub_expresion -> expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 254

    (28) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .
    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA . ELSE if

    error           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 28 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    ELSE            shift and go to state 271


state 255

    (31) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .

    error           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    IF              reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    SWITCH          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    WHILE           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FOR             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    PRINT           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BREAK           reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CONTINUE        reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    RETURN          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    MAIN            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    FUNC            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    VAR             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    STRING          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    INT             reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DOUBLE          reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CHAR            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    $end            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    DEFAULT         reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)
    CASE            reduce using rule 31 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA .)


state 256

    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 272


state 257

    (34) listacases -> listacases case .

    LLAVE_CIERRA    reduce using rule 34 (listacases -> listacases case .)
    DEFAULT         reduce using rule 34 (listacases -> listacases case .)
    CASE            reduce using rule 34 (listacases -> listacases case .)


state 258

    (33) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .

    error           reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    IF              reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    SWITCH          reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    WHILE           reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FOR             reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    PRINT           reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BREAK           reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    RETURN          reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    MAIN            reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    FUNC            reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    VAR             reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    STRING          reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    INT             reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DOUBLE          reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CHAR            reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    $end            reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)
    CASE            reduce using rule 33 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA .)


state 259

    (37) default -> DEFAULT DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 273
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 260

    (36) case -> CASE expresion . DOSPUNTOS instrucciones
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    DOSPUNTOS       shift and go to state 274
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 261

    (39) while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 39 (while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 262

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 275


state 263

    (44) actualizacion -> IDENTIFICADOR . INCREMENTO
    (45) actualizacion -> IDENTIFICADOR . DECREMENTO
    (46) actualizacion -> IDENTIFICADOR . IGUAL expresion

    INCREMENTO      shift and go to state 276
    DECREMENTO      shift and go to state 277
    IGUAL           shift and go to state 278


state 264

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion . PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA

    PARENTESIS_CIERRA shift and go to state 279


state 265

    (73) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 73 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 266

    (74) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 280
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 267

    (50) tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .
    (53) lista_expresiones -> lista_expresiones . CORCHETE_ABRE expresion CORCHETE_CIERRA

    PTCOMA          reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    error           reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    IDENTIFICADOR   reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    IF              reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    SWITCH          reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    WHILE           reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    FOR             reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    PRINT           reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    BREAK           reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CONTINUE        reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    RETURN          reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    MAIN            reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    FUNC            reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    VAR             reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    STRING          reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    INT             reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    DOUBLE          reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CHAR            reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    BOOLEAN         reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    $end            reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    LLAVE_CIERRA    reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    DEFAULT         reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CASE            reduce using rule 50 (tipo1 -> tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones .)
    CORCHETE_ABRE   shift and go to state 97


state 268

    (63) list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE . valores LLAVE_CIERRA
    (65) valores -> . list_expresenes2
    (66) valores -> . sub_expresion
    (63) list_expresenes2 -> . list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA
    (64) list_expresenes2 -> . LLAVE_ABRE valores LLAVE_CIERRA
    (67) sub_expresion -> . sub_expresion COMA expresion
    (68) sub_expresion -> . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    LLAVE_ABRE      shift and go to state 233
    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    list_expresenes2               shift and go to state 251
    valores                        shift and go to state 281
    sub_expresion                  shift and go to state 252
    expresion                      shift and go to state 253
    llamada_fvoid                  shift and go to state 74

state 269

    (64) list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .

    COMA            reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    PTCOMA          reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    error           reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    IF              reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    SWITCH          reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    WHILE           reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    FOR             reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    PRINT           reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    BREAK           reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    CONTINUE        reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    RETURN          reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    MAIN            reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    FUNC            reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    VAR             reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    STRING          reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    INT             reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    DOUBLE          reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    CHAR            reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    $end            reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    DEFAULT         reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)
    CASE            reduce using rule 64 (list_expresenes2 -> LLAVE_ABRE valores LLAVE_CIERRA .)


state 270

    (67) sub_expresion -> sub_expresion COMA . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 282
    llamada_fvoid                  shift and go to state 74

state 271

    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE . if
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if

    LLAVE_ABRE      shift and go to state 283
    IF              shift and go to state 22

    if                             shift and go to state 284

state 272

    (32) switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .

    error           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    IF              reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    SWITCH          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    WHILE           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FOR             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    PRINT           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BREAK           reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CONTINUE        reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    RETURN          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    MAIN            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    FUNC            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    VAR             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    STRING          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    INT             reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DOUBLE          reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CHAR            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    $end            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    DEFAULT         reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)
    CASE            reduce using rule 32 (switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA .)


state 273

    (37) default -> DEFAULT DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    reduce using rule 37 (default -> DEFAULT DOSPUNTOS instrucciones .)
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 274

    (36) case -> CASE expresion DOSPUNTOS . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 285
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 275

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 286


state 276

    (44) actualizacion -> IDENTIFICADOR INCREMENTO .

    PARENTESIS_CIERRA reduce using rule 44 (actualizacion -> IDENTIFICADOR INCREMENTO .)


state 277

    (45) actualizacion -> IDENTIFICADOR DECREMENTO .

    PARENTESIS_CIERRA reduce using rule 45 (actualizacion -> IDENTIFICADOR DECREMENTO .)


state 278

    (46) actualizacion -> IDENTIFICADOR IGUAL . expresion
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIV expresion
    (91) expresion -> . expresion POT expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALACION expresion
    (94) expresion -> . expresion DIREFENCIACION expresion
    (95) expresion -> . expresion MAYORQ expresion
    (96) expresion -> . expresion MENORQ expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion OR expresion
    (100) expresion -> . expresion AND expresion
    (101) expresion -> . MENOS expresion
    (102) expresion -> . NOT expresion
    (103) expresion -> . IDENTIFICADOR INCREMENTO
    (104) expresion -> . IDENTIFICADOR DECREMENTO
    (105) expresion -> . PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (106) expresion -> . ENTERO
    (107) expresion -> . DECIMAL
    (108) expresion -> . TRUE
    (109) expresion -> . FALSE
    (110) expresion -> . IDENTIFICADOR
    (111) expresion -> . CADENA
    (112) expresion -> . CHART
    (113) expresion -> . llamada_fvoid
    (114) expresion -> . TOUPPER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (115) expresion -> . TOLOWER PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (116) expresion -> . TRUNCATE PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (117) expresion -> . ROUND PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (118) expresion -> . TYPEOF PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (119) expresion -> . LENGHT PARENTESIS_ABRE expresion PARENTESIS_CIERRA
    (120) expresion -> . PARENTESIS_ABRE INT PARENTESIS_CIERRA expresion
    (121) expresion -> . PARENTESIS_ABRE DOUBLE PARENTESIS_CIERRA expresion
    (122) expresion -> . PARENTESIS_ABRE STRING PARENTESIS_CIERRA expresion
    (123) expresion -> . PARENTESIS_ABRE BOOLEAN PARENTESIS_CIERRA expresion
    (124) expresion -> . PARENTESIS_ABRE CHAR PARENTESIS_CIERRA expresion
    (125) expresion -> . IDENTIFICADOR lista_expresiones
    (126) expresion -> . READ PARENTESIS_ABRE PARENTESIS_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA

    MENOS           shift and go to state 64
    NOT             shift and go to state 65
    IDENTIFICADOR   shift and go to state 66
    PARENTESIS_ABRE shift and go to state 67
    ENTERO          shift and go to state 68
    DECIMAL         shift and go to state 69
    TRUE            shift and go to state 70
    FALSE           shift and go to state 71
    CADENA          shift and go to state 72
    CHART           shift and go to state 73
    TOUPPER         shift and go to state 75
    TOLOWER         shift and go to state 76
    TRUNCATE        shift and go to state 77
    ROUND           shift and go to state 78
    TYPEOF          shift and go to state 79
    LENGHT          shift and go to state 80
    READ            shift and go to state 81

    expresion                      shift and go to state 287
    llamada_fvoid                  shift and go to state 74

state 279

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA . LLAVE_ABRE instrucciones LLAVE_CIERRA

    LLAVE_ABRE      shift and go to state 288


state 280

    (74) funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 74 (funcion_void -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 281

    (63) list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores . LLAVE_CIERRA

    LLAVE_CIERRA    shift and go to state 289


state 282

    (67) sub_expresion -> sub_expresion COMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    COMA            reduce using rule 67 (sub_expresion -> sub_expresion COMA expresion .)
    LLAVE_CIERRA    reduce using rule 67 (sub_expresion -> sub_expresion COMA expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 283

    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 290
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 284

    (30) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .

    error           reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IDENTIFICADOR   reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    IF              reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    SWITCH          reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    WHILE           reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FOR             reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    PRINT           reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BREAK           reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CONTINUE        reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    RETURN          reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    MAIN            reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    FUNC            reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    VAR             reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    STRING          reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    INT             reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DOUBLE          reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CHAR            reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    BOOLEAN         reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    $end            reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    LLAVE_CIERRA    reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    DEFAULT         reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)
    CASE            reduce using rule 30 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if .)


state 285

    (36) case -> CASE expresion DOSPUNTOS instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    reduce using rule 36 (case -> CASE expresion DOSPUNTOS instrucciones .)
    DEFAULT         reduce using rule 36 (case -> CASE expresion DOSPUNTOS instrucciones .)
    CASE            reduce using rule 36 (case -> CASE expresion DOSPUNTOS instrucciones .)
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 286

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 291
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 287

    (46) actualizacion -> IDENTIFICADOR IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIV expresion
    (91) expresion -> expresion . POT expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALACION expresion
    (94) expresion -> expresion . DIREFENCIACION expresion
    (95) expresion -> expresion . MAYORQ expresion
    (96) expresion -> expresion . MENORQ expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . OR expresion
    (100) expresion -> expresion . AND expresion

    PARENTESIS_CIERRA reduce using rule 46 (actualizacion -> IDENTIFICADOR IGUAL expresion .)
    MAS             shift and go to state 107
    MENOS           shift and go to state 108
    POR             shift and go to state 109
    DIV             shift and go to state 110
    POT             shift and go to state 111
    MODULO          shift and go to state 112
    IGUALACION      shift and go to state 113
    DIREFENCIACION  shift and go to state 114
    MAYORQ          shift and go to state 115
    MENORQ          shift and go to state 116
    MAYORIGUAL      shift and go to state 117
    MENORIGUAL      shift and go to state 118
    OR              shift and go to state 119
    AND             shift and go to state 120


state 288

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE . instrucciones LLAVE_CIERRA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instrucciones                  shift and go to state 292
    instruccion                    shift and go to state 3
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 289

    (63) list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .

    COMA            reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    PTCOMA          reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    error           reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    IF              reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    SWITCH          reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    WHILE           reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    FOR             reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    PRINT           reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    BREAK           reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    CONTINUE        reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    RETURN          reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    MAIN            reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    FUNC            reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    VAR             reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    STRING          reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    INT             reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    DOUBLE          reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    CHAR            reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    $end            reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    DEFAULT         reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)
    CASE            reduce using rule 63 (list_expresenes2 -> list_expresenes2 COMA LLAVE_ABRE valores LLAVE_CIERRA .)


state 290

    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 293
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 291

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 294
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 292

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones . LLAVE_CIERRA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . variables
    (5) instruccion -> . if
    (6) instruccion -> . switch
    (7) instruccion -> . while
    (8) instruccion -> . for
    (9) instruccion -> . print
    (10) instruccion -> . break
    (11) instruccion -> . continue
    (12) instruccion -> . returnn finInstruccion
    (13) instruccion -> . main
    (14) instruccion -> . funcion_void
    (15) instruccion -> . llamada_fvoid finInstruccion
    (16) instruccion -> . declArr_instr finInstruccion
    (17) instruccion -> . modArr_instr finInstruccion
    (18) instruccion -> . declArr_instr2 finInstruccion
    (19) instruccion -> . error PTCOMA
    (20) variables -> . var IDENTIFICADOR finInstruccion
    (21) variables -> . var IDENTIFICADOR IGUAL expresion finInstruccion
    (22) variables -> . var IDENTIFICADOR IGUAL NULL finInstruccion
    (23) variables -> . IDENTIFICADOR IGUAL expresion finInstruccion
    (24) variables -> . IDENTIFICADOR IGUAL NULL finInstruccion
    (26) variables -> . IDENTIFICADOR INCREMENTO finInstruccion
    (27) variables -> . IDENTIFICADOR DECREMENTO finInstruccion
    (28) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (29) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA
    (30) if -> . IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if
    (31) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA
    (32) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA
    (33) switch -> . SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA
    (39) while -> . WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (40) for -> . FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (41) for -> . FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (82) print -> . PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion
    (83) break -> . BREAK finInstruccion
    (84) continue -> . CONTINUE finInstruccion
    (69) returnn -> . RETURN expresion
    (38) main -> . MAIN PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (73) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (74) funcion_void -> . FUNC IDENTIFICADOR PARENTESIS_ABRE parametros PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA
    (47) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE PARENTESIS_CIERRA
    (48) llamada_fvoid -> . IDENTIFICADOR PARENTESIS_ABRE parametros_llamada PARENTESIS_CIERRA
    (49) declArr_instr -> . tipo1
    (60) modArr_instr -> . IDENTIFICADOR lista_expresiones IGUAL expresion
    (61) declArr_instr2 -> . tipo2
    (25) var -> . VAR
    (50) tipo1 -> . tip lista_Dimension IDENTIFICADOR IGUAL NEW tip lista_expresiones
    (62) tipo2 -> . tip lista_Dimension IDENTIFICADOR IGUAL list_expresenes2
    (55) tip -> . STRING
    (56) tip -> . INT
    (57) tip -> . DOUBLE
    (58) tip -> . CHAR
    (59) tip -> . BOOLEAN

    LLAVE_CIERRA    shift and go to state 295
    error           shift and go to state 19
    IDENTIFICADOR   shift and go to state 21
    IF              shift and go to state 22
    SWITCH          shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 25
    PRINT           shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    RETURN          shift and go to state 29
    MAIN            shift and go to state 30
    FUNC            shift and go to state 31
    VAR             shift and go to state 34
    STRING          shift and go to state 36
    INT             shift and go to state 37
    DOUBLE          shift and go to state 38
    CHAR            shift and go to state 39
    BOOLEAN         shift and go to state 40

    instruccion                    shift and go to state 41
    variables                      shift and go to state 4
    if                             shift and go to state 5
    switch                         shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    print                          shift and go to state 9
    break                          shift and go to state 10
    continue                       shift and go to state 11
    returnn                        shift and go to state 12
    main                           shift and go to state 13
    funcion_void                   shift and go to state 14
    llamada_fvoid                  shift and go to state 15
    declArr_instr                  shift and go to state 16
    modArr_instr                   shift and go to state 17
    declArr_instr2                 shift and go to state 18
    var                            shift and go to state 20
    tipo1                          shift and go to state 32
    tipo2                          shift and go to state 33
    tip                            shift and go to state 35

state 293

    (29) if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 29 (if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 294

    (40) for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 40 (for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)


state 295

    (41) for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .

    error           reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IDENTIFICADOR   reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    IF              reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    SWITCH          reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    WHILE           reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FOR             reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    PRINT           reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BREAK           reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CONTINUE        reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    RETURN          reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    MAIN            reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    FUNC            reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    VAR             reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    STRING          reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    INT             reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DOUBLE          reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CHAR            reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    BOOLEAN         reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    $end            reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    LLAVE_CIERRA    reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    DEFAULT         reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)
    CASE            reduce using rule 41 (for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 211 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 211 resolved as shift
WARNING: shift/reduce conflict for POR in state 211 resolved as shift
WARNING: shift/reduce conflict for DIV in state 211 resolved as shift
WARNING: shift/reduce conflict for POT in state 211 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 211 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 211 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 211 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 211 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 211 resolved as shift
WARNING: shift/reduce conflict for OR in state 211 resolved as shift
WARNING: shift/reduce conflict for AND in state 211 resolved as shift
WARNING: shift/reduce conflict for MAS in state 212 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 212 resolved as shift
WARNING: shift/reduce conflict for POR in state 212 resolved as shift
WARNING: shift/reduce conflict for DIV in state 212 resolved as shift
WARNING: shift/reduce conflict for POT in state 212 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 212 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 212 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 212 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 212 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 212 resolved as shift
WARNING: shift/reduce conflict for OR in state 212 resolved as shift
WARNING: shift/reduce conflict for AND in state 212 resolved as shift
WARNING: shift/reduce conflict for MAS in state 213 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 213 resolved as shift
WARNING: shift/reduce conflict for POR in state 213 resolved as shift
WARNING: shift/reduce conflict for DIV in state 213 resolved as shift
WARNING: shift/reduce conflict for POT in state 213 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 213 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 213 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 213 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 213 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 213 resolved as shift
WARNING: shift/reduce conflict for OR in state 213 resolved as shift
WARNING: shift/reduce conflict for AND in state 213 resolved as shift
WARNING: shift/reduce conflict for MAS in state 214 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 214 resolved as shift
WARNING: shift/reduce conflict for POR in state 214 resolved as shift
WARNING: shift/reduce conflict for DIV in state 214 resolved as shift
WARNING: shift/reduce conflict for POT in state 214 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 214 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 214 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 214 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 214 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 214 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 214 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 214 resolved as shift
WARNING: shift/reduce conflict for OR in state 214 resolved as shift
WARNING: shift/reduce conflict for AND in state 214 resolved as shift
WARNING: shift/reduce conflict for MAS in state 215 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 215 resolved as shift
WARNING: shift/reduce conflict for POR in state 215 resolved as shift
WARNING: shift/reduce conflict for DIV in state 215 resolved as shift
WARNING: shift/reduce conflict for POT in state 215 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 215 resolved as shift
WARNING: shift/reduce conflict for IGUALACION in state 215 resolved as shift
WARNING: shift/reduce conflict for DIREFENCIACION in state 215 resolved as shift
WARNING: shift/reduce conflict for MAYORQ in state 215 resolved as shift
WARNING: shift/reduce conflict for MENORQ in state 215 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 215 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 215 resolved as shift
WARNING: shift/reduce conflict for OR in state 215 resolved as shift
WARNING: shift/reduce conflict for AND in state 215 resolved as shift
