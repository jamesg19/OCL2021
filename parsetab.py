
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTTleftIGUALACIONDIREFENCIACIONMENORQMENORIGUALMAYORQMAYORIGUALleftMASMENOSleftDIVPORMODULOleftPOTleftMASMASMENOSMENOSrightUMENOSAND BREAK CADENA CASE CHAR CHART COMA COMILLAS COMILLASIMPLE CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DECREMENTO DEFAULT DIREFENCIACION DIV DOSPUNTOS DOUBLE ELSE ENTERO ESPBARRAINVERTIVA ESPCOMILLAS ESPCOMILLASIMPLE ESPLINEA ESPRETORNO ESPTAB FALSE FOR FUNC IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LENGTH LLAVE_ABRE LLAVE_CIERRA MAIN MAS MAYORIGUAL MAYORQ MENORIGUAL MENORQ MENOS MODULO NEW NOT NULL OR PARENTESIS_ABRE PARENTESIS_CIERRA POR POT PRINT PTCOMA READ RETURN STRING SWITCH TOLOWER TOUPPER TRUE VAR WHILEinit : instrucciones instrucciones : instrucciones instruccion instrucciones    :  instruccion\n    instruccion : variables\n                | if\n                | switch\n                | while\n                | for\n                | funciones \n                | print\n\n    instruccion        : error finInstruccion\n    variables : var IDENTIFICADOR finInstruccion\n     variables : var IDENTIFICADOR  IGUAL expresion  finInstruccion  variables : var IDENTIFICADOR  IGUAL NULL  finInstruccion  variables : IDENTIFICADOR IGUAL expresion finInstruccion  variables : IDENTIFICADOR  IGUAL NULL  finInstruccion  var : VAR  variables : IDENTIFICADOR INCREMENTO finInstruccion  variables : IDENTIFICADOR DECREMENTO finInstruccion \n    if : IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA  \n     if : IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA\n     if :  IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if \n    switch : SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE cases LLAVE_CIERRA\n    \n    cases : CASE expresion DOSPUNTOS break cases\n            | CASE expresion DOSPUNTOS break default\n    \n    default : DEFAULT DOSPUNTOS break\n     while : WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA  for : FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA  LLAVE_ABRE instrucciones LLAVE_CIERRA\n     for : FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA  LLAVE_ABRE instrucciones LLAVE_CIERRA\n     declaracionfor1 : VAR IDENTIFICADOR IGUAL expresion    declaracionfor2 : IDENTIFICADOR IGUAL expresion   actualizacion : IDENTIFICADOR INCREMENTO  actualizacion :  IDENTIFICADOR DECREMENTO  actualizacion :   IDENTIFICADOR IGUAL expresion \n    funciones : FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA\n    \n    parametrosf : STRING IDENTIFICADOR COMA parametrosf\n                | STRING IDENTIFICADOR \n                | INT IDENTIFICADOR COMA parametrosf\n                | INT IDENTIFICADOR\n                | CHAR IDENTIFICADOR COMA parametrosf\n                | CHAR IDENTIFICADOR\n                | DOUBLE IDENTIFICADOR COMA parametrosf\n                | DOUBLE IDENTIFICADOR\n     print : PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion  break : BREAK finInstruccion\n            |  finInstruccion : PTCOMA\n                    |  expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIV expresion\n            | expresion POT  expresion\n            | expresion MODULO expresion\n            | expresion IGUALACION expresion\n            | expresion DIREFENCIACION expresion\n            | expresion MAYORQ expresion\n            | expresion MENORQ expresion\n            | expresion MAYORIGUAL expresion\n            | expresion MENORIGUAL expresion  \n            | expresion OR expresion  \n            | expresion AND expresion \n    \n    expresion : MENOS expresion %prec UMENOS\n                | NOT expresion %prec NOTT\n     expresion : IDENTIFICADOR INCREMENTO %prec MASMAS expresion : IDENTIFICADOR DECREMENTO %prec MENOSMENOS \n    expresion : PARENTESIS_ABRE expresion PARENTESIS_CIERRA\n     expresion : ENTERO  expresion : DECIMAL  expresion : TRUE  expresion : FALSE  expresion : IDENTIFICADOR  expresion : CADENA  expresion : CHART '
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,11,11,-44,11,11,-20,-23,-27,-35,11,-22,11,11,11,11,11,-21,-28,-29,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,85,86,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,117,124,125,127,128,129,130,137,138,140,144,154,156,157,160,162,163,168,169,170,172,173,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-48,24,32,-17,-2,-11,-47,-48,36,-48,-48,36,36,36,56,36,-12,36,-72,-48,-48,36,36,36,-68,-69,-70,-71,-73,-74,-18,-19,87,-48,-48,-65,-66,-15,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-16,-63,-64,36,36,36,120,121,122,123,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,13,13,36,-44,13,36,13,142,142,-20,-23,-27,-35,36,13,-22,13,13,13,13,13,-21,-28,-29,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,149,156,157,160,162,163,168,169,170,172,173,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,14,14,-44,14,14,-20,-23,-27,-35,14,14,-22,14,14,14,14,14,-21,-28,-29,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,15,15,-44,15,15,-20,-23,-27,-35,15,-22,15,15,15,15,15,-21,-28,-29,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,16,16,-44,16,16,-20,-23,-27,-35,16,-22,16,16,16,16,16,-21,-28,-29,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,17,17,-44,17,17,-20,-23,-27,-35,17,-22,17,17,17,17,17,-21,-28,-29,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,18,18,-44,18,18,-20,-23,-27,-35,18,-22,18,18,18,18,18,-21,-28,-29,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,19,19,-44,19,19,-20,-23,-27,-35,19,-22,19,19,19,19,19,-21,-28,-29,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,31,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,124,125,128,137,138,140,144,156,157,160,162,163,168,169,170,172,173,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,55,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,20,20,-44,20,20,-20,-23,-27,-35,20,-22,20,20,20,20,20,-21,-28,-29,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,124,137,138,140,144,157,170,172,173,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,-44,-20,-23,-27,-35,-22,-21,-28,-29,]),'LLAVE_CIERRA':([3,4,5,6,7,8,9,10,11,21,22,23,24,26,27,34,36,37,38,42,43,44,45,46,47,48,49,59,60,61,62,63,78,79,80,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,124,125,126,128,132,137,138,140,144,157,159,163,164,165,167,168,169,170,171,172,173,174,],[-3,-4,-5,-6,-7,-8,-9,-10,-48,-2,-11,-47,-48,-48,-48,-12,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-19,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,-44,137,138,140,144,-20,-23,-27,-35,-22,-48,170,-24,-25,-45,172,173,-21,-46,-28,-29,-26,]),'PTCOMA':([11,24,26,27,36,37,38,42,43,44,45,46,47,53,54,59,60,61,62,79,80,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,159,],[23,23,23,23,-72,23,23,-68,-69,-70,-71,-73,-74,85,86,23,23,-65,-66,-63,-64,23,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,129,130,-31,-30,23,]),'IGUAL':([13,24,56,87,142,],[25,35,88,117,154,]),'INCREMENTO':([13,36,142,],[26,61,152,]),'DECREMENTO':([13,36,142,],[27,62,153,]),'PARENTESIS_ABRE':([14,15,16,17,19,25,28,29,30,32,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[28,29,30,31,33,41,41,41,41,57,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'CASE':([23,113,150,158,159,167,],[-47,127,-46,127,-48,-45,]),'DEFAULT':([23,150,158,159,167,],[-47,-46,166,-48,-45,]),'NULL':([25,35,],[38,60,]),'MENOS':([25,28,29,30,33,35,36,37,39,40,41,42,43,44,45,46,47,50,51,52,58,59,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,85,86,88,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,127,131,139,154,161,],[39,39,39,39,39,39,-72,65,39,39,39,-68,-69,-70,-71,-73,-74,65,65,65,65,65,-65,-66,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-63,65,65,39,39,39,-49,-50,-51,-52,-53,-54,65,65,65,65,65,65,65,65,-67,65,65,39,65,39,65,65,39,65,]),'NOT':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ENTERO':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'DECIMAL':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TRUE':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'CADENA':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'CHART':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'MAS':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,64,-68,-69,-70,-71,-73,-74,64,64,64,64,64,-65,-66,-63,64,64,-49,-50,-51,-52,-53,-54,64,64,64,64,64,64,64,64,-67,64,64,64,64,64,64,]),'POR':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,66,-68,-69,-70,-71,-73,-74,66,66,66,66,66,-65,-66,-63,66,66,66,66,-51,-52,-53,-54,66,66,66,66,66,66,66,66,-67,66,66,66,66,66,66,]),'DIV':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,67,-68,-69,-70,-71,-73,-74,67,67,67,67,67,-65,-66,-63,67,67,67,67,-51,-52,-53,-54,67,67,67,67,67,67,67,67,-67,67,67,67,67,67,67,]),'POT':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,68,-68,-69,-70,-71,-73,-74,68,68,68,68,68,-65,-66,-63,68,68,68,68,68,68,-53,68,68,68,68,68,68,68,68,68,-67,68,68,68,68,68,68,]),'MODULO':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,69,-68,-69,-70,-71,-73,-74,69,69,69,69,69,-65,-66,-63,69,69,69,69,-51,-52,-53,-54,69,69,69,69,69,69,69,69,-67,69,69,69,69,69,69,]),'IGUALACION':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,70,-68,-69,-70,-71,-73,-74,70,70,70,70,70,-65,-66,-63,70,70,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,70,70,-67,70,70,70,70,70,70,]),'DIREFENCIACION':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,71,-68,-69,-70,-71,-73,-74,71,71,71,71,71,-65,-66,-63,71,71,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,71,71,-67,71,71,71,71,71,71,]),'MAYORQ':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,72,-68,-69,-70,-71,-73,-74,72,72,72,72,72,-65,-66,-63,72,72,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,72,72,-67,72,72,72,72,72,72,]),'MENORQ':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,73,-68,-69,-70,-71,-73,-74,73,73,73,73,73,-65,-66,-63,73,73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,73,73,-67,73,73,73,73,73,73,]),'MAYORIGUAL':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,74,-68,-69,-70,-71,-73,-74,74,74,74,74,74,-65,-66,-63,74,74,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,74,74,-67,74,74,74,74,74,74,]),'MENORIGUAL':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,75,-68,-69,-70,-71,-73,-74,75,75,75,75,75,-65,-66,-63,75,75,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,75,75,-67,75,75,75,75,75,75,]),'OR':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,76,-68,-69,-70,-71,-73,-74,76,76,76,76,76,-65,-66,-63,-64,76,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,76,76,76,76,76,76,]),'AND':([36,37,42,43,44,45,46,47,50,51,52,58,59,61,62,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,118,131,139,161,],[-72,77,-68,-69,-70,-71,-73,-74,77,77,77,77,77,-65,-66,-63,-64,77,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,77,-62,-67,77,77,77,77,77,77,]),'PARENTESIS_CIERRA':([36,42,43,44,45,46,47,50,51,52,58,61,62,79,80,81,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,120,121,122,123,141,143,145,146,147,148,152,153,161,],[-72,-68,-69,-70,-71,-73,-74,82,83,84,94,-65,-66,-63,-64,111,119,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,-37,-39,-41,-43,151,155,-36,-38,-40,-42,-32,-33,-34,]),'DOSPUNTOS':([36,42,43,44,45,46,47,61,62,79,80,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,139,166,],[-72,-68,-69,-70,-71,-73,-74,-65,-66,-63,-64,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,150,171,]),'STRING':([57,133,134,135,136,],[90,90,90,90,90,]),'INT':([57,133,134,135,136,],[91,91,91,91,91,]),'CHAR':([57,133,134,135,136,],[92,92,92,92,92,]),'DOUBLE':([57,133,134,135,136,],[93,93,93,93,93,]),'LLAVE_ABRE':([82,83,84,119,149,151,155,],[112,113,114,132,156,160,162,]),'COMA':([120,121,122,123,],[133,134,135,136,]),'ELSE':([137,],[149,]),'BREAK':([150,171,],[159,159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,112,114,156,160,162,],[2,125,128,163,168,169,]),'instruccion':([0,2,112,114,125,128,156,160,162,163,168,169,],[3,21,3,3,21,21,3,3,3,21,21,21,]),'variables':([0,2,112,114,125,128,156,160,162,163,168,169,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'if':([0,2,112,114,125,128,149,156,160,162,163,168,169,],[5,5,5,5,5,5,157,5,5,5,5,5,5,]),'switch':([0,2,112,114,125,128,156,160,162,163,168,169,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'while':([0,2,112,114,125,128,156,160,162,163,168,169,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'for':([0,2,112,114,125,128,156,160,162,163,168,169,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'funciones':([0,2,112,114,125,128,156,160,162,163,168,169,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'print':([0,2,112,114,125,128,156,160,162,163,168,169,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'var':([0,2,112,114,125,128,156,160,162,163,168,169,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'finInstruccion':([11,24,26,27,37,38,59,60,94,159,],[22,34,48,49,63,78,95,96,124,167,]),'expresion':([25,28,29,30,33,35,39,40,41,64,65,66,67,68,69,70,71,72,73,74,75,76,77,85,86,88,117,127,154,],[37,50,51,52,58,59,79,80,81,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,118,131,139,161,]),'declaracionfor1':([31,],[53,]),'declaracionfor2':([31,],[54,]),'parametrosf':([57,133,134,135,136,],[89,145,146,147,148,]),'cases':([113,158,],[126,164,]),'actualizacion':([129,130,],[141,143,]),'break':([150,171,],[158,174,]),'default':([158,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_inicio','grammar.py',270),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_main','grammar.py',274),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',280),
  ('instruccion -> variables','instruccion',1,'p_declaraciones','grammar.py',288),
  ('instruccion -> if','instruccion',1,'p_declaraciones','grammar.py',289),
  ('instruccion -> switch','instruccion',1,'p_declaraciones','grammar.py',290),
  ('instruccion -> while','instruccion',1,'p_declaraciones','grammar.py',291),
  ('instruccion -> for','instruccion',1,'p_declaraciones','grammar.py',292),
  ('instruccion -> funciones','instruccion',1,'p_declaraciones','grammar.py',293),
  ('instruccion -> print','instruccion',1,'p_declaraciones','grammar.py',294),
  ('instruccion -> error finInstruccion','instruccion',2,'p_instruccion_error','grammar.py',299),
  ('variables -> var IDENTIFICADOR finInstruccion','variables',3,'p_variables1','grammar.py',305),
  ('variables -> var IDENTIFICADOR IGUAL expresion finInstruccion','variables',5,'p_declara','grammar.py',309),
  ('variables -> var IDENTIFICADOR IGUAL NULL finInstruccion','variables',5,'p_asginacionnula1','grammar.py',314),
  ('variables -> IDENTIFICADOR IGUAL expresion finInstruccion','variables',4,'p_asgina','grammar.py',318),
  ('variables -> IDENTIFICADOR IGUAL NULL finInstruccion','variables',4,'p_asginacionnula2','grammar.py',322),
  ('var -> VAR','var',1,'p_var','grammar.py',326),
  ('variables -> IDENTIFICADOR INCREMENTO finInstruccion','variables',3,'p_incrementa','grammar.py',329),
  ('variables -> IDENTIFICADOR DECREMENTO finInstruccion','variables',3,'p_decrementa','grammar.py',333),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','if',7,'p_if1','grammar.py',339),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA','if',11,'p_ifelse','grammar.py',344),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if','if',9,'p_difelseif','grammar.py',349),
  ('switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE cases LLAVE_CIERRA','switch',7,'p_switch','grammar.py',354),
  ('cases -> CASE expresion DOSPUNTOS break cases','cases',5,'p_cases','grammar.py',358),
  ('cases -> CASE expresion DOSPUNTOS break default','cases',5,'p_cases','grammar.py',359),
  ('default -> DEFAULT DOSPUNTOS break','default',3,'p_default','grammar.py',363),
  ('while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',7,'p_while','grammar.py',366),
  ('for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','for',11,'p_for1','grammar.py',369),
  ('for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','for',11,'p_for2','grammar.py',374),
  ('declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion','declaracionfor1',4,'p_declaracionfor1','grammar.py',379),
  ('declaracionfor2 -> IDENTIFICADOR IGUAL expresion','declaracionfor2',3,'p_declaracionfor2','grammar.py',383),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacionfor1','grammar.py',387),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacionfor2','grammar.py',390),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacionfor3','grammar.py',393),
  ('funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','funciones',7,'p_funciones','grammar.py',398),
  ('parametrosf -> STRING IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',402),
  ('parametrosf -> STRING IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',403),
  ('parametrosf -> INT IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',404),
  ('parametrosf -> INT IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',405),
  ('parametrosf -> CHAR IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',406),
  ('parametrosf -> CHAR IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',407),
  ('parametrosf -> DOUBLE IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',408),
  ('parametrosf -> DOUBLE IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',409),
  ('print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion','print',5,'p_print','grammar.py',412),
  ('break -> BREAK finInstruccion','break',2,'p_break','grammar.py',416),
  ('break -> <empty>','break',0,'p_break','grammar.py',417),
  ('finInstruccion -> PTCOMA','finInstruccion',1,'p_finInstruccion','grammar.py',421),
  ('finInstruccion -> <empty>','finInstruccion',0,'p_finInstruccion','grammar.py',422),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',426),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',427),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',428),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','grammar.py',429),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion_binaria','grammar.py',430),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','grammar.py',431),
  ('expresion -> expresion IGUALACION expresion','expresion',3,'p_expresion_binaria','grammar.py',432),
  ('expresion -> expresion DIREFENCIACION expresion','expresion',3,'p_expresion_binaria','grammar.py',433),
  ('expresion -> expresion MAYORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',434),
  ('expresion -> expresion MENORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',435),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',436),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',437),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',438),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',439),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',472),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','grammar.py',473),
  ('expresion -> IDENTIFICADOR INCREMENTO','expresion',2,'p_incremento','grammar.py',481),
  ('expresion -> IDENTIFICADOR DECREMENTO','expresion',2,'p_decremento','grammar.py',486),
  ('expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA','expresion',3,'p_expresion_agrupacionn','grammar.py',492),
  ('expresion -> ENTERO','expresion',1,'p_entero','grammar.py',496),
  ('expresion -> DECIMAL','expresion',1,'p_decimal','grammar.py',499),
  ('expresion -> TRUE','expresion',1,'p_true','grammar.py',502),
  ('expresion -> FALSE','expresion',1,'p_false','grammar.py',505),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_identificador','grammar.py',508),
  ('expresion -> CADENA','expresion',1,'p_cadena','grammar.py',511),
  ('expresion -> CHART','expresion',1,'p_chart','grammar.py',514),
]
