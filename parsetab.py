
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTTleftIGUALACIONDIREFENCIACIONMENORQMENORIGUALMAYORQMAYORIGUALleftMASMENOSleftDIVPORMODULOleftPOTleftMASMASMENOSMENOSrightUMENOSAND BREAK CADENA CASE CHAR CHART COMA COMILLAS COMILLASIMPLE CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DECREMENTO DEFAULT DIREFENCIACION DIV DOSPUNTOS DOUBLE ELSE ENTERO ESPBARRAINVERTIVA ESPCOMILLAS ESPCOMILLASIMPLE ESPLINEA ESPRETORNO ESPTAB FALSE FOR FUNC IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LENGTH LLAVE_ABRE LLAVE_CIERRA MAIN MAS MAYORIGUAL MAYORQ MENORIGUAL MENORQ MENOS MODULO NEW NOT NULL OR PARENTESIS_ABRE PARENTESIS_CIERRA POR POT PRINT PTCOMA READ RETURN STRING SWITCH TOLOWER TOUPPER TRUE VAR WHILEinit : instrucciones instrucciones : instrucciones instruccion instrucciones    :  instruccion\n    instruccion : variables\n                | if\n                | switch\n                | while\n                | for\n                | funciones \n                | print\n                | break\n\n    instruccion        : error PTCOMA\n    variables : var IDENTIFICADOR finInstruccion\n     variables : var IDENTIFICADOR  IGUAL expresion  finInstruccion  variables : var IDENTIFICADOR  IGUAL NULL  finInstruccion  variables : IDENTIFICADOR IGUAL expresion finInstruccion  variables : IDENTIFICADOR  IGUAL NULL  finInstruccion  var : VAR  variables : IDENTIFICADOR INCREMENTO finInstruccion  variables : IDENTIFICADOR DECREMENTO finInstruccion \n    if : IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA  \n     if : IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA\n     if :  IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if  switch : SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA  switch : SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA  switch : SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE  default LLAVE_CIERRA  listacases : listacases case  listacases :  case  case : CASE expresion DOSPUNTOS instrucciones  default : DEFAULT DOSPUNTOS instrucciones  while : WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA  for : FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA  LLAVE_ABRE instrucciones LLAVE_CIERRA\n     for : FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA  LLAVE_ABRE instrucciones LLAVE_CIERRA\n     declaracionfor1 : VAR IDENTIFICADOR IGUAL expresion    declaracionfor2 : IDENTIFICADOR IGUAL expresion   actualizacion : IDENTIFICADOR INCREMENTO  actualizacion :  IDENTIFICADOR DECREMENTO  actualizacion :   IDENTIFICADOR IGUAL expresion \n    funciones : FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA\n    \n    parametrosf : STRING IDENTIFICADOR COMA parametrosf\n                | STRING IDENTIFICADOR \n                | INT IDENTIFICADOR COMA parametrosf\n                | INT IDENTIFICADOR\n                | CHAR IDENTIFICADOR COMA parametrosf\n                | CHAR IDENTIFICADOR\n                | DOUBLE IDENTIFICADOR COMA parametrosf\n                | DOUBLE IDENTIFICADOR\n     print : PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion  break : BREAK finInstruccion  finInstruccion : PTCOMA\n                    |  expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIV expresion\n            | expresion POT  expresion\n            | expresion MODULO expresion\n            | expresion IGUALACION expresion\n            | expresion DIREFENCIACION expresion\n            | expresion MAYORQ expresion\n            | expresion MENORQ expresion\n            | expresion MAYORIGUAL expresion\n            | expresion MENORIGUAL expresion  \n            | expresion OR expresion  \n            | expresion AND expresion \n    \n    expresion : MENOS expresion %prec UMENOS\n                | NOT expresion %prec NOTT\n     expresion : IDENTIFICADOR INCREMENTO %prec MASMAS expresion : IDENTIFICADOR DECREMENTO %prec MENOSMENOS \n    expresion : PARENTESIS_ABRE expresion PARENTESIS_CIERRA\n     expresion : ENTERO  expresion : DECIMAL  expresion : TRUE  expresion : FALSE  expresion : IDENTIFICADOR  expresion : CADENA  expresion : CHART '
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,12,12,-48,12,12,-21,-24,-26,12,-31,-39,-25,12,12,12,-23,12,12,12,12,12,12,-22,-32,-33,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,10,11,13,19,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,120,127,128,133,134,135,136,143,144,147,148,150,154,160,161,162,166,168,169,170,171,173,174,175,176,177,178,179,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,25,33,-51,-18,-2,-12,-51,39,-51,-51,39,39,39,59,39,-49,-50,-13,39,-75,-51,-51,39,39,39,-71,-72,-73,-74,-76,-77,-19,-20,90,-51,-51,-68,-69,-16,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-17,-66,-67,39,39,39,123,124,125,126,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,14,14,39,-48,14,39,14,152,152,-21,-24,-26,14,-31,-39,-25,14,14,39,14,-23,14,14,14,14,14,14,-22,-32,-33,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,159,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,15,15,-48,15,15,-21,-24,-26,15,-31,-39,15,-25,15,15,15,-23,15,15,15,15,15,15,-22,-32,-33,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,16,16,-48,16,16,-21,-24,-26,16,-31,-39,-25,16,16,16,-23,16,16,16,16,16,16,-22,-32,-33,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,17,17,-48,17,17,-21,-24,-26,17,-31,-39,-25,17,17,17,-23,17,17,17,17,17,17,-22,-32,-33,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,18,18,-48,18,18,-21,-24,-26,18,-31,-39,-25,18,18,18,-23,18,18,18,18,18,18,-22,-32,-33,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,19,19,-48,19,19,-21,-24,-26,19,-31,-39,-25,19,19,19,-23,19,19,19,19,19,19,-22,-32,-33,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,20,20,-48,20,20,-21,-24,-26,20,-31,-39,-25,20,20,20,-23,20,20,20,20,20,20,-22,-32,-33,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,21,21,-48,21,21,-21,-24,-26,21,-31,-39,-25,21,21,21,-23,21,21,21,21,21,21,-22,-32,-33,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,32,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,127,128,134,143,144,147,148,150,154,160,161,162,168,169,170,171,173,174,175,176,177,178,179,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,58,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,22,22,-48,22,22,-21,-24,-26,22,-31,-39,-25,22,22,22,-23,22,22,22,22,22,22,-22,-32,-33,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,143,144,147,150,154,160,169,177,178,179,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,-48,-21,-24,-26,-31,-39,-25,-23,-22,-32,-33,]),'LLAVE_CIERRA':([3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,127,128,129,130,131,134,138,143,144,145,146,147,150,154,160,161,169,170,174,175,176,177,178,179,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,-48,143,144,147,-28,150,154,-21,-24,160,-27,-26,-31,-39,-25,-30,-23,-29,177,178,179,-22,-32,-33,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,127,129,131,143,144,146,147,150,154,160,169,170,177,178,179,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,132,-48,132,-28,-21,-24,-27,-26,-31,-39,-25,-23,-29,-22,-32,-33,]),'CASE':([3,4,5,6,7,8,9,10,11,21,23,24,25,27,28,35,36,37,39,40,41,45,46,47,48,49,50,51,52,62,63,64,65,66,81,82,83,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,127,129,131,143,144,146,147,150,154,160,169,170,177,178,179,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-51,-2,-12,-51,-51,-51,-49,-50,-13,-75,-51,-51,-71,-72,-73,-74,-76,-77,-19,-20,-51,-51,-68,-69,-16,-17,-66,-67,-51,-14,-15,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,133,-48,133,-28,-21,-24,-27,-26,-31,-39,-25,-23,-29,-22,-32,-33,]),'PTCOMA':([12,21,25,27,28,39,40,41,45,46,47,48,49,50,56,57,62,63,64,65,82,83,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,],[24,36,36,36,36,-75,36,36,-71,-72,-73,-74,-76,-77,88,89,36,36,-68,-69,-66,-67,36,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,135,136,-35,-34,]),'IGUAL':([14,25,59,90,152,],[26,38,91,120,166,]),'INCREMENTO':([14,39,152,],[27,64,164,]),'DECREMENTO':([14,39,152,],[28,65,165,]),'PARENTESIS_ABRE':([15,16,17,18,20,26,29,30,31,33,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[29,30,31,32,34,44,44,44,44,60,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NULL':([26,38,],[41,63,]),'MENOS':([26,29,30,31,34,38,39,40,42,43,44,45,46,47,48,49,50,53,54,55,61,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,88,89,91,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,120,121,133,137,149,166,172,],[42,42,42,42,42,42,-75,68,42,42,42,-71,-72,-73,-74,-76,-77,68,68,68,68,68,-68,-69,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-66,68,68,42,42,42,-52,-53,-54,-55,-56,-57,68,68,68,68,68,68,68,68,-70,68,68,42,68,42,68,68,42,68,]),'NOT':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ENTERO':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'DECIMAL':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'TRUE':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FALSE':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'CADENA':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'CHART':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'MAS':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,67,-71,-72,-73,-74,-76,-77,67,67,67,67,67,-68,-69,-66,67,67,-52,-53,-54,-55,-56,-57,67,67,67,67,67,67,67,67,-70,67,67,67,67,67,67,]),'POR':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,69,-71,-72,-73,-74,-76,-77,69,69,69,69,69,-68,-69,-66,69,69,69,69,-54,-55,-56,-57,69,69,69,69,69,69,69,69,-70,69,69,69,69,69,69,]),'DIV':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,70,-71,-72,-73,-74,-76,-77,70,70,70,70,70,-68,-69,-66,70,70,70,70,-54,-55,-56,-57,70,70,70,70,70,70,70,70,-70,70,70,70,70,70,70,]),'POT':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,71,-71,-72,-73,-74,-76,-77,71,71,71,71,71,-68,-69,-66,71,71,71,71,71,71,-56,71,71,71,71,71,71,71,71,71,-70,71,71,71,71,71,71,]),'MODULO':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,72,-71,-72,-73,-74,-76,-77,72,72,72,72,72,-68,-69,-66,72,72,72,72,-54,-55,-56,-57,72,72,72,72,72,72,72,72,-70,72,72,72,72,72,72,]),'IGUALACION':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,73,-71,-72,-73,-74,-76,-77,73,73,73,73,73,-68,-69,-66,73,73,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,73,73,-70,73,73,73,73,73,73,]),'DIREFENCIACION':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,74,-71,-72,-73,-74,-76,-77,74,74,74,74,74,-68,-69,-66,74,74,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,74,74,-70,74,74,74,74,74,74,]),'MAYORQ':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,75,-71,-72,-73,-74,-76,-77,75,75,75,75,75,-68,-69,-66,75,75,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,75,75,-70,75,75,75,75,75,75,]),'MENORQ':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,76,-71,-72,-73,-74,-76,-77,76,76,76,76,76,-68,-69,-66,76,76,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,76,76,-70,76,76,76,76,76,76,]),'MAYORIGUAL':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,77,-71,-72,-73,-74,-76,-77,77,77,77,77,77,-68,-69,-66,77,77,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,77,77,-70,77,77,77,77,77,77,]),'MENORIGUAL':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,78,-71,-72,-73,-74,-76,-77,78,78,78,78,78,-68,-69,-66,78,78,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,78,78,-70,78,78,78,78,78,78,]),'OR':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,79,-71,-72,-73,-74,-76,-77,79,79,79,79,79,-68,-69,-66,-67,79,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,79,79,79,79,79,79,]),'AND':([39,40,45,46,47,48,49,50,53,54,55,61,62,64,65,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,121,137,149,172,],[-75,80,-71,-72,-73,-74,-76,-77,80,80,80,80,80,-68,-69,-66,-67,80,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,80,-65,-70,80,80,80,80,80,80,]),'PARENTESIS_CIERRA':([39,45,46,47,48,49,50,53,54,55,61,64,65,82,83,84,92,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,123,124,125,126,151,153,155,156,157,158,164,165,172,],[-75,-71,-72,-73,-74,-76,-77,85,86,87,97,-68,-69,-66,-67,114,122,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,-41,-43,-45,-47,163,167,-40,-42,-44,-46,-36,-37,-38,]),'DOSPUNTOS':([39,45,46,47,48,49,50,64,65,82,83,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,132,149,],[-75,-71,-72,-73,-74,-76,-77,-68,-69,-66,-67,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-70,148,162,]),'STRING':([60,139,140,141,142,],[93,93,93,93,93,]),'INT':([60,139,140,141,142,],[94,94,94,94,94,]),'CHAR':([60,139,140,141,142,],[95,95,95,95,95,]),'DOUBLE':([60,139,140,141,142,],[96,96,96,96,96,]),'LLAVE_ABRE':([85,86,87,122,159,163,167,],[115,116,117,138,168,171,173,]),'COMA':([123,124,125,126,],[139,140,141,142,]),'ELSE':([143,],[159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,115,117,148,162,168,171,173,],[2,128,134,161,170,174,175,176,]),'instruccion':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[3,23,3,3,23,23,3,23,3,3,23,3,3,23,23,23,]),'variables':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'if':([0,2,115,117,128,134,148,159,161,162,168,170,171,173,174,175,176,],[5,5,5,5,5,5,5,169,5,5,5,5,5,5,5,5,5,]),'switch':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'for':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'funciones':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'print':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'break':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'var':([0,2,115,117,128,134,148,161,162,168,170,171,173,174,175,176,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'finInstruccion':([21,25,27,28,40,41,62,63,97,],[35,37,51,52,66,81,98,99,127,]),'expresion':([26,29,30,31,34,38,42,43,44,67,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,91,120,133,166,],[40,53,54,55,61,62,82,83,84,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,119,121,137,149,172,]),'declaracionfor1':([32,],[56,]),'declaracionfor2':([32,],[57,]),'parametrosf':([60,139,140,141,142,],[92,155,156,157,158,]),'listacases':([116,],[129,]),'default':([116,129,],[130,145,]),'case':([116,129,],[131,146,]),'actualizacion':([135,136,],[151,153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_inicio','grammar.py',272),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_main','grammar.py',276),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',282),
  ('instruccion -> variables','instruccion',1,'p_declaraciones','grammar.py',290),
  ('instruccion -> if','instruccion',1,'p_declaraciones','grammar.py',291),
  ('instruccion -> switch','instruccion',1,'p_declaraciones','grammar.py',292),
  ('instruccion -> while','instruccion',1,'p_declaraciones','grammar.py',293),
  ('instruccion -> for','instruccion',1,'p_declaraciones','grammar.py',294),
  ('instruccion -> funciones','instruccion',1,'p_declaraciones','grammar.py',295),
  ('instruccion -> print','instruccion',1,'p_declaraciones','grammar.py',296),
  ('instruccion -> break','instruccion',1,'p_declaraciones','grammar.py',297),
  ('instruccion -> error PTCOMA','instruccion',2,'p_instruccion_error','grammar.py',302),
  ('variables -> var IDENTIFICADOR finInstruccion','variables',3,'p_variables1','grammar.py',308),
  ('variables -> var IDENTIFICADOR IGUAL expresion finInstruccion','variables',5,'p_declara','grammar.py',312),
  ('variables -> var IDENTIFICADOR IGUAL NULL finInstruccion','variables',5,'p_asginacionnula1','grammar.py',317),
  ('variables -> IDENTIFICADOR IGUAL expresion finInstruccion','variables',4,'p_asgina','grammar.py',321),
  ('variables -> IDENTIFICADOR IGUAL NULL finInstruccion','variables',4,'p_asginacionnula2','grammar.py',325),
  ('var -> VAR','var',1,'p_var','grammar.py',329),
  ('variables -> IDENTIFICADOR INCREMENTO finInstruccion','variables',3,'p_incrementa','grammar.py',332),
  ('variables -> IDENTIFICADOR DECREMENTO finInstruccion','variables',3,'p_decrementa','grammar.py',336),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','if',7,'p_if1','grammar.py',342),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA','if',11,'p_ifelse','grammar.py',347),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if','if',9,'p_difelseif','grammar.py',352),
  ('switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases LLAVE_CIERRA','switch',7,'p_switch','grammar.py',358),
  ('switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE listacases default LLAVE_CIERRA','switch',8,'p_switch1','grammar.py',362),
  ('switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE default LLAVE_CIERRA','switch',7,'p_switch2','grammar.py',365),
  ('listacases -> listacases case','listacases',2,'p_listacases1','grammar.py',369),
  ('listacases -> case','listacases',1,'p_listacases2','grammar.py',375),
  ('case -> CASE expresion DOSPUNTOS instrucciones','case',4,'p_cases','grammar.py',379),
  ('default -> DEFAULT DOSPUNTOS instrucciones','default',3,'p_defauult','grammar.py',383),
  ('while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','while',7,'p_while','grammar.py',391),
  ('for -> FOR PARENTESIS_ABRE declaracionfor1 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','for',11,'p_for1','grammar.py',394),
  ('for -> FOR PARENTESIS_ABRE declaracionfor2 PTCOMA expresion PTCOMA actualizacion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','for',11,'p_for2','grammar.py',399),
  ('declaracionfor1 -> VAR IDENTIFICADOR IGUAL expresion','declaracionfor1',4,'p_declaracionfor1','grammar.py',405),
  ('declaracionfor2 -> IDENTIFICADOR IGUAL expresion','declaracionfor2',3,'p_declaracionfor2','grammar.py',409),
  ('actualizacion -> IDENTIFICADOR INCREMENTO','actualizacion',2,'p_actualizacionfor1','grammar.py',413),
  ('actualizacion -> IDENTIFICADOR DECREMENTO','actualizacion',2,'p_actualizacionfor2','grammar.py',416),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacionfor3','grammar.py',419),
  ('funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','funciones',7,'p_funciones','grammar.py',424),
  ('parametrosf -> STRING IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',428),
  ('parametrosf -> STRING IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',429),
  ('parametrosf -> INT IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',430),
  ('parametrosf -> INT IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',431),
  ('parametrosf -> CHAR IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',432),
  ('parametrosf -> CHAR IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',433),
  ('parametrosf -> DOUBLE IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',434),
  ('parametrosf -> DOUBLE IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',435),
  ('print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion','print',5,'p_print','grammar.py',438),
  ('break -> BREAK finInstruccion','break',2,'p_break','grammar.py',442),
  ('finInstruccion -> PTCOMA','finInstruccion',1,'p_finInstruccion','grammar.py',446),
  ('finInstruccion -> <empty>','finInstruccion',0,'p_finInstruccion','grammar.py',447),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',451),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',452),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',453),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','grammar.py',454),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion_binaria','grammar.py',455),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','grammar.py',456),
  ('expresion -> expresion IGUALACION expresion','expresion',3,'p_expresion_binaria','grammar.py',457),
  ('expresion -> expresion DIREFENCIACION expresion','expresion',3,'p_expresion_binaria','grammar.py',458),
  ('expresion -> expresion MAYORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',459),
  ('expresion -> expresion MENORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',460),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',461),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',462),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',463),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',464),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',497),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','grammar.py',498),
  ('expresion -> IDENTIFICADOR INCREMENTO','expresion',2,'p_incremento','grammar.py',506),
  ('expresion -> IDENTIFICADOR DECREMENTO','expresion',2,'p_decremento','grammar.py',511),
  ('expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA','expresion',3,'p_expresion_agrupacionn','grammar.py',517),
  ('expresion -> ENTERO','expresion',1,'p_entero','grammar.py',521),
  ('expresion -> DECIMAL','expresion',1,'p_decimal','grammar.py',524),
  ('expresion -> TRUE','expresion',1,'p_true','grammar.py',527),
  ('expresion -> FALSE','expresion',1,'p_false','grammar.py',530),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_identificador','grammar.py',533),
  ('expresion -> CADENA','expresion',1,'p_cadena','grammar.py',536),
  ('expresion -> CHART','expresion',1,'p_chart','grammar.py',539),
]
