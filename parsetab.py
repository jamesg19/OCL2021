
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTTleftIGUALACIONDIREFENCIACIONMENORQMENORIGUALMAYORQMAYORIGUALleftMASMENOSleftDIVPORMODULOleftPOTleftMASMASMENOSMENOSrightUMENOSAND BREAK CADENA CASE CHAR CHART COMA COMILLAS COMILLASIMPLE CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DECREMENTO DEFAULT DIREFENCIACION DIV DOSPUNTOS DOUBLE ELSE ENTERO ESPBARRAINVERTIVA ESPCOMILLAS ESPCOMILLASIMPLE ESPLINEA ESPRETORNO ESPTAB FALSE FOR FUNC IDENTIFICADOR IF IGUAL IGUALACION INCREMENTO INT LENGTH LLAVE_ABRE LLAVE_CIERRA MAIN MAS MAYORIGUAL MAYORQ MENORIGUAL MENORQ MENOS MODULO NEW NOT NULL OR PARENTESIS_ABRE PARENTESIS_CIERRA POR POT PRINT PTCOMA READ RETURN STRING SWITCH TOLOWER TOUPPER TRUE VAR WHILEinit : instrucciones instrucciones : instrucciones instruccion instrucciones    :  instruccion\n    instruccion : variables\n                | if\n                | switch\n                | while\n                | for\n                | funciones \n                | print\n\n    instruccion        : error  \n    variables : var IDENTIFICADOR finInstruccion\n     variables : var IDENTIFICADOR  IGUAL expresion  finInstruccion  variables : var IDENTIFICADOR  IGUAL NULL  finInstruccion  variables : IDENTIFICADOR IGUAL expresion finInstruccion  variables : IDENTIFICADOR  IGUAL NULL  finInstruccion  var : VAR  variables : IDENTIFICADOR incremento finInstruccion \n    incremento : INCREMENTO\n                | DECREMENTO\n    \n    if : IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA  \n    \n    if : IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA\n     if :  IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if \n    switch : SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE cases LLAVE_CIERRA\n    \n    cases : CASE expresion DOSPUNTOS break cases\n            | CASE expresion DOSPUNTOS break default\n    \n    default : DEFAULT DOSPUNTOS break\n     while : WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE  LLAVE_CIERRA \n    for : FOR PARENTESIS_ABRE condicionfor PARENTESIS_CIERRA  LLAVE_ABRE  LLAVE_CIERRA\n    \n    condicionfor : declaracionfor PTCOMA expresion PTCOMA actualizacion\n    \n    declaracionfor : VAR IDENTIFICADOR  IGUAL expresion  \n                | IDENTIFICADOR IGUAL expresion  \n    \n    actualizacion : IDENTIFICADOR incremento\n                    | IDENTIFICADOR IGUAL expresion\n    \n    funciones : FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA\n    \n    parametrosf : STRING IDENTIFICADOR COMA parametrosf\n                | STRING IDENTIFICADOR \n                | INT IDENTIFICADOR COMA parametrosf\n                | INT IDENTIFICADOR\n                | CHAR IDENTIFICADOR COMA parametrosf\n                | CHAR IDENTIFICADOR\n                | DOUBLE IDENTIFICADOR COMA parametrosf\n                | DOUBLE IDENTIFICADOR\n     print : PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion  break : BREAK finInstruccion\n            |  finInstruccion : PTCOMA\n                    | \n    expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIV expresion\n            | expresion POT  expresion\n            | expresion MODULO expresion\n            | expresion IGUALACION expresion\n            | expresion DIREFENCIACION expresion\n            | expresion MAYORQ expresion\n            | expresion MENORQ expresion\n            | expresion MAYORIGUAL expresion\n            | expresion MENORIGUAL expresion  \n            | expresion OR expresion  \n            | expresion AND expresion \n            \n              \n    \n    expresion : MENOS expresion %prec UMENOS\n                | NOT expresion %prec NOTT\n     expresion : IDENTIFICADOR INCREMENTO %prec MASMAS expresion : IDENTIFICADOR DECREMENTO %prec MENOSMENOS \n    expresion : PARENTESIS_ABRE expresion PARENTESIS_CIERRA\n     expresion : ENTERO  expresion : DECIMAL  expresion : TRUE  expresion : FALSE  expresion : IDENTIFICADOR  expresion : CADENA  expresion : CHART '
    
_lr_action_items = {'error':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[11,11,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,11,-44,11,-28,-29,-21,-24,-35,11,-23,11,-22,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,10,11,12,18,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,123,124,126,127,128,129,136,137,141,149,150,151,155,160,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,22,31,-17,-2,-48,36,-48,-19,-20,36,36,36,55,36,-12,36,-47,-72,-48,-48,36,36,36,-68,-69,-70,-71,-73,-74,-18,86,-48,-48,-65,-66,-15,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-16,-63,-64,36,36,119,120,121,122,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,13,36,-44,13,36,-28,-29,140,-21,-24,-35,36,13,-23,13,-22,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,146,150,151,155,160,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,14,-44,14,-28,-29,-21,-24,-35,14,14,-23,14,-22,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,15,-44,15,-28,-29,-21,-24,-35,15,-23,15,-22,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,16,-44,16,-28,-29,-21,-24,-35,16,-23,16,-22,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,17,-44,17,-28,-29,-21,-24,-35,17,-23,17,-22,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,18,-44,18,-28,-29,-21,-24,-35,18,-23,18,-22,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,19,-44,19,-28,-29,-21,-24,-35,19,-23,19,-22,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,30,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,123,124,127,128,136,137,141,150,151,155,160,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,54,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,20,-44,20,-28,-29,-21,-24,-35,20,-23,20,-22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,123,127,128,136,137,141,151,160,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,-44,-28,-29,-21,-24,-35,-23,-22,]),'LLAVE_CIERRA':([3,4,5,6,7,8,9,10,11,21,22,24,25,26,33,35,36,37,38,42,43,44,45,46,47,48,58,59,60,61,62,77,78,79,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,123,124,125,127,128,131,136,137,141,151,153,155,156,157,159,160,161,162,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-48,-48,-19,-20,-12,-47,-72,-48,-48,-68,-69,-70,-71,-73,-74,-18,-48,-48,-65,-66,-15,-16,-63,-64,-48,-13,-14,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,127,128,-44,136,137,-28,-29,141,-21,-24,-35,-23,-48,160,-25,-26,-45,-22,-46,-27,]),'IGUAL':([13,22,55,86,140,],[23,34,87,116,149,]),'INCREMENTO':([13,36,140,],[25,60,25,]),'DECREMENTO':([13,36,140,],[26,61,26,]),'PARENTESIS_ABRE':([14,15,16,17,19,23,27,28,29,31,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[27,28,29,30,32,41,41,41,41,56,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'PTCOMA':([22,24,25,26,36,37,38,42,43,44,45,46,47,53,58,59,60,61,78,79,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,153,],[35,35,-19,-20,-72,35,35,-68,-69,-70,-71,-73,-74,85,35,35,-65,-66,-63,-64,35,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,129,-32,-31,35,]),'NULL':([23,34,],[38,59,]),'MENOS':([23,27,28,29,32,34,36,37,39,40,41,42,43,44,45,46,47,49,50,51,57,58,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,85,87,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,116,117,126,130,138,149,154,],[39,39,39,39,39,39,-72,64,39,39,39,-68,-69,-70,-71,-73,-74,64,64,64,64,64,-65,-66,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-63,64,64,39,39,-49,-50,-51,-52,-53,-54,64,64,64,64,64,64,64,64,-67,64,39,64,39,64,64,39,64,]),'NOT':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ENTERO':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'DECIMAL':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'TRUE':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'FALSE':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'CADENA':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'CHART':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'PARENTESIS_CIERRA':([25,26,36,42,43,44,45,46,47,49,50,51,52,57,60,61,78,79,80,88,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,119,120,121,122,139,142,143,144,145,148,154,],[-19,-20,-72,-68,-69,-70,-71,-73,-74,81,82,83,84,93,-65,-66,-63,-64,110,118,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,-37,-39,-41,-43,-30,-36,-38,-40,-42,-33,-34,]),'CASE':([35,112,147,152,153,159,],[-47,126,-46,126,-48,-45,]),'DEFAULT':([35,147,152,153,159,],[-47,-46,158,-48,-45,]),'MAS':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,63,-68,-69,-70,-71,-73,-74,63,63,63,63,63,-65,-66,-63,63,63,-49,-50,-51,-52,-53,-54,63,63,63,63,63,63,63,63,-67,63,63,63,63,63,]),'POR':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,65,-68,-69,-70,-71,-73,-74,65,65,65,65,65,-65,-66,-63,65,65,65,65,-51,-52,-53,-54,65,65,65,65,65,65,65,65,-67,65,65,65,65,65,]),'DIV':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,66,-68,-69,-70,-71,-73,-74,66,66,66,66,66,-65,-66,-63,66,66,66,66,-51,-52,-53,-54,66,66,66,66,66,66,66,66,-67,66,66,66,66,66,]),'POT':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,67,-68,-69,-70,-71,-73,-74,67,67,67,67,67,-65,-66,-63,67,67,67,67,67,67,-53,67,67,67,67,67,67,67,67,67,-67,67,67,67,67,67,]),'MODULO':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,68,-68,-69,-70,-71,-73,-74,68,68,68,68,68,-65,-66,-63,68,68,68,68,-51,-52,-53,-54,68,68,68,68,68,68,68,68,-67,68,68,68,68,68,]),'IGUALACION':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,69,-68,-69,-70,-71,-73,-74,69,69,69,69,69,-65,-66,-63,69,69,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,69,69,-67,69,69,69,69,69,]),'DIREFENCIACION':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,70,-68,-69,-70,-71,-73,-74,70,70,70,70,70,-65,-66,-63,70,70,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,70,70,-67,70,70,70,70,70,]),'MAYORQ':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,71,-68,-69,-70,-71,-73,-74,71,71,71,71,71,-65,-66,-63,71,71,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,71,71,-67,71,71,71,71,71,]),'MENORQ':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,72,-68,-69,-70,-71,-73,-74,72,72,72,72,72,-65,-66,-63,72,72,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,72,72,-67,72,72,72,72,72,]),'MAYORIGUAL':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,73,-68,-69,-70,-71,-73,-74,73,73,73,73,73,-65,-66,-63,73,73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,73,73,-67,73,73,73,73,73,]),'MENORIGUAL':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,74,-68,-69,-70,-71,-73,-74,74,74,74,74,74,-65,-66,-63,74,74,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,74,74,-67,74,74,74,74,74,]),'OR':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,75,-68,-69,-70,-71,-73,-74,75,75,75,75,75,-65,-66,-63,-64,75,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,75,75,75,75,75,]),'AND':([36,37,42,43,44,45,46,47,49,50,51,57,58,60,61,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,115,117,130,138,154,],[-72,76,-68,-69,-70,-71,-73,-74,76,76,76,76,76,-65,-66,-63,-64,76,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,76,-62,-67,76,76,76,76,76,]),'DOSPUNTOS':([36,42,43,44,45,46,47,60,61,78,79,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,138,158,],[-72,-68,-69,-70,-71,-73,-74,-65,-66,-63,-64,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-67,147,161,]),'STRING':([56,132,133,134,135,],[89,89,89,89,89,]),'INT':([56,132,133,134,135,],[90,90,90,90,90,]),'CHAR':([56,132,133,134,135,],[91,91,91,91,91,]),'DOUBLE':([56,132,133,134,135,],[92,92,92,92,92,]),'LLAVE_ABRE':([81,82,83,84,118,146,],[111,112,113,114,131,150,]),'COMA':([119,120,121,122,],[132,133,134,135,]),'ELSE':([136,],[146,]),'BREAK':([147,161,],[153,153,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,111,150,],[2,124,155,]),'instruccion':([0,2,111,124,150,155,],[3,21,3,21,3,21,]),'variables':([0,2,111,124,150,155,],[4,4,4,4,4,4,]),'if':([0,2,111,124,146,150,155,],[5,5,5,5,151,5,5,]),'switch':([0,2,111,124,150,155,],[6,6,6,6,6,6,]),'while':([0,2,111,124,150,155,],[7,7,7,7,7,7,]),'for':([0,2,111,124,150,155,],[8,8,8,8,8,8,]),'funciones':([0,2,111,124,150,155,],[9,9,9,9,9,9,]),'print':([0,2,111,124,150,155,],[10,10,10,10,10,10,]),'var':([0,2,111,124,150,155,],[12,12,12,12,12,12,]),'incremento':([13,140,],[24,148,]),'finInstruccion':([22,24,37,38,58,59,93,153,],[33,48,62,77,94,95,123,159,]),'expresion':([23,27,28,29,32,34,39,40,41,63,64,65,66,67,68,69,70,71,72,73,74,75,76,85,87,116,126,149,],[37,49,50,51,57,58,78,79,80,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,117,130,138,154,]),'condicionfor':([30,],[52,]),'declaracionfor':([30,],[53,]),'parametrosf':([56,132,133,134,135,],[88,142,143,144,145,]),'cases':([112,152,],[125,156,]),'actualizacion':([129,],[139,]),'break':([147,161,],[152,162,]),'default':([152,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_inicio','grammar.py',272),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_main','grammar.py',276),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','grammar.py',282),
  ('instruccion -> variables','instruccion',1,'p_declaraciones','grammar.py',290),
  ('instruccion -> if','instruccion',1,'p_declaraciones','grammar.py',291),
  ('instruccion -> switch','instruccion',1,'p_declaraciones','grammar.py',292),
  ('instruccion -> while','instruccion',1,'p_declaraciones','grammar.py',293),
  ('instruccion -> for','instruccion',1,'p_declaraciones','grammar.py',294),
  ('instruccion -> funciones','instruccion',1,'p_declaraciones','grammar.py',295),
  ('instruccion -> print','instruccion',1,'p_declaraciones','grammar.py',296),
  ('instruccion -> error','instruccion',1,'p_instruccion_error','grammar.py',301),
  ('variables -> var IDENTIFICADOR finInstruccion','variables',3,'p_variables1','grammar.py',307),
  ('variables -> var IDENTIFICADOR IGUAL expresion finInstruccion','variables',5,'p_declara','grammar.py',311),
  ('variables -> var IDENTIFICADOR IGUAL NULL finInstruccion','variables',5,'p_asginacionnula1','grammar.py',316),
  ('variables -> IDENTIFICADOR IGUAL expresion finInstruccion','variables',4,'p_asgina','grammar.py',320),
  ('variables -> IDENTIFICADOR IGUAL NULL finInstruccion','variables',4,'p_asginacionnula2','grammar.py',324),
  ('var -> VAR','var',1,'p_var','grammar.py',328),
  ('variables -> IDENTIFICADOR incremento finInstruccion','variables',3,'p_incrementa','grammar.py',330),
  ('incremento -> INCREMENTO','incremento',1,'p_incrementos','grammar.py',334),
  ('incremento -> DECREMENTO','incremento',1,'p_incrementos','grammar.py',335),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA','if',7,'p_if1','grammar.py',341),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE LLAVE_ABRE instrucciones LLAVE_CIERRA','if',11,'p_ifelse','grammar.py',347),
  ('if -> IF PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE instrucciones LLAVE_CIERRA ELSE if','if',9,'p_difelseif','grammar.py',351),
  ('switch -> SWITCH PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE cases LLAVE_CIERRA','switch',7,'p_switch','grammar.py',356),
  ('cases -> CASE expresion DOSPUNTOS break cases','cases',5,'p_cases','grammar.py',360),
  ('cases -> CASE expresion DOSPUNTOS break default','cases',5,'p_cases','grammar.py',361),
  ('default -> DEFAULT DOSPUNTOS break','default',3,'p_default','grammar.py',365),
  ('while -> WHILE PARENTESIS_ABRE expresion PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','while',6,'p_while','grammar.py',368),
  ('for -> FOR PARENTESIS_ABRE condicionfor PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','for',6,'p_for','grammar.py',372),
  ('condicionfor -> declaracionfor PTCOMA expresion PTCOMA actualizacion','condicionfor',5,'p_forcondiciones','grammar.py',376),
  ('declaracionfor -> VAR IDENTIFICADOR IGUAL expresion','declaracionfor',4,'p_declaracionfor','grammar.py',380),
  ('declaracionfor -> IDENTIFICADOR IGUAL expresion','declaracionfor',3,'p_declaracionfor','grammar.py',381),
  ('actualizacion -> IDENTIFICADOR incremento','actualizacion',2,'p_actualizacionfor','grammar.py',385),
  ('actualizacion -> IDENTIFICADOR IGUAL expresion','actualizacion',3,'p_actualizacionfor','grammar.py',386),
  ('funciones -> FUNC IDENTIFICADOR PARENTESIS_ABRE parametrosf PARENTESIS_CIERRA LLAVE_ABRE LLAVE_CIERRA','funciones',7,'p_funciones','grammar.py',390),
  ('parametrosf -> STRING IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',394),
  ('parametrosf -> STRING IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',395),
  ('parametrosf -> INT IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',396),
  ('parametrosf -> INT IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',397),
  ('parametrosf -> CHAR IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',398),
  ('parametrosf -> CHAR IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',399),
  ('parametrosf -> DOUBLE IDENTIFICADOR COMA parametrosf','parametrosf',4,'p_parametrosf','grammar.py',400),
  ('parametrosf -> DOUBLE IDENTIFICADOR','parametrosf',2,'p_parametrosf','grammar.py',401),
  ('print -> PRINT PARENTESIS_ABRE expresion PARENTESIS_CIERRA finInstruccion','print',5,'p_print','grammar.py',404),
  ('break -> BREAK finInstruccion','break',2,'p_break','grammar.py',408),
  ('break -> <empty>','break',0,'p_break','grammar.py',409),
  ('finInstruccion -> PTCOMA','finInstruccion',1,'p_finInstruccion','grammar.py',413),
  ('finInstruccion -> <empty>','finInstruccion',0,'p_finInstruccion','grammar.py',414),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','grammar.py',419),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','grammar.py',420),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','grammar.py',421),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','grammar.py',422),
  ('expresion -> expresion POT expresion','expresion',3,'p_expresion_binaria','grammar.py',423),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','grammar.py',424),
  ('expresion -> expresion IGUALACION expresion','expresion',3,'p_expresion_binaria','grammar.py',425),
  ('expresion -> expresion DIREFENCIACION expresion','expresion',3,'p_expresion_binaria','grammar.py',426),
  ('expresion -> expresion MAYORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',427),
  ('expresion -> expresion MENORQ expresion','expresion',3,'p_expresion_binaria','grammar.py',428),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',429),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','grammar.py',430),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_binaria','grammar.py',431),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_binaria','grammar.py',432),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','grammar.py',461),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','grammar.py',462),
  ('expresion -> IDENTIFICADOR INCREMENTO','expresion',2,'p_incremento','grammar.py',470),
  ('expresion -> IDENTIFICADOR DECREMENTO','expresion',2,'p_decremento','grammar.py',475),
  ('expresion -> PARENTESIS_ABRE expresion PARENTESIS_CIERRA','expresion',3,'p_expresion_agrupacionn','grammar.py',481),
  ('expresion -> ENTERO','expresion',1,'p_entero','grammar.py',485),
  ('expresion -> DECIMAL','expresion',1,'p_decimal','grammar.py',488),
  ('expresion -> TRUE','expresion',1,'p_true','grammar.py',491),
  ('expresion -> FALSE','expresion',1,'p_false','grammar.py',494),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_identificador','grammar.py',497),
  ('expresion -> CADENA','expresion',1,'p_cadena','grammar.py',500),
  ('expresion -> CHART','expresion',1,'p_chart','grammar.py',503),
]
